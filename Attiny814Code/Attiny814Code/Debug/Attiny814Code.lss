
Attiny814Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00803e00  00001ac8  00001b7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ac2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  00009ac2  00001ac2  00001b76  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000062  00803e46  00803e46  00001bc2  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001bc2  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001bf4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002a8  00000000  00000000  00001c30  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005c37  00000000  00000000  00001ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000254b  00000000  00000000  00007b0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000177b  00000000  00000000  0000a05a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000488  00000000  00000000  0000b7d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002dd5  00000000  00000000  0000bc60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000e44  00000000  00000000  0000ea35  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001e8  00000000  00000000  0000f879  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	30 c0       	rjmp	.+96     	; 0x70 <__vector_7>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	4e c0       	rjmp	.+156    	; 0xbe <__vector_16>
      22:	5f c3       	rjmp	.+1726   	; 0x6e2 <__vector_17>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	cd bf       	out	0x3d, r28	; 61
      3c:	df e3       	ldi	r29, 0x3F	; 63
      3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
      40:	1e e3       	ldi	r17, 0x3E	; 62
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	be e3       	ldi	r27, 0x3E	; 62
      46:	e8 ec       	ldi	r30, 0xC8	; 200
      48:	fa e1       	ldi	r31, 0x1A	; 26
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	a6 34       	cpi	r26, 0x46	; 70
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	2e e3       	ldi	r18, 0x3E	; 62
      58:	a6 e4       	ldi	r26, 0x46	; 70
      5a:	be e3       	ldi	r27, 0x3E	; 62
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a8 3a       	cpi	r26, 0xA8	; 168
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	08 d1       	rcall	.+528    	; 0x278 <main>
      68:	2a cd       	rjmp	.-1452   	; 0xfffffabe <__eeprom_end+0xff7efabe>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      6c:	ac d3       	rcall	.+1880   	; 0x7c6 <system_init>

	touch_init();
      6e:	a3 c2       	rjmp	.+1350   	; 0x5b6 <touch_init>

00000070 <__vector_7>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_PIT_vect)
{
      70:	1f 92       	push	r1
      72:	0f 92       	push	r0
      74:	0f b6       	in	r0, 0x3f	; 63
      76:	0f 92       	push	r0
      78:	11 24       	eor	r1, r1
      7a:	2f 93       	push	r18
      7c:	3f 93       	push	r19
      7e:	4f 93       	push	r20
      80:	5f 93       	push	r21
      82:	6f 93       	push	r22
      84:	7f 93       	push	r23
      86:	8f 93       	push	r24
      88:	9f 93       	push	r25
      8a:	af 93       	push	r26
      8c:	bf 93       	push	r27
      8e:	ef 93       	push	r30
      90:	ff 93       	push	r31
	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      92:	03 d3       	rcall	.+1542   	; 0x69a <touch_timer_handler>
	RTC_CallBack();
      94:	7e d0       	rcall	.+252    	; 0x192 <RTC_CallBack>
	/* PIT interrupt flag has to be cleared manually */
	RTC.PITINTFLAGS = RTC_PI_bm;
      96:	81 e0       	ldi	r24, 0x01	; 1
      98:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
      9c:	ff 91       	pop	r31
      9e:	ef 91       	pop	r30
      a0:	bf 91       	pop	r27
      a2:	af 91       	pop	r26
      a4:	9f 91       	pop	r25
      a6:	8f 91       	pop	r24
      a8:	7f 91       	pop	r23
      aa:	6f 91       	pop	r22
      ac:	5f 91       	pop	r21
      ae:	4f 91       	pop	r20
      b0:	3f 91       	pop	r19
      b2:	2f 91       	pop	r18
      b4:	0f 90       	pop	r0
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	0f 90       	pop	r0
      ba:	1f 90       	pop	r1
      bc:	18 95       	reti

000000be <__vector_16>:

ISR(AC0_AC_vect)
{
      be:	1f 92       	push	r1
      c0:	0f 92       	push	r0
      c2:	0f b6       	in	r0, 0x3f	; 63
      c4:	0f 92       	push	r0
      c6:	11 24       	eor	r1, r1
      c8:	2f 93       	push	r18
      ca:	3f 93       	push	r19
      cc:	4f 93       	push	r20
      ce:	5f 93       	push	r21
      d0:	6f 93       	push	r22
      d2:	7f 93       	push	r23
      d4:	8f 93       	push	r24
      d6:	9f 93       	push	r25
      d8:	af 93       	push	r26
      da:	bf 93       	push	r27
      dc:	ef 93       	push	r30
      de:	ff 93       	push	r31
	uint8_t temp;
	/* Insert your AC interrupt handling code here */
	/* The interrupt flag has to be cleared manually */
	temp = AC0.STATUS;
      e0:	e0 e7       	ldi	r30, 0x70	; 112
      e2:	f6 e0       	ldi	r31, 0x06	; 6
      e4:	87 81       	ldd	r24, Z+7	; 0x07
	
	AC0.STATUS = AC_CMP_bm;
      e6:	81 e0       	ldi	r24, 0x01	; 1
      e8:	87 83       	std	Z+7, r24	; 0x07
	
	LowBattery();
      ea:	46 d0       	rcall	.+140    	; 0x178 <LowBattery>
}
      ec:	ff 91       	pop	r31
      ee:	ef 91       	pop	r30
      f0:	bf 91       	pop	r27
      f2:	af 91       	pop	r26
      f4:	9f 91       	pop	r25
      f6:	8f 91       	pop	r24
      f8:	7f 91       	pop	r23
      fa:	6f 91       	pop	r22
      fc:	5f 91       	pop	r21
      fe:	4f 91       	pop	r20
     100:	3f 91       	pop	r19
     102:	2f 91       	pop	r18
     104:	0f 90       	pop	r0
     106:	0f be       	out	0x3f, r0	; 63
     108:	0f 90       	pop	r0
     10a:	1f 90       	pop	r1
     10c:	18 95       	reti

0000010e <TOUCH_SetMeasureBusyFlag>:
	
	if (edgeDetectFreeze == 1)
		tempDelta = 0;
		
	return abs(tempDelta);
}
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	80 93 4f 3e 	sts	0x3E4F, r24	; 0x803e4f <measureBusyFlag>
     114:	08 95       	ret

00000116 <Radiotube_Handle>:
     116:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     11a:	81 30       	cpi	r24, 0x01	; 1
     11c:	71 f4       	brne	.+28     	; 0x13a <Radiotube_Handle+0x24>
     11e:	10 92 03 3e 	sts	0x3E03, r1	; 0x803e03 <RadiotubeState>
     122:	28 9a       	sbi	0x05, 0	; 5
     124:	2f e5       	ldi	r18, 0x5F	; 95
     126:	3a ee       	ldi	r19, 0xEA	; 234
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	21 50       	subi	r18, 0x01	; 1
     12c:	30 40       	sbci	r19, 0x00	; 0
     12e:	90 40       	sbci	r25, 0x00	; 0
     130:	e1 f7       	brne	.-8      	; 0x12a <Radiotube_Handle+0x14>
     132:	00 c0       	rjmp	.+0      	; 0x134 <Radiotube_Handle+0x1e>
     134:	00 00       	nop
     136:	28 98       	cbi	0x05, 0	; 5
     138:	0e c0       	rjmp	.+28     	; 0x156 <Radiotube_Handle+0x40>
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	80 93 03 3e 	sts	0x3E03, r24	; 0x803e03 <RadiotubeState>
     140:	29 9a       	sbi	0x05, 1	; 5
     142:	2f e5       	ldi	r18, 0x5F	; 95
     144:	3a ee       	ldi	r19, 0xEA	; 234
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	21 50       	subi	r18, 0x01	; 1
     14a:	30 40       	sbci	r19, 0x00	; 0
     14c:	90 40       	sbci	r25, 0x00	; 0
     14e:	e1 f7       	brne	.-8      	; 0x148 <Radiotube_Handle+0x32>
     150:	00 c0       	rjmp	.+0      	; 0x152 <Radiotube_Handle+0x3c>
     152:	00 00       	nop
     154:	29 98       	cbi	0x05, 1	; 5
     156:	80 93 56 3e 	sts	0x3E56, r24	; 0x803e56 <edgeDetectFreeze>
     15a:	08 95       	ret

0000015c <MCU_GoToSleep>:
     15c:	e0 e5       	ldi	r30, 0x50	; 80
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	90 81       	ld	r25, Z
     162:	99 7f       	andi	r25, 0xF9	; 249
     164:	89 2b       	or	r24, r25
     166:	80 83       	st	Z, r24
     168:	80 81       	ld	r24, Z
     16a:	81 60       	ori	r24, 0x01	; 1
     16c:	80 83       	st	Z, r24
     16e:	88 95       	sleep
     170:	80 81       	ld	r24, Z
     172:	8e 7f       	andi	r24, 0xFE	; 254
     174:	80 83       	st	Z, r24
     176:	08 95       	ret

00000178 <LowBattery>:
     178:	28 9a       	sbi	0x05, 0	; 5
     17a:	2f e5       	ldi	r18, 0x5F	; 95
     17c:	8a ee       	ldi	r24, 0xEA	; 234
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	21 50       	subi	r18, 0x01	; 1
     182:	80 40       	sbci	r24, 0x00	; 0
     184:	90 40       	sbci	r25, 0x00	; 0
     186:	e1 f7       	brne	.-8      	; 0x180 <LowBattery+0x8>
     188:	00 c0       	rjmp	.+0      	; 0x18a <LowBattery+0x12>
     18a:	00 00       	nop
     18c:	28 98       	cbi	0x05, 0	; 5
     18e:	a8 95       	wdr
     190:	fe cf       	rjmp	.-4      	; 0x18e <LowBattery+0x16>

00000192 <RTC_CallBack>:
     192:	80 91 48 3e 	lds	r24, 0x3E48	; 0x803e48 <AC_TimeCnt>
     196:	90 91 49 3e 	lds	r25, 0x3E49	; 0x803e49 <AC_TimeCnt+0x1>
     19a:	01 96       	adiw	r24, 0x01	; 1
     19c:	8f 31       	cpi	r24, 0x1F	; 31
     19e:	91 05       	cpc	r25, r1
     1a0:	28 f4       	brcc	.+10     	; 0x1ac <RTC_CallBack+0x1a>
     1a2:	80 93 48 3e 	sts	0x3E48, r24	; 0x803e48 <AC_TimeCnt>
     1a6:	90 93 49 3e 	sts	0x3E49, r25	; 0x803e49 <AC_TimeCnt+0x1>
     1aa:	18 c0       	rjmp	.+48     	; 0x1dc <RTC_CallBack+0x4a>
     1ac:	10 92 48 3e 	sts	0x3E48, r1	; 0x803e48 <AC_TimeCnt>
     1b0:	10 92 49 3e 	sts	0x3E49, r1	; 0x803e49 <AC_TimeCnt+0x1>
     1b4:	0e 9a       	sbi	0x01, 6	; 1
     1b6:	87 e8       	ldi	r24, 0x87	; 135
     1b8:	93 e1       	ldi	r25, 0x13	; 19
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <RTC_CallBack+0x28>
     1be:	00 c0       	rjmp	.+0      	; 0x1c0 <RTC_CallBack+0x2e>
     1c0:	00 00       	nop
     1c2:	b2 d2       	rcall	.+1380   	; 0x728 <AC_0_init>
     1c4:	87 e8       	ldi	r24, 0x87	; 135
     1c6:	93 e1       	ldi	r25, 0x13	; 19
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <RTC_CallBack+0x36>
     1cc:	00 c0       	rjmp	.+0      	; 0x1ce <RTC_CallBack+0x3c>
     1ce:	00 00       	nop
     1d0:	80 91 77 06 	lds	r24, 0x0677	; 0x800677 <__TEXT_REGION_LENGTH__+0x700677>
     1d4:	84 ff       	sbrs	r24, 4
     1d6:	d0 df       	rcall	.-96     	; 0x178 <LowBattery>
     1d8:	b1 d2       	rcall	.+1378   	; 0x73c <AC_0_Disable>
     1da:	0e 98       	cbi	0x01, 6	; 1
     1dc:	80 91 5d 3e 	lds	r24, 0x3E5D	; 0x803e5d <SensorState>
     1e0:	81 30       	cpi	r24, 0x01	; 1
     1e2:	49 f4       	brne	.+18     	; 0x1f6 <RTC_CallBack+0x64>
     1e4:	80 91 5b 3e 	lds	r24, 0x3E5B	; 0x803e5b <fingerOnCnt>
     1e8:	90 91 5c 3e 	lds	r25, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     1ec:	01 96       	adiw	r24, 0x01	; 1
     1ee:	80 93 5b 3e 	sts	0x3E5B, r24	; 0x803e5b <fingerOnCnt>
     1f2:	90 93 5c 3e 	sts	0x3E5C, r25	; 0x803e5c <fingerOnCnt+0x1>
     1f6:	80 91 56 3e 	lds	r24, 0x3E56	; 0x803e56 <edgeDetectFreeze>
     1fa:	81 30       	cpi	r24, 0x01	; 1
     1fc:	49 f4       	brne	.+18     	; 0x210 <RTC_CallBack+0x7e>
     1fe:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <edgeFreezeCnt>
     202:	90 91 55 3e 	lds	r25, 0x3E55	; 0x803e55 <edgeFreezeCnt+0x1>
     206:	01 96       	adiw	r24, 0x01	; 1
     208:	80 93 54 3e 	sts	0x3E54, r24	; 0x803e54 <edgeFreezeCnt>
     20c:	90 93 55 3e 	sts	0x3E55, r25	; 0x803e55 <edgeFreezeCnt+0x1>
     210:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <edgeFreezeCnt>
     214:	90 91 55 3e 	lds	r25, 0x3E55	; 0x803e55 <edgeFreezeCnt+0x1>
     218:	40 97       	sbiw	r24, 0x10	; 16
     21a:	30 f0       	brcs	.+12     	; 0x228 <RTC_CallBack+0x96>
     21c:	10 92 54 3e 	sts	0x3E54, r1	; 0x803e54 <edgeFreezeCnt>
     220:	10 92 55 3e 	sts	0x3E55, r1	; 0x803e55 <edgeFreezeCnt+0x1>
     224:	10 92 56 3e 	sts	0x3E56, r1	; 0x803e56 <edgeDetectFreeze>
     228:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     22c:	81 11       	cpse	r24, r1
     22e:	23 c0       	rjmp	.+70     	; 0x276 <RTC_CallBack+0xe4>
     230:	80 91 57 3e 	lds	r24, 0x3E57	; 0x803e57 <RadiotubeOnTime>
     234:	90 91 58 3e 	lds	r25, 0x3E58	; 0x803e58 <RadiotubeOnTime+0x1>
     238:	a0 91 59 3e 	lds	r26, 0x3E59	; 0x803e59 <RadiotubeOnTime+0x2>
     23c:	b0 91 5a 3e 	lds	r27, 0x3E5A	; 0x803e5a <RadiotubeOnTime+0x3>
     240:	01 96       	adiw	r24, 0x01	; 1
     242:	a1 1d       	adc	r26, r1
     244:	b1 1d       	adc	r27, r1
     246:	8a 3f       	cpi	r24, 0xFA	; 250
     248:	25 e1       	ldi	r18, 0x15	; 21
     24a:	92 07       	cpc	r25, r18
     24c:	a1 05       	cpc	r26, r1
     24e:	b1 05       	cpc	r27, r1
     250:	48 f4       	brcc	.+18     	; 0x264 <RTC_CallBack+0xd2>
     252:	80 93 57 3e 	sts	0x3E57, r24	; 0x803e57 <RadiotubeOnTime>
     256:	90 93 58 3e 	sts	0x3E58, r25	; 0x803e58 <RadiotubeOnTime+0x1>
     25a:	a0 93 59 3e 	sts	0x3E59, r26	; 0x803e59 <RadiotubeOnTime+0x2>
     25e:	b0 93 5a 3e 	sts	0x3E5A, r27	; 0x803e5a <RadiotubeOnTime+0x3>
     262:	08 95       	ret
     264:	10 92 57 3e 	sts	0x3E57, r1	; 0x803e57 <RadiotubeOnTime>
     268:	10 92 58 3e 	sts	0x3E58, r1	; 0x803e58 <RadiotubeOnTime+0x1>
     26c:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <RadiotubeOnTime+0x2>
     270:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <RadiotubeOnTime+0x3>
     274:	50 cf       	rjmp	.-352    	; 0x116 <Radiotube_Handle>
     276:	08 95       	ret

00000278 <main>:

int main(void)
{
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     278:	f9 de       	rcall	.-526    	; 0x6c <atmel_start_init>
	if (ignoreTime < 10)
	{
		ignoreTime++;
		return;
	}
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     27a:	19 e0       	ldi	r17, 0x09	; 9
     27c:	ca e0       	ldi	r28, 0x0A	; 10
     27e:	d0 e0       	ldi	r29, 0x00	; 0
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     280:	07 e0       	ldi	r16, 0x07	; 7
	//Radiotube_Test();
	
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
     282:	a8 95       	wdr
{
	uint8_t keyStatus = 0;
	uint8_t edgeStatus = EDGE_NONE;
	
	///* Does acquisition and post-processing */
	touch_process();
     284:	d8 d1       	rcall	.+944    	; 0x636 <touch_process>
	
	if (measurement_done_touch == 0)
     286:	80 91 5f 3e 	lds	r24, 0x3E5F	; 0x803e5f <measurement_done_touch>
     28a:	88 23       	and	r24, r24
     28c:	09 f4       	brne	.+2      	; 0x290 <main+0x18>
     28e:	47 c1       	rjmp	.+654    	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
	int16_t edgeGroupSum = 0;
	
	curDelta = get_sensor_node_signal(0);
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0c d2       	rcall	.+1048   	; 0x6ae <get_sensor_node_signal>
     296:	7c 01       	movw	r14, r24
	curDelta -= get_sensor_node_reference(0);
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	15 d2       	rcall	.+1066   	; 0x6c8 <get_sensor_node_reference>
     29e:	a7 01       	movw	r20, r14
     2a0:	48 1b       	sub	r20, r24
     2a2:	59 0b       	sbc	r21, r25
	
	tempDelta = curDelta - preFilteredDeltaValue;
     2a4:	20 91 50 3e 	lds	r18, 0x3E50	; 0x803e50 <preFilteredDeltaValue>
     2a8:	30 91 51 3e 	lds	r19, 0x3E51	; 0x803e51 <preFilteredDeltaValue+0x1>
     2ac:	7a 01       	movw	r14, r20
     2ae:	e2 1a       	sub	r14, r18
     2b0:	f3 0a       	sbc	r15, r19
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
     2b2:	b7 01       	movw	r22, r14
     2b4:	f7 fe       	sbrs	r15, 7
     2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <main+0x48>
     2b8:	66 27       	eor	r22, r22
     2ba:	77 27       	eor	r23, r23
     2bc:	6e 19       	sub	r22, r14
     2be:	7f 09       	sbc	r23, r15
     2c0:	a0 91 06 3e 	lds	r26, 0x3E06	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     2c4:	b0 91 07 3e 	lds	r27, 0x3E07	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
     2c8:	6a 17       	cp	r22, r26
     2ca:	7b 07       	cpc	r23, r27
     2cc:	18 f1       	brcs	.+70     	; 0x314 <main+0x9c>
	{
		/* this is an strong edge */
		if(tempDelta > 0)
     2ce:	1e 14       	cp	r1, r14
     2d0:	1f 04       	cpc	r1, r15
     2d2:	14 f0       	brlt	.+4      	; 0x2d8 <main+0x60>
			edgeStatus = EDGE_RISING;
		else 
			edgeStatus = EDGE_FALLING;
     2d4:	92 e0       	ldi	r25, 0x02	; 2
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <main+0x62>
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
	{
		/* this is an strong edge */
		if(tempDelta > 0)
			edgeStatus = EDGE_RISING;
     2d8:	91 e0       	ldi	r25, 0x01	; 1
		else 
			edgeStatus = EDGE_FALLING;
		
		filteredDeltaValue = curDelta;
     2da:	40 93 52 3e 	sts	0x3E52, r20	; 0x803e52 <filteredDeltaValue>
     2de:	50 93 53 3e 	sts	0x3E53, r21	; 0x803e53 <filteredDeltaValue+0x1>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     2e2:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     2e6:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup>
     2ea:	10 92 6b 3e 	sts	0x3E6B, r1	; 0x803e6b <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     2ee:	e0 91 4a 3e 	lds	r30, 0x3E4A	; 0x803e4a <TouchSignalGroupPtr>
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	8e 0f       	add	r24, r30
     2f6:	80 93 4a 3e 	sts	0x3E4A, r24	; 0x803e4a <TouchSignalGroupPtr>
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	ee 0f       	add	r30, r30
     2fe:	ff 1f       	adc	r31, r31
     300:	e5 5b       	subi	r30, 0xB5	; 181
     302:	f1 4c       	sbci	r31, 0xC1	; 193
     304:	60 83       	st	Z, r22
     306:	71 83       	std	Z+1, r23	; 0x01
	if (TouchSignalGroupPtr >= 2)
     308:	82 30       	cpi	r24, 0x02	; 2
     30a:	08 f4       	brcc	.+2      	; 0x30e <main+0x96>
     30c:	82 c0       	rjmp	.+260    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		TouchSignalGroupPtr = 0;
     30e:	10 92 4a 3e 	sts	0x3E4A, r1	; 0x803e4a <TouchSignalGroupPtr>
     312:	7f c0       	rjmp	.+254    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		
		filteredDeltaValue = curDelta;
		TOUCH_ClearEdgeGroup();
		TOUCH_TouchSignalCollect(abs(tempDelta));
	}
	else if (abs(tempDelta) >= WEAK_EDGE_THRESHOLD)
     314:	80 91 04 3e 	lds	r24, 0x3E04	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     318:	90 91 05 3e 	lds	r25, 0x3E05	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
     31c:	e0 91 46 3e 	lds	r30, 0x3E46	; 0x803e46 <__data_end>
     320:	68 17       	cp	r22, r24
     322:	79 07       	cpc	r23, r25
     324:	08 f4       	brcc	.+2      	; 0x328 <main+0xb0>
     326:	56 c0       	rjmp	.+172    	; 0x3d4 <main+0x15c>
	{
		/* this is an weak edge */
		
		filteredDeltaValue = (preFilteredDeltaValue * 5 + curDelta * 5)/10;
     328:	ca 01       	movw	r24, r20
     32a:	82 0f       	add	r24, r18
     32c:	93 1f       	adc	r25, r19
     32e:	97 fd       	sbrc	r25, 7
     330:	01 96       	adiw	r24, 0x01	; 1
     332:	95 95       	asr	r25
     334:	87 95       	ror	r24
     336:	80 93 52 3e 	sts	0x3E52, r24	; 0x803e52 <filteredDeltaValue>
     33a:	90 93 53 3e 	sts	0x3E53, r25	; 0x803e53 <filteredDeltaValue+0x1>
		
		/* if the sum of continuous four edges exceed the 
			strong threshold, an effective status should
			be return.*/
		edgeGroup[edgeGroupPtr++] = tempDelta;
     33e:	81 e0       	ldi	r24, 0x01	; 1
     340:	8e 0f       	add	r24, r30
     342:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	ee 0f       	add	r30, r30
     34a:	ff 1f       	adc	r31, r31
     34c:	e6 59       	subi	r30, 0x96	; 150
     34e:	f1 4c       	sbci	r31, 0xC1	; 193
     350:	e0 82       	st	Z, r14
     352:	f1 82       	std	Z+1, r15	; 0x01
		if (edgeGroupPtr >= 4)
     354:	84 30       	cpi	r24, 0x04	; 4
     356:	10 f0       	brcs	.+4      	; 0x35c <main+0xe4>
			edgeGroupPtr = 0;
     358:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
		
		for (i = 0; i < 4; i++)
			edgeGroupSum += edgeGroup[i];
     35c:	20 91 6a 3e 	lds	r18, 0x3E6A	; 0x803e6a <edgeGroup>
     360:	30 91 6b 3e 	lds	r19, 0x3E6B	; 0x803e6b <edgeGroup+0x1>
     364:	80 91 6c 3e 	lds	r24, 0x3E6C	; 0x803e6c <edgeGroup+0x2>
     368:	90 91 6d 3e 	lds	r25, 0x3E6D	; 0x803e6d <edgeGroup+0x3>
     36c:	82 0f       	add	r24, r18
     36e:	93 1f       	adc	r25, r19
     370:	20 91 6e 3e 	lds	r18, 0x3E6E	; 0x803e6e <edgeGroup+0x4>
     374:	30 91 6f 3e 	lds	r19, 0x3E6F	; 0x803e6f <edgeGroup+0x5>
     378:	82 0f       	add	r24, r18
     37a:	93 1f       	adc	r25, r19
     37c:	20 91 70 3e 	lds	r18, 0x3E70	; 0x803e70 <edgeGroup+0x6>
     380:	30 91 71 3e 	lds	r19, 0x3E71	; 0x803e71 <edgeGroup+0x7>
     384:	82 0f       	add	r24, r18
     386:	93 1f       	adc	r25, r19
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
     388:	9c 01       	movw	r18, r24
     38a:	97 ff       	sbrs	r25, 7
     38c:	04 c0       	rjmp	.+8      	; 0x396 <main+0x11e>
     38e:	22 27       	eor	r18, r18
     390:	33 27       	eor	r19, r19
     392:	28 1b       	sub	r18, r24
     394:	39 0b       	sbc	r19, r25
     396:	2a 17       	cp	r18, r26
     398:	3b 07       	cpc	r19, r27
     39a:	c0 f1       	brcs	.+112    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     39c:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     3a0:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup>
     3a4:	10 92 6b 3e 	sts	0x3E6B, r1	; 0x803e6b <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     3a8:	e0 91 4a 3e 	lds	r30, 0x3E4A	; 0x803e4a <TouchSignalGroupPtr>
     3ac:	41 e0       	ldi	r20, 0x01	; 1
     3ae:	4e 0f       	add	r20, r30
     3b0:	40 93 4a 3e 	sts	0x3E4A, r20	; 0x803e4a <TouchSignalGroupPtr>
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	ee 0f       	add	r30, r30
     3b8:	ff 1f       	adc	r31, r31
     3ba:	e5 5b       	subi	r30, 0xB5	; 181
     3bc:	f1 4c       	sbci	r31, 0xC1	; 193
     3be:	20 83       	st	Z, r18
     3c0:	31 83       	std	Z+1, r19	; 0x01
	if (TouchSignalGroupPtr >= 2)
     3c2:	42 30       	cpi	r20, 0x02	; 2
     3c4:	10 f0       	brcs	.+4      	; 0x3ca <main+0x152>
		TouchSignalGroupPtr = 0;
     3c6:	10 92 4a 3e 	sts	0x3E4A, r1	; 0x803e4a <TouchSignalGroupPtr>
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
     3ca:	18 16       	cp	r1, r24
     3cc:	19 06       	cpc	r1, r25
     3ce:	04 f1       	brlt	.+64     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
				edgeStatus = EDGE_RISING; 
			else
				edgeStatus = EDGE_FALLING;
     3d0:	92 e0       	ldi	r25, 0x02	; 2
     3d2:	1f c0       	rjmp	.+62     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		}
	}
	else
	{
		/* this should be suppressed */
		filteredDeltaValue = (preFilteredDeltaValue * 9 + curDelta)/10;
     3d4:	12 9f       	mul	r17, r18
     3d6:	c0 01       	movw	r24, r0
     3d8:	13 9f       	mul	r17, r19
     3da:	90 0d       	add	r25, r0
     3dc:	11 24       	eor	r1, r1
     3de:	84 0f       	add	r24, r20
     3e0:	95 1f       	adc	r25, r21
     3e2:	be 01       	movw	r22, r28
     3e4:	59 db       	rcall	.-2382   	; 0xfffffa98 <__eeprom_end+0xff7efa98>
     3e6:	60 93 52 3e 	sts	0x3E52, r22	; 0x803e52 <filteredDeltaValue>
     3ea:	70 93 53 3e 	sts	0x3E53, r23	; 0x803e53 <filteredDeltaValue+0x1>
		
		edgeGroup[edgeGroupPtr++] = 0;
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	8e 0f       	add	r24, r30
     3f2:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	ee 0f       	add	r30, r30
     3fa:	ff 1f       	adc	r31, r31
     3fc:	e6 59       	subi	r30, 0x96	; 150
     3fe:	f1 4c       	sbci	r31, 0xC1	; 193
     400:	10 82       	st	Z, r1
     402:	11 82       	std	Z+1, r1	; 0x01
		if (edgeGroupPtr >= 4)
     404:	84 30       	cpi	r24, 0x04	; 4
     406:	10 f0       	brcs	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
			edgeGroupPtr = 0;
     408:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>

static uint8_t TOUCH_DeltaEdgeDetct(void)
{
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	01 c0       	rjmp	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
				edgeStatus = EDGE_RISING; 
     410:	91 e0       	ldi	r25, 0x01	; 1
		edgeGroup[edgeGroupPtr++] = 0;
		if (edgeGroupPtr >= 4)
			edgeGroupPtr = 0;
	}
	
	preFilteredDeltaValue = filteredDeltaValue;
     412:	20 91 52 3e 	lds	r18, 0x3E52	; 0x803e52 <filteredDeltaValue>
     416:	30 91 53 3e 	lds	r19, 0x3E53	; 0x803e53 <filteredDeltaValue+0x1>
     41a:	20 93 50 3e 	sts	0x3E50, r18	; 0x803e50 <preFilteredDeltaValue>
     41e:	30 93 51 3e 	sts	0x3E51, r19	; 0x803e51 <preFilteredDeltaValue+0x1>
	if (measurement_done_touch == 0)
		return keyStatus;
		
	edgeStatus = TOUCH_DeltaEdgeDetct();
	
	if (edgeDetectFreeze == 1)
     422:	80 91 56 3e 	lds	r24, 0x3E56	; 0x803e56 <edgeDetectFreeze>
     426:	81 30       	cpi	r24, 0x01	; 1
     428:	09 f4       	brne	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42a:	79 c0       	rjmp	.+242    	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
		return keyStatus;

	switch(SensorState)
     42c:	80 91 5d 3e 	lds	r24, 0x3E5D	; 0x803e5d <SensorState>
     430:	88 23       	and	r24, r24
     432:	19 f0       	breq	.+6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     434:	81 30       	cpi	r24, 0x01	; 1
     436:	39 f0       	breq	.+14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     438:	6a c0       	rjmp	.+212    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
	{
		case FINGER_ON_DETECT:
			if (edgeStatus == EDGE_RISING)
     43a:	91 30       	cpi	r25, 0x01	; 1
     43c:	09 f0       	breq	.+2      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     43e:	67 c0       	rjmp	.+206    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
				SensorState = FINGER_OFF_DETECT;
     440:	90 93 5d 3e 	sts	0x3E5D, r25	; 0x803e5d <SensorState>
     444:	64 c0       	rjmp	.+200    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
		break;
		
		case FINGER_OFF_DETECT:
			/* state will roll back if rising edge appears. */
			if (edgeStatus == EDGE_RISING)
     446:	91 30       	cpi	r25, 0x01	; 1
     448:	29 f4       	brne	.+10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
				fingerOnCnt = 0;
     44a:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     44e:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
     452:	5d c0       	rjmp	.+186    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
			/* the time duration of effective touch should between 70ms to 1000ms */
			else if (fingerOnCnt >= FINGER_ON_MAXIMUM_TIME_MS(1000))
     454:	20 91 5b 3e 	lds	r18, 0x3E5B	; 0x803e5b <fingerOnCnt>
     458:	30 91 5c 3e 	lds	r19, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     45c:	2f 31       	cpi	r18, 0x1F	; 31
     45e:	31 05       	cpc	r19, r1
     460:	38 f0       	brcs	.+14     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
			{
				fingerOnCnt = 0;
     462:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     466:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     46a:	10 92 5d 3e 	sts	0x3E5D, r1	; 0x803e5d <SensorState>
     46e:	4f c0       	rjmp	.+158    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
			}
			else if (edgeStatus == EDGE_FALLING)
     470:	92 30       	cpi	r25, 0x02	; 2
     472:	09 f0       	breq	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     474:	4c c0       	rjmp	.+152    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
     476:	80 91 5b 3e 	lds	r24, 0x3E5B	; 0x803e5b <fingerOnCnt>
     47a:	90 91 5c 3e 	lds	r25, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     47e:	02 97       	sbiw	r24, 0x02	; 2
     480:	f0 f1       	brcs	.+124    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
}

uint8_t ignoreTime = 0;
static void TOUCH_TouchSignal(void)
{
	if (ignoreTime < 10)
     482:	80 91 47 3e 	lds	r24, 0x3E47	; 0x803e47 <ignoreTime>
     486:	8a 30       	cpi	r24, 0x0A	; 10
     488:	20 f4       	brcc	.+8      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
	{
		ignoreTime++;
     48a:	8f 5f       	subi	r24, 0xFF	; 255
     48c:	80 93 47 3e 	sts	0x3E47, r24	; 0x803e47 <ignoreTime>
     490:	34 c0       	rjmp	.+104    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
		return;
	}
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     492:	20 91 4b 3e 	lds	r18, 0x3E4B	; 0x803e4b <TouchSignalGroup>
     496:	30 91 4c 3e 	lds	r19, 0x3E4C	; 0x803e4c <TouchSignalGroup+0x1>
     49a:	80 91 4d 3e 	lds	r24, 0x3E4D	; 0x803e4d <TouchSignalGroup+0x2>
     49e:	90 91 4e 3e 	lds	r25, 0x3E4E	; 0x803e4e <TouchSignalGroup+0x3>
     4a2:	82 0f       	add	r24, r18
     4a4:	93 1f       	adc	r25, r19
     4a6:	96 95       	lsr	r25
     4a8:	87 95       	ror	r24
     4aa:	40 91 00 3e 	lds	r20, 0x3E00	; 0x803e00 <TouchSignal>
     4ae:	50 91 01 3e 	lds	r21, 0x3E01	; 0x803e01 <TouchSignal+0x1>
     4b2:	14 9f       	mul	r17, r20
     4b4:	90 01       	movw	r18, r0
     4b6:	15 9f       	mul	r17, r21
     4b8:	30 0d       	add	r19, r0
     4ba:	11 24       	eor	r1, r1
     4bc:	82 0f       	add	r24, r18
     4be:	93 1f       	adc	r25, r19
     4c0:	be 01       	movw	r22, r28
     4c2:	d6 da       	rcall	.-2644   	; 0xfffffa70 <__eeprom_end+0xff7efa70>
     4c4:	9b 01       	movw	r18, r22
     4c6:	60 93 00 3e 	sts	0x3E00, r22	; 0x803e00 <TouchSignal>
     4ca:	70 93 01 3e 	sts	0x3E01, r23	; 0x803e01 <TouchSignal+0x1>
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     4ce:	06 9f       	mul	r16, r22
     4d0:	c0 01       	movw	r24, r0
     4d2:	07 9f       	mul	r16, r23
     4d4:	90 0d       	add	r25, r0
     4d6:	11 24       	eor	r1, r1
     4d8:	be 01       	movw	r22, r28
     4da:	ca da       	rcall	.-2668   	; 0xfffffa70 <__eeprom_end+0xff7efa70>
     4dc:	60 93 06 3e 	sts	0x3E06, r22	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     4e0:	70 93 07 3e 	sts	0x3E07, r23	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
	WEAK_EDGE_THRESHOLD = TouchSignal * 4 / 10;
     4e4:	c9 01       	movw	r24, r18
     4e6:	88 0f       	add	r24, r24
     4e8:	99 1f       	adc	r25, r25
     4ea:	88 0f       	add	r24, r24
     4ec:	99 1f       	adc	r25, r25
     4ee:	be 01       	movw	r22, r28
     4f0:	bf da       	rcall	.-2690   	; 0xfffffa70 <__eeprom_end+0xff7efa70>
     4f2:	60 93 04 3e 	sts	0x3E04, r22	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     4f6:	70 93 05 3e 	sts	0x3E05, r23	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
			}
			else if (edgeStatus == EDGE_FALLING)
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
				{
					keyStatus = 1;
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	01 c0       	rjmp	.+2      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     4fe:	80 e0       	ldi	r24, 0x00	; 0
				{
					keyStatus = 1;
					TOUCH_TouchSignal();
				}
					
				fingerOnCnt = 0;
     500:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     504:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     508:	10 92 5d 3e 	sts	0x3E5D, r1	; 0x803e5d <SensorState>
     50c:	01 c0       	rjmp	.+2      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     50e:	80 e0       	ldi	r24, 0x00	; 0
			}
			break;
	}
	
	/* one cycle of measurement is done */
	measurement_done_touch = 0;
     510:	10 92 5f 3e 	sts	0x3E5F, r1	; 0x803e5f <measurement_done_touch>
	measureBusyFlag = 0;
     514:	10 92 4f 3e 	sts	0x3E4F, r1	; 0x803e4f <measureBusyFlag>
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
		
		if(TOUCH_TouchDetect() == 1)
     518:	81 30       	cpi	r24, 0x01	; 1
     51a:	09 f4       	brne	.+2      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
			Radiotube_Handle();
     51c:	fc dd       	rcall	.-1032   	; 0x116 <Radiotube_Handle>
		
		if (measureBusyFlag == 0)
     51e:	80 91 4f 3e 	lds	r24, 0x3E4F	; 0x803e4f <measureBusyFlag>
     522:	81 11       	cpse	r24, r1
     524:	ae ce       	rjmp	.-676    	; 0x282 <main+0xa>
			MCU_GoToSleep(SLEEP_MODE_PWR_DOWN);
     526:	84 e0       	ldi	r24, 0x04	; 4
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	18 de       	rcall	.-976    	; 0x15c <MCU_GoToSleep>
     52c:	aa ce       	rjmp	.-684    	; 0x282 <main+0xa>

0000052e <qtm_measure_complete_callback>:
void calibrate_node(uint16_t sensor_node)
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
     52e:	e3 e8       	ldi	r30, 0x83	; 131
     530:	fe e3       	ldi	r31, 0x3E	; 62
     532:	80 81       	ld	r24, Z
     534:	82 60       	ori	r24, 0x02	; 2
     536:	80 83       	st	Z, r24
     538:	08 95       	ret

0000053a <qtm_error_callback>:
     53a:	87 ff       	sbrs	r24, 7
     53c:	02 c0       	rjmp	.+4      	; 0x542 <qtm_error_callback+0x8>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	07 c0       	rjmp	.+14     	; 0x550 <qtm_error_callback+0x16>
     542:	86 fd       	sbrc	r24, 6
     544:	03 c0       	rjmp	.+6      	; 0x54c <qtm_error_callback+0x12>
     546:	10 92 5e 3e 	sts	0x3E5E, r1	; 0x803e5e <module_error_code>
     54a:	08 95       	ret
     54c:	8f 70       	andi	r24, 0x0F	; 15
     54e:	8e 5f       	subi	r24, 0xFE	; 254
     550:	80 93 5e 3e 	sts	0x3E5E, r24	; 0x803e5e <module_error_code>
     554:	08 95       	ret

00000556 <init_complete_callback>:
     556:	8f e7       	ldi	r24, 0x7F	; 127
     558:	9e e3       	ldi	r25, 0x3E	; 62
     55a:	96 d9       	rcall	.-3284   	; 0xfffff888 <__eeprom_end+0xff7ef888>
     55c:	60 e0       	ldi	r22, 0x00	; 0
     55e:	70 e0       	ldi	r23, 0x00	; 0
     560:	85 e3       	ldi	r24, 0x35	; 53
     562:	9e e3       	ldi	r25, 0x3E	; 62
     564:	fb d9       	rcall	.-3082   	; 0xfffff95c <__eeprom_end+0xff7ef95c>
     566:	60 e0       	ldi	r22, 0x00	; 0
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	85 e3       	ldi	r24, 0x35	; 53
     56c:	9e e3       	ldi	r25, 0x3E	; 62
     56e:	15 da       	rcall	.-3030   	; 0xfffff99a <__eeprom_end+0xff7ef99a>
     570:	4a e7       	ldi	r20, 0x7A	; 122
     572:	5e e3       	ldi	r21, 0x3E	; 62
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	80 e2       	ldi	r24, 0x20	; 32
     578:	9e e3       	ldi	r25, 0x3E	; 62
     57a:	f5 c1       	rjmp	.+1002   	; 0x966 <qtm_init_sensor_key>

0000057c <qtm_post_process_complete>:
     57c:	e0 91 20 3e 	lds	r30, 0x3E20	; 0x803e20 <qtlib_key_set1>
     580:	f0 91 21 3e 	lds	r31, 0x3E21	; 0x803e21 <qtlib_key_set1+0x1>
     584:	80 81       	ld	r24, Z
     586:	87 ff       	sbrs	r24, 7
     588:	08 c0       	rjmp	.+16     	; 0x59a <qtm_post_process_complete+0x1e>
     58a:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     58e:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     592:	80 81       	ld	r24, Z
     594:	84 60       	ori	r24, 0x04	; 4
     596:	80 83       	st	Z, r24
     598:	08 95       	ret
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	80 93 5f 3e 	sts	0x3E5F, r24	; 0x803e5f <measurement_done_touch>
     5a0:	08 95       	ret

000005a2 <Timer_set_period>:
     5a2:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
     5a6:	92 fd       	sbrc	r25, 2
     5a8:	fc cf       	rjmp	.-8      	; 0x5a2 <Timer_set_period>
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     5b0:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     5b4:	08 95       	ret

000005b6 <touch_init>:
     5b6:	80 e2       	ldi	r24, 0x20	; 32
     5b8:	f4 df       	rcall	.-24     	; 0x5a2 <Timer_set_period>
     5ba:	e4 e1       	ldi	r30, 0x14	; 20
     5bc:	f4 e0       	ldi	r31, 0x04	; 4
     5be:	80 81       	ld	r24, Z
     5c0:	87 7f       	andi	r24, 0xF7	; 247
     5c2:	80 83       	st	Z, r24
     5c4:	e3 e8       	ldi	r30, 0x83	; 131
     5c6:	fe e3       	ldi	r31, 0x3E	; 62
     5c8:	10 82       	st	Z, r1
     5ca:	8c e1       	ldi	r24, 0x1C	; 28
     5cc:	9e e3       	ldi	r25, 0x3E	; 62
     5ce:	81 83       	std	Z+1, r24	; 0x01
     5d0:	92 83       	std	Z+2, r25	; 0x02
     5d2:	88 e1       	ldi	r24, 0x18	; 24
     5d4:	9e e3       	ldi	r25, 0x3E	; 62
     5d6:	83 83       	std	Z+3, r24	; 0x03
     5d8:	94 83       	std	Z+4, r25	; 0x04
     5da:	80 e1       	ldi	r24, 0x10	; 16
     5dc:	9e e3       	ldi	r25, 0x3E	; 62
     5de:	85 83       	std	Z+5, r24	; 0x05
     5e0:	96 83       	std	Z+6, r25	; 0x06
     5e2:	84 e1       	ldi	r24, 0x14	; 20
     5e4:	9e e3       	ldi	r25, 0x3E	; 62
     5e6:	87 83       	std	Z+7, r24	; 0x07
     5e8:	90 87       	std	Z+8, r25	; 0x08
     5ea:	88 e0       	ldi	r24, 0x08	; 8
     5ec:	9e e3       	ldi	r25, 0x3E	; 62
     5ee:	81 87       	std	Z+9, r24	; 0x09
     5f0:	92 87       	std	Z+10, r25	; 0x0a
     5f2:	8c e0       	ldi	r24, 0x0C	; 12
     5f4:	9e e3       	ldi	r25, 0x3E	; 62
     5f6:	83 87       	std	Z+11, r24	; 0x0b
     5f8:	94 87       	std	Z+12, r25	; 0x0c
     5fa:	8e e8       	ldi	r24, 0x8E	; 142
     5fc:	9a e0       	ldi	r25, 0x0A	; 10
     5fe:	85 87       	std	Z+13, r24	; 0x0d
     600:	96 87       	std	Z+14, r25	; 0x0e
     602:	8b ea       	ldi	r24, 0xAB	; 171
     604:	92 e0       	ldi	r25, 0x02	; 2
     606:	87 87       	std	Z+15, r24	; 0x0f
     608:	90 8b       	std	Z+16, r25	; 0x10
     60a:	8d e9       	ldi	r24, 0x9D	; 157
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	81 8b       	std	Z+17, r24	; 0x11
     610:	92 8b       	std	Z+18, r25	; 0x12
     612:	87 e9       	ldi	r24, 0x97	; 151
     614:	92 e0       	ldi	r25, 0x02	; 2
     616:	83 8b       	std	Z+19, r24	; 0x13
     618:	94 8b       	std	Z+20, r25	; 0x14
     61a:	15 8a       	std	Z+21, r1	; 0x15
     61c:	16 8a       	std	Z+22, r1	; 0x16
     61e:	8e eb       	ldi	r24, 0xBE	; 190
     620:	92 e0       	ldi	r25, 0x02	; 2
     622:	87 8b       	std	Z+23, r24	; 0x17
     624:	90 8f       	std	Z+24, r25	; 0x18
     626:	cf 01       	movw	r24, r30
     628:	80 d5       	rcall	.+2816   	; 0x112a <qtm_binding_layer_init>
     62a:	7a d5       	rcall	.+2804   	; 0x1120 <qmt_get_binding_layer_ptr>
     62c:	80 93 81 3e 	sts	0x3E81, r24	; 0x803e81 <p_qtm_control>
     630:	90 93 82 3e 	sts	0x3E82, r25	; 0x803e82 <p_qtm_control+0x1>
     634:	08 95       	ret

00000636 <touch_process>:
     636:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     63a:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     63e:	80 81       	ld	r24, Z
     640:	80 ff       	sbrs	r24, 0
     642:	0b c0       	rjmp	.+22     	; 0x65a <touch_process+0x24>
     644:	80 e0       	ldi	r24, 0x00	; 0
     646:	cf d5       	rcall	.+2974   	; 0x11e6 <qtm_lib_start_acquisition>
     648:	81 11       	cpse	r24, r1
     64a:	07 c0       	rjmp	.+14     	; 0x65a <touch_process+0x24>
     64c:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     650:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     654:	80 81       	ld	r24, Z
     656:	8e 7f       	andi	r24, 0xFE	; 254
     658:	80 83       	st	Z, r24
     65a:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     65e:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     662:	80 81       	ld	r24, Z
     664:	81 ff       	sbrs	r24, 1
     666:	0e c0       	rjmp	.+28     	; 0x684 <touch_process+0x4e>
     668:	0d d6       	rcall	.+3098   	; 0x1284 <qtm_lib_acq_process>
     66a:	81 11       	cpse	r24, r1
     66c:	02 c0       	rjmp	.+4      	; 0x672 <touch_process+0x3c>
     66e:	12 d6       	rcall	.+3108   	; 0x1294 <qtm_lib_post_process>
     670:	02 c0       	rjmp	.+4      	; 0x676 <touch_process+0x40>
     672:	80 e8       	ldi	r24, 0x80	; 128
     674:	62 df       	rcall	.-316    	; 0x53a <qtm_error_callback>
     676:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     67a:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     67e:	80 81       	ld	r24, Z
     680:	8d 7f       	andi	r24, 0xFD	; 253
     682:	80 83       	st	Z, r24
     684:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     688:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     68c:	80 81       	ld	r24, Z
     68e:	82 ff       	sbrs	r24, 2
     690:	03 c0       	rjmp	.+6      	; 0x698 <touch_process+0x62>
     692:	8b 7f       	andi	r24, 0xFB	; 251
     694:	81 60       	ori	r24, 0x01	; 1
     696:	80 83       	st	Z, r24
     698:	08 95       	ret

0000069a <touch_timer_handler>:
     69a:	39 dd       	rcall	.-1422   	; 0x10e <TOUCH_SetMeasureBusyFlag>
     69c:	e3 e8       	ldi	r30, 0x83	; 131
     69e:	fe e3       	ldi	r31, 0x3E	; 62
     6a0:	80 81       	ld	r24, Z
     6a2:	81 60       	ori	r24, 0x01	; 1
     6a4:	80 83       	st	Z, r24
     6a6:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <measeurePeriod>
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	51 c1       	rjmp	.+674    	; 0x950 <qtm_update_qtlib_timer>

000006ae <get_sensor_node_signal>:
     6ae:	25 e0       	ldi	r18, 0x05	; 5
     6b0:	ac 01       	movw	r20, r24
     6b2:	24 9f       	mul	r18, r20
     6b4:	c0 01       	movw	r24, r0
     6b6:	25 9f       	mul	r18, r21
     6b8:	90 0d       	add	r25, r0
     6ba:	11 24       	eor	r1, r1
     6bc:	fc 01       	movw	r30, r24
     6be:	e6 58       	subi	r30, 0x86	; 134
     6c0:	f1 4c       	sbci	r31, 0xC1	; 193
     6c2:	81 81       	ldd	r24, Z+1	; 0x01
     6c4:	92 81       	ldd	r25, Z+2	; 0x02
     6c6:	08 95       	ret

000006c8 <get_sensor_node_reference>:
     6c8:	26 e0       	ldi	r18, 0x06	; 6
     6ca:	ac 01       	movw	r20, r24
     6cc:	24 9f       	mul	r18, r20
     6ce:	c0 01       	movw	r24, r0
     6d0:	25 9f       	mul	r18, r21
     6d2:	90 0d       	add	r25, r0
     6d4:	11 24       	eor	r1, r1
     6d6:	fc 01       	movw	r30, r24
     6d8:	e4 56       	subi	r30, 0x64	; 100
     6da:	f1 4c       	sbci	r31, 0xC1	; 193
     6dc:	84 81       	ldd	r24, Z+4	; 0x04
     6de:	95 81       	ldd	r25, Z+5	; 0x05
     6e0:	08 95       	ret

000006e2 <__vector_17>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     6e2:	1f 92       	push	r1
     6e4:	0f 92       	push	r0
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	0f 92       	push	r0
     6ea:	11 24       	eor	r1, r1
     6ec:	2f 93       	push	r18
     6ee:	3f 93       	push	r19
     6f0:	4f 93       	push	r20
     6f2:	5f 93       	push	r21
     6f4:	6f 93       	push	r22
     6f6:	7f 93       	push	r23
     6f8:	8f 93       	push	r24
     6fa:	9f 93       	push	r25
     6fc:	af 93       	push	r26
     6fe:	bf 93       	push	r27
     700:	ef 93       	push	r30
     702:	ff 93       	push	r31
	qtm_t81x_ptc_handler_eoc();
     704:	8b d9       	rcall	.-3306   	; 0xfffffa1c <__eeprom_end+0xff7efa1c>
}
     706:	ff 91       	pop	r31
     708:	ef 91       	pop	r30
     70a:	bf 91       	pop	r27
     70c:	af 91       	pop	r26
     70e:	9f 91       	pop	r25
     710:	8f 91       	pop	r24
     712:	7f 91       	pop	r23
     714:	6f 91       	pop	r22
     716:	5f 91       	pop	r21
     718:	4f 91       	pop	r20
     71a:	3f 91       	pop	r19
     71c:	2f 91       	pop	r18
     71e:	0f 90       	pop	r0
     720:	0f be       	out	0x3f, r0	; 63
     722:	0f 90       	pop	r0
     724:	1f 90       	pop	r1
     726:	18 95       	reti

00000728 <AC_0_init>:
 * \return Initialization status.
 */
int8_t AC_0_init()
{

	AC0.INTCTRL = 1 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     728:	e0 e7       	ldi	r30, 0x70	; 112
     72a:	f6 e0       	ldi	r31, 0x06	; 6
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	86 83       	std	Z+6, r24	; 0x06

	AC0.MUXCTRLA = 0 << AC_INVERT_bp    /* Invert AC Output: disabled */
     730:	82 e0       	ldi	r24, 0x02	; 2
     732:	82 83       	std	Z+2, r24	; 0x02
	               | AC_MUXNEG_VREF_gc  /* Voltage Reference */
	               | AC_MUXPOS_PIN0_gc; /* Positive Pin 0 */

	AC0.CTRLA = 1 << AC_ENABLE_bp       /* Enable: disabled */
     734:	81 e2       	ldi	r24, 0x21	; 33
     736:	80 83       	st	Z, r24
	            //| AC_LPMODE_EN_gc       /* Low power mode enabled */
	            | 0 << AC_OUTEN_bp      /* Output Buffer Enable: disabled */
	            | 0 << AC_RUNSTDBY_bp;  /* Run in Standby Mode: disabled */

	return 0;
}
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	08 95       	ret

0000073c <AC_0_Disable>:



void AC_0_Disable(void)
{
	AC0.INTCTRL = 0 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     73c:	e0 e7       	ldi	r30, 0x70	; 112
     73e:	f6 e0       	ldi	r31, 0x06	; 6
     740:	16 82       	std	Z+6, r1	; 0x06
	AC0.CTRLA = 0 << AC_ENABLE_bp;	/* Enable: disabled */
     742:	10 82       	st	Z, r1
     744:	08 95       	ret

00000746 <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	08 95       	ret

0000074a <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     74a:	42 e0       	ldi	r20, 0x02	; 2
     74c:	68 ed       	ldi	r22, 0xD8	; 216
     74e:	88 e7       	ldi	r24, 0x78	; 120
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	6d d0       	rcall	.+218    	; 0x82e <protected_write_io>
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	68 ed       	ldi	r22, 0xD8	; 216
     758:	81 e6       	ldi	r24, 0x61	; 97
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	68 d0       	rcall	.+208    	; 0x82e <protected_write_io>
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	68 ed       	ldi	r22, 0xD8	; 216
     762:	80 e6       	ldi	r24, 0x60	; 96
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	63 d0       	rcall	.+198    	; 0x82e <protected_write_io>
	ccp_write_io((void *)&(CLKCTRL.MCLKCTRLA),
	             CLKCTRL_CLKSEL_OSC20M_gc /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */
	                 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	/* wait for system oscillator changing to finish */
	while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {
     768:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x700063>
     76c:	80 fd       	sbrc	r24, 0
     76e:	fc cf       	rjmp	.-8      	; 0x768 <CLKCTRL_init+0x1e>
	}

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	08 95       	ret

00000774 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     774:	78 94       	sei

	return 0;
}
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	08 95       	ret

0000077a <mcu_init>:
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	false);

	USART_init();
     77a:	e0 e1       	ldi	r30, 0x10	; 16
     77c:	f4 e0       	ldi	r31, 0x04	; 4
     77e:	80 81       	ld	r24, Z
     780:	88 60       	ori	r24, 0x08	; 8
     782:	81 93       	st	Z+, r24
     784:	e8 31       	cpi	r30, 0x18	; 24
     786:	84 e0       	ldi	r24, 0x04	; 4
     788:	f8 07       	cpc	r31, r24
     78a:	c9 f7       	brne	.-14     	; 0x77e <mcu_init+0x4>
     78c:	e0 e3       	ldi	r30, 0x30	; 48
     78e:	f4 e0       	ldi	r31, 0x04	; 4
     790:	80 81       	ld	r24, Z
     792:	88 60       	ori	r24, 0x08	; 8
     794:	81 93       	st	Z+, r24
     796:	e8 33       	cpi	r30, 0x38	; 56
     798:	84 e0       	ldi	r24, 0x04	; 4
     79a:	f8 07       	cpc	r31, r24
     79c:	c9 f7       	brne	.-14     	; 0x790 <mcu_init+0x16>
     79e:	e0 e5       	ldi	r30, 0x50	; 80
     7a0:	f4 e0       	ldi	r31, 0x04	; 4
     7a2:	80 81       	ld	r24, Z
     7a4:	88 60       	ori	r24, 0x08	; 8
     7a6:	81 93       	st	Z+, r24
     7a8:	e8 35       	cpi	r30, 0x58	; 88
     7aa:	84 e0       	ldi	r24, 0x04	; 4
     7ac:	f8 07       	cpc	r31, r24
     7ae:	c9 f7       	brne	.-14     	; 0x7a2 <mcu_init+0x28>
     7b0:	08 95       	ret

000007b2 <AC_0_initialization>:
     7b2:	e7 e1       	ldi	r30, 0x17	; 23
     7b4:	f4 e0       	ldi	r31, 0x04	; 4
     7b6:	80 81       	ld	r24, Z
     7b8:	88 7f       	andi	r24, 0xF8	; 248
     7ba:	84 60       	ori	r24, 0x04	; 4
     7bc:	80 83       	st	Z, r24
     7be:	80 81       	ld	r24, Z
     7c0:	87 7f       	andi	r24, 0xF7	; 247
     7c2:	80 83       	st	Z, r24
     7c4:	08 95       	ret

000007c6 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     7c6:	d9 df       	rcall	.-78     	; 0x77a <mcu_init>
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7c8:	00 98       	cbi	0x00, 0	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7ca:	e0 e1       	ldi	r30, 0x10	; 16
     7cc:	f4 e0       	ldi	r31, 0x04	; 4
     7ce:	80 81       	ld	r24, Z
     7d0:	88 60       	ori	r24, 0x08	; 8
     7d2:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7d4:	02 98       	cbi	0x00, 2	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7d6:	e2 e1       	ldi	r30, 0x12	; 18
     7d8:	f4 e0       	ldi	r31, 0x04	; 4
     7da:	80 81       	ld	r24, Z
     7dc:	88 60       	ori	r24, 0x08	; 8
     7de:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7e0:	03 98       	cbi	0x00, 3	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7e2:	e3 e1       	ldi	r30, 0x13	; 19
     7e4:	f4 e0       	ldi	r31, 0x04	; 4
     7e6:	80 81       	ld	r24, Z
     7e8:	88 60       	ori	r24, 0x08	; 8
     7ea:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7ec:	05 98       	cbi	0x00, 5	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7ee:	e5 e1       	ldi	r30, 0x15	; 21
     7f0:	f4 e0       	ldi	r31, 0x04	; 4
     7f2:	80 81       	ld	r24, Z
     7f4:	88 60       	ori	r24, 0x08	; 8
     7f6:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     7f8:	06 9a       	sbi	0x00, 6	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     7fa:	0e 98       	cbi	0x01, 6	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     7fc:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     7fe:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     800:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     802:	29 98       	cbi	0x05, 1	; 5
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     804:	22 98       	cbi	0x04, 2	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     806:	e2 e3       	ldi	r30, 0x32	; 50
     808:	f4 e0       	ldi	r31, 0x04	; 4
     80a:	80 81       	ld	r24, Z
     80c:	88 60       	ori	r24, 0x08	; 8
     80e:	80 83       	st	Z, r24
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     810:	23 98       	cbi	0x04, 3	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     812:	e3 e3       	ldi	r30, 0x33	; 51
     814:	f4 e0       	ldi	r31, 0x04	; 4
     816:	80 81       	ld	r24, Z
     818:	88 60       	ori	r24, 0x08	; 8
     81a:	80 83       	st	Z, r24
	    // <id> pad_pull_config
	    // <PORT_PULL_OFF"> Off
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_UP);

	CLKCTRL_init();
     81c:	96 df       	rcall	.-212    	; 0x74a <CLKCTRL_init>

	RTC_init(1);
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	0a d0       	rcall	.+20     	; 0x836 <RTC_init>
	
	VREF_0_init();
     822:	1e d0       	rcall	.+60     	; 0x860 <VREF_0_init>
	
	//USART_initialization();
	
	AC_0_initialization();
     824:	c6 df       	rcall	.-116    	; 0x7b2 <AC_0_initialization>
	
	WDT_0_init();
     826:	24 d0       	rcall	.+72     	; 0x870 <WDT_0_init>

	CPUINT_init();
     828:	a5 df       	rcall	.-182    	; 0x774 <CPUINT_init>

	SLPCTRL_init();
     82a:	15 d0       	rcall	.+42     	; 0x856 <SLPCTRL_init>

	BOD_init();
     82c:	8c cf       	rjmp	.-232    	; 0x746 <BOD_init>

0000082e <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     82e:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     830:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     832:	40 83       	st	Z, r20
	ret                             // Return to caller
     834:	08 95       	ret

00000836 <RTC_init>:
int8_t RTC_init(uint8_t mode)
{
	//while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
	//}
	
	while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
     836:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__TEXT_REGION_LENGTH__+0x700151>
     83a:	81 11       	cpse	r24, r1
     83c:	fc cf       	rjmp	.-8      	; 0x836 <RTC_init>
	//| 1 << RTC_RTCEN_bp     /* Enable: enabled */
	//| 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	// RTC.PER = 0xffff; /* Period: 0xffff */

	RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz divided by 32 */
     83e:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__TEXT_REGION_LENGTH__+0x700147>
	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	//RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
	//| 0 << RTC_OVF_bp; /* Overflow Interrupt enable: disabled */

	 RTC.PITCTRLA = RTC_PERIOD_CYC1024_gc /* Off */
     842:	89 e4       	ldi	r24, 0x49	; 73
     844:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x700150>
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	 RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */
     848:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__TEXT_REGION_LENGTH__+0x700155>

	 RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__TEXT_REGION_LENGTH__+0x700152>

	return 0;
}
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	08 95       	ret

00000856 <SLPCTRL_init>:
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{

	SLPCTRL.CTRLA = 1 << SLPCTRL_SEN_bp       /* Sleep enable: enabled */
     856:	83 e0       	ldi	r24, 0x03	; 3
     858:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	                | SLPCTRL_SMODE_STDBY_gc; /* Power-down Mode */

	return 0;
}
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	08 95       	ret

00000860 <VREF_0_init>:
 * \return Initialization status.
 */
int8_t VREF_0_init()
{

	VREF_CTRLA = VREF_ADC0REFSEL_0V55_gc   /* Voltage reference at 0.55V */
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
	             | VREF_DAC0REFSEL_1V5_gc; /* Voltage reference at 1.5V */

	VREF_CTRLB = 0 << VREF_ADC0REFEN_bp    /* ADC0 reference enable: disabled */
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
	             | 1 << VREF_DAC0REFEN_bp; /* DAC0/AC0 reference enable: enabled */

	return 0;
}
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	08 95       	ret

00000870 <WDT_0_init>:
     870:	48 e0       	ldi	r20, 0x08	; 8
     872:	68 ed       	ldi	r22, 0xD8	; 216
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	da df       	rcall	.-76     	; 0x82e <protected_write_io>
	ccp_write_io((void *)&(WDT.CTRLA),
	             WDT_PERIOD_1KCLK_gc /* 128 cycles (128) */
	                 | WDT_WINDOW_OFF_gc /* Window mode off */);

	return 0;
}
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	08 95       	ret

0000087e <check_for_aks_block>:
     87e:	cf 92       	push	r12
     880:	df 92       	push	r13
     882:	ff 92       	push	r15
     884:	0f 93       	push	r16
     886:	1f 93       	push	r17
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	ec 01       	movw	r28, r24
     88e:	ae 81       	ldd	r26, Y+6	; 0x06
     890:	bf 81       	ldd	r27, Y+7	; 0x07
     892:	eb 01       	movw	r28, r22
     894:	cc 0f       	add	r28, r28
     896:	dd 1f       	adc	r29, r29
     898:	c6 0f       	add	r28, r22
     89a:	d7 1f       	adc	r29, r23
     89c:	ca 0f       	add	r28, r26
     89e:	db 1f       	adc	r29, r27
     8a0:	fa 80       	ldd	r15, Y+2	; 0x02
     8a2:	fc 01       	movw	r30, r24
     8a4:	44 81       	ldd	r20, Z+4	; 0x04
     8a6:	55 81       	ldd	r21, Z+5	; 0x05
     8a8:	e6 e0       	ldi	r30, 0x06	; 6
     8aa:	e6 9f       	mul	r30, r22
     8ac:	90 01       	movw	r18, r0
     8ae:	e7 9f       	mul	r30, r23
     8b0:	30 0d       	add	r19, r0
     8b2:	11 24       	eor	r1, r1
     8b4:	8a 01       	movw	r16, r20
     8b6:	02 0f       	add	r16, r18
     8b8:	13 1f       	adc	r17, r19
     8ba:	f8 01       	movw	r30, r16
     8bc:	22 81       	ldd	r18, Z+2	; 0x02
     8be:	33 81       	ldd	r19, Z+3	; 0x03
     8c0:	f9 01       	movw	r30, r18
     8c2:	21 81       	ldd	r18, Z+1	; 0x01
     8c4:	32 81       	ldd	r19, Z+2	; 0x02
     8c6:	f8 01       	movw	r30, r16
     8c8:	04 81       	ldd	r16, Z+4	; 0x04
     8ca:	15 81       	ldd	r17, Z+5	; 0x05
     8cc:	20 1b       	sub	r18, r16
     8ce:	31 0b       	sbc	r19, r17
     8d0:	e8 81       	ld	r30, Y
     8d2:	2e 1b       	sub	r18, r30
     8d4:	31 09       	sbc	r19, r1
     8d6:	ec 01       	movw	r28, r24
     8d8:	ea 81       	ldd	r30, Y+2	; 0x02
     8da:	fb 81       	ldd	r31, Y+3	; 0x03
     8dc:	00 81       	ld	r16, Z
     8de:	11 81       	ldd	r17, Z+1	; 0x01
     8e0:	fa 01       	movw	r30, r20
     8e2:	40 e0       	ldi	r20, 0x00	; 0
     8e4:	50 e0       	ldi	r21, 0x00	; 0
     8e6:	40 17       	cp	r20, r16
     8e8:	51 07       	cpc	r21, r17
     8ea:	39 f1       	breq	.+78     	; 0x93a <check_for_aks_block+0xbc>
     8ec:	46 17       	cp	r20, r22
     8ee:	57 07       	cpc	r21, r23
     8f0:	f9 f0       	breq	.+62     	; 0x930 <check_for_aks_block+0xb2>
     8f2:	12 96       	adiw	r26, 0x02	; 2
     8f4:	8c 91       	ld	r24, X
     8f6:	12 97       	sbiw	r26, 0x02	; 2
     8f8:	f8 12       	cpse	r15, r24
     8fa:	1a c0       	rjmp	.+52     	; 0x930 <check_for_aks_block+0xb2>
     8fc:	80 81       	ld	r24, Z
     8fe:	85 58       	subi	r24, 0x85	; 133
     900:	82 30       	cpi	r24, 0x02	; 2
     902:	e8 f0       	brcs	.+58     	; 0x93e <check_for_aks_block+0xc0>
     904:	c4 80       	ldd	r12, Z+4	; 0x04
     906:	d5 80       	ldd	r13, Z+5	; 0x05
     908:	82 81       	ldd	r24, Z+2	; 0x02
     90a:	93 81       	ldd	r25, Z+3	; 0x03
     90c:	ec 01       	movw	r28, r24
     90e:	89 81       	ldd	r24, Y+1	; 0x01
     910:	9a 81       	ldd	r25, Y+2	; 0x02
     912:	c8 16       	cp	r12, r24
     914:	d9 06       	cpc	r13, r25
     916:	60 f4       	brcc	.+24     	; 0x930 <check_for_aks_block+0xb2>
     918:	8c 19       	sub	r24, r12
     91a:	9d 09       	sbc	r25, r13
     91c:	cc 91       	ld	r28, X
     91e:	d0 e0       	ldi	r29, 0x00	; 0
     920:	c8 17       	cp	r28, r24
     922:	d9 07       	cpc	r29, r25
     924:	28 f4       	brcc	.+10     	; 0x930 <check_for_aks_block+0xb2>
     926:	8c 1b       	sub	r24, r28
     928:	9d 0b       	sbc	r25, r29
     92a:	28 17       	cp	r18, r24
     92c:	39 07       	cpc	r19, r25
     92e:	38 f0       	brcs	.+14     	; 0x93e <check_for_aks_block+0xc0>
     930:	4f 5f       	subi	r20, 0xFF	; 255
     932:	5f 4f       	sbci	r21, 0xFF	; 255
     934:	13 96       	adiw	r26, 0x03	; 3
     936:	36 96       	adiw	r30, 0x06	; 6
     938:	d6 cf       	rjmp	.-84     	; 0x8e6 <check_for_aks_block+0x68>
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	01 c0       	rjmp	.+2      	; 0x940 <check_for_aks_block+0xc2>
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	ff 90       	pop	r15
     94a:	df 90       	pop	r13
     94c:	cf 90       	pop	r12
     94e:	08 95       	ret

00000950 <qtm_update_qtlib_timer>:
     950:	20 91 60 3e 	lds	r18, 0x3E60	; 0x803e60 <qtm_local_ms_timecount>
     954:	30 91 61 3e 	lds	r19, 0x3E61	; 0x803e61 <qtm_local_ms_timecount+0x1>
     958:	82 0f       	add	r24, r18
     95a:	93 1f       	adc	r25, r19
     95c:	80 93 60 3e 	sts	0x3E60, r24	; 0x803e60 <qtm_local_ms_timecount>
     960:	90 93 61 3e 	sts	0x3E61, r25	; 0x803e61 <qtm_local_ms_timecount+0x1>
     964:	08 95       	ret

00000966 <qtm_init_sensor_key>:
     966:	00 97       	sbiw	r24, 0x00	; 0
     968:	d9 f0       	breq	.+54     	; 0x9a0 <qtm_init_sensor_key+0x3a>
     96a:	41 15       	cp	r20, r1
     96c:	51 05       	cpc	r21, r1
     96e:	c1 f0       	breq	.+48     	; 0x9a0 <qtm_init_sensor_key+0x3a>
     970:	26 e0       	ldi	r18, 0x06	; 6
     972:	62 9f       	mul	r22, r18
     974:	b0 01       	movw	r22, r0
     976:	11 24       	eor	r1, r1
     978:	dc 01       	movw	r26, r24
     97a:	14 96       	adiw	r26, 0x04	; 4
     97c:	ed 91       	ld	r30, X+
     97e:	fc 91       	ld	r31, X
     980:	15 97       	sbiw	r26, 0x05	; 5
     982:	e6 0f       	add	r30, r22
     984:	f7 1f       	adc	r31, r23
     986:	21 e0       	ldi	r18, 0x01	; 1
     988:	20 83       	st	Z, r18
     98a:	14 96       	adiw	r26, 0x04	; 4
     98c:	8d 91       	ld	r24, X+
     98e:	9c 91       	ld	r25, X
     990:	15 97       	sbiw	r26, 0x05	; 5
     992:	fc 01       	movw	r30, r24
     994:	e6 0f       	add	r30, r22
     996:	f7 1f       	adc	r31, r23
     998:	42 83       	std	Z+2, r20	; 0x02
     99a:	53 83       	std	Z+3, r21	; 0x03
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	08 95       	ret
     9a0:	8b e0       	ldi	r24, 0x0B	; 11
     9a2:	08 95       	ret

000009a4 <qtm_key_sensors_process>:
     9a4:	2f 92       	push	r2
     9a6:	3f 92       	push	r3
     9a8:	4f 92       	push	r4
     9aa:	5f 92       	push	r5
     9ac:	6f 92       	push	r6
     9ae:	7f 92       	push	r7
     9b0:	8f 92       	push	r8
     9b2:	9f 92       	push	r9
     9b4:	af 92       	push	r10
     9b6:	bf 92       	push	r11
     9b8:	cf 92       	push	r12
     9ba:	df 92       	push	r13
     9bc:	ef 92       	push	r14
     9be:	ff 92       	push	r15
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	00 97       	sbiw	r24, 0x00	; 0
     9ca:	09 f4       	brne	.+2      	; 0x9ce <qtm_key_sensors_process+0x2a>
     9cc:	7b c3       	rjmp	.+1782   	; 0x10c4 <qtm_key_sensors_process+0x720>
     9ce:	ec 01       	movw	r28, r24
     9d0:	a1 2c       	mov	r10, r1
     9d2:	b1 2c       	mov	r11, r1
     9d4:	81 2c       	mov	r8, r1
     9d6:	91 2c       	mov	r9, r1
     9d8:	21 2c       	mov	r2, r1
     9da:	d1 2c       	mov	r13, r1
     9dc:	33 e0       	ldi	r19, 0x03	; 3
     9de:	c3 2e       	mov	r12, r19
     9e0:	45 e8       	ldi	r20, 0x85	; 133
     9e2:	64 2e       	mov	r6, r20
     9e4:	56 e8       	ldi	r21, 0x86	; 134
     9e6:	75 2e       	mov	r7, r21
     9e8:	67 e0       	ldi	r22, 0x07	; 7
     9ea:	36 2e       	mov	r3, r22
     9ec:	72 e0       	ldi	r23, 0x02	; 2
     9ee:	47 2e       	mov	r4, r23
     9f0:	e8 e0       	ldi	r30, 0x08	; 8
     9f2:	5e 2e       	mov	r5, r30
     9f4:	ea 81       	ldd	r30, Y+2	; 0x02
     9f6:	fb 81       	ldd	r31, Y+3	; 0x03
     9f8:	80 81       	ld	r24, Z
     9fa:	91 81       	ldd	r25, Z+1	; 0x01
     9fc:	88 16       	cp	r8, r24
     9fe:	99 06       	cpc	r9, r25
     a00:	08 f0       	brcs	.+2      	; 0xa04 <qtm_key_sensors_process+0x60>
     a02:	a3 c1       	rjmp	.+838    	; 0xd4a <qtm_key_sensors_process+0x3a6>
     a04:	75 01       	movw	r14, r10
     a06:	ee 0c       	add	r14, r14
     a08:	ff 1c       	adc	r15, r15
     a0a:	0c 81       	ldd	r16, Y+4	; 0x04
     a0c:	1d 81       	ldd	r17, Y+5	; 0x05
     a0e:	0e 0d       	add	r16, r14
     a10:	1f 1d       	adc	r17, r15
     a12:	d8 01       	movw	r26, r16
     a14:	8c 91       	ld	r24, X
     a16:	84 30       	cpi	r24, 0x04	; 4
     a18:	09 f4       	brne	.+2      	; 0xa1c <qtm_key_sensors_process+0x78>
     a1a:	a1 c0       	rjmp	.+322    	; 0xb5e <qtm_key_sensors_process+0x1ba>
     a1c:	38 f4       	brcc	.+14     	; 0xa2c <qtm_key_sensors_process+0x88>
     a1e:	82 30       	cpi	r24, 0x02	; 2
     a20:	01 f1       	breq	.+64     	; 0xa62 <qtm_key_sensors_process+0xbe>
     a22:	08 f0       	brcs	.+2      	; 0xa26 <qtm_key_sensors_process+0x82>
     a24:	49 c0       	rjmp	.+146    	; 0xab8 <qtm_key_sensors_process+0x114>
     a26:	81 30       	cpi	r24, 0x01	; 1
     a28:	59 f0       	breq	.+22     	; 0xa40 <qtm_key_sensors_process+0x9c>
     a2a:	88 c1       	rjmp	.+784    	; 0xd3c <qtm_key_sensors_process+0x398>
     a2c:	85 38       	cpi	r24, 0x85	; 133
     a2e:	09 f4       	brne	.+2      	; 0xa32 <qtm_key_sensors_process+0x8e>
     a30:	c0 c0       	rjmp	.+384    	; 0xbb2 <qtm_key_sensors_process+0x20e>
     a32:	86 38       	cpi	r24, 0x86	; 134
     a34:	09 f4       	brne	.+2      	; 0xa38 <qtm_key_sensors_process+0x94>
     a36:	f4 c0       	rjmp	.+488    	; 0xc20 <qtm_key_sensors_process+0x27c>
     a38:	87 30       	cpi	r24, 0x07	; 7
     a3a:	09 f0       	breq	.+2      	; 0xa3e <qtm_key_sensors_process+0x9a>
     a3c:	7f c1       	rjmp	.+766    	; 0xd3c <qtm_key_sensors_process+0x398>
     a3e:	35 c1       	rjmp	.+618    	; 0xcaa <qtm_key_sensors_process+0x306>
     a40:	d8 01       	movw	r26, r16
     a42:	12 96       	adiw	r26, 0x02	; 2
     a44:	ed 91       	ld	r30, X+
     a46:	fc 91       	ld	r31, X
     a48:	13 97       	sbiw	r26, 0x03	; 3
     a4a:	80 81       	ld	r24, Z
     a4c:	8e 71       	andi	r24, 0x1E	; 30
     a4e:	09 f0       	breq	.+2      	; 0xa52 <qtm_key_sensors_process+0xae>
     a50:	67 c1       	rjmp	.+718    	; 0xd20 <qtm_key_sensors_process+0x37c>
     a52:	4c 92       	st	X, r4
     a54:	8c 81       	ldd	r24, Y+4	; 0x04
     a56:	9d 81       	ldd	r25, Y+5	; 0x05
     a58:	fc 01       	movw	r30, r24
     a5a:	ee 0d       	add	r30, r14
     a5c:	ff 1d       	adc	r31, r15
     a5e:	51 82       	std	Z+1, r5	; 0x01
     a60:	5f c1       	rjmp	.+702    	; 0xd20 <qtm_key_sensors_process+0x37c>
     a62:	f8 01       	movw	r30, r16
     a64:	21 81       	ldd	r18, Z+1	; 0x01
     a66:	22 23       	and	r18, r18
     a68:	29 f1       	breq	.+74     	; 0xab4 <qtm_key_sensors_process+0x110>
     a6a:	02 80       	ldd	r0, Z+2	; 0x02
     a6c:	f3 81       	ldd	r31, Z+3	; 0x03
     a6e:	e0 2d       	mov	r30, r0
     a70:	25 30       	cpi	r18, 0x05	; 5
     a72:	20 f0       	brcs	.+8      	; 0xa7c <qtm_key_sensors_process+0xd8>
     a74:	81 81       	ldd	r24, Z+1	; 0x01
     a76:	92 81       	ldd	r25, Z+2	; 0x02
     a78:	d8 01       	movw	r26, r16
     a7a:	0e c0       	rjmp	.+28     	; 0xa98 <qtm_key_sensors_process+0xf4>
     a7c:	d8 01       	movw	r26, r16
     a7e:	14 96       	adiw	r26, 0x04	; 4
     a80:	8d 91       	ld	r24, X+
     a82:	9c 91       	ld	r25, X
     a84:	15 97       	sbiw	r26, 0x05	; 5
     a86:	41 81       	ldd	r20, Z+1	; 0x01
     a88:	52 81       	ldd	r21, Z+2	; 0x02
     a8a:	84 17       	cp	r24, r20
     a8c:	95 07       	cpc	r25, r21
     a8e:	69 f0       	breq	.+26     	; 0xaaa <qtm_key_sensors_process+0x106>
     a90:	48 17       	cp	r20, r24
     a92:	59 07       	cpc	r21, r25
     a94:	30 f4       	brcc	.+12     	; 0xaa2 <qtm_key_sensors_process+0xfe>
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	14 96       	adiw	r26, 0x04	; 4
     a9a:	8d 93       	st	X+, r24
     a9c:	9c 93       	st	X, r25
     a9e:	15 97       	sbiw	r26, 0x05	; 5
     aa0:	04 c0       	rjmp	.+8      	; 0xaaa <qtm_key_sensors_process+0x106>
     aa2:	01 96       	adiw	r24, 0x01	; 1
     aa4:	f8 01       	movw	r30, r16
     aa6:	84 83       	std	Z+4, r24	; 0x04
     aa8:	95 83       	std	Z+5, r25	; 0x05
     aaa:	21 50       	subi	r18, 0x01	; 1
     aac:	d8 01       	movw	r26, r16
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	2c 93       	st	X, r18
     ab2:	36 c1       	rjmp	.+620    	; 0xd20 <qtm_key_sensors_process+0x37c>
     ab4:	f8 01       	movw	r30, r16
     ab6:	2f c1       	rjmp	.+606    	; 0xd16 <qtm_key_sensors_process+0x372>
     ab8:	d8 01       	movw	r26, r16
     aba:	14 96       	adiw	r26, 0x04	; 4
     abc:	2d 91       	ld	r18, X+
     abe:	3c 91       	ld	r19, X
     ac0:	15 97       	sbiw	r26, 0x05	; 5
     ac2:	12 96       	adiw	r26, 0x02	; 2
     ac4:	8d 91       	ld	r24, X+
     ac6:	9c 91       	ld	r25, X
     ac8:	13 97       	sbiw	r26, 0x03	; 3
     aca:	dc 01       	movw	r26, r24
     acc:	11 96       	adiw	r26, 0x01	; 1
     ace:	4d 91       	ld	r20, X+
     ad0:	5c 91       	ld	r21, X
     ad2:	12 97       	sbiw	r26, 0x02	; 2
     ad4:	24 17       	cp	r18, r20
     ad6:	35 07       	cpc	r19, r21
     ad8:	09 f4       	brne	.+2      	; 0xadc <qtm_key_sensors_process+0x138>
     ada:	30 c1       	rjmp	.+608    	; 0xd3c <qtm_key_sensors_process+0x398>
     adc:	8e 81       	ldd	r24, Y+6	; 0x06
     ade:	9f 81       	ldd	r25, Y+7	; 0x07
     ae0:	42 17       	cp	r20, r18
     ae2:	53 07       	cpc	r21, r19
     ae4:	e0 f4       	brcc	.+56     	; 0xb1e <qtm_key_sensors_process+0x17a>
     ae6:	24 1b       	sub	r18, r20
     ae8:	35 0b       	sbc	r19, r21
     aea:	dc 01       	movw	r26, r24
     aec:	aa 0d       	add	r26, r10
     aee:	bb 1d       	adc	r27, r11
     af0:	8c 91       	ld	r24, X
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	05 80       	ldd	r0, Z+5	; 0x05
     af6:	02 c0       	rjmp	.+4      	; 0xafc <qtm_key_sensors_process+0x158>
     af8:	95 95       	asr	r25
     afa:	87 95       	ror	r24
     afc:	0a 94       	dec	r0
     afe:	e2 f7       	brpl	.-8      	; 0xaf8 <qtm_key_sensors_process+0x154>
     b00:	99 27       	eor	r25, r25
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	08 f4       	brcc	.+2      	; 0xb0a <qtm_key_sensors_process+0x166>
     b08:	19 c1       	rjmp	.+562    	; 0xd3c <qtm_key_sensors_process+0x398>
     b0a:	84 81       	ldd	r24, Z+4	; 0x04
     b0c:	88 23       	and	r24, r24
     b0e:	09 f4       	brne	.+2      	; 0xb12 <qtm_key_sensors_process+0x16e>
     b10:	15 c1       	rjmp	.+554    	; 0xd3c <qtm_key_sensors_process+0x398>
     b12:	f8 01       	movw	r30, r16
     b14:	30 82       	st	Z, r3
     b16:	ea 81       	ldd	r30, Y+2	; 0x02
     b18:	fb 81       	ldd	r31, Y+3	; 0x03
     b1a:	24 81       	ldd	r18, Z+4	; 0x04
     b1c:	19 c0       	rjmp	.+50     	; 0xb50 <qtm_key_sensors_process+0x1ac>
     b1e:	fc 01       	movw	r30, r24
     b20:	ea 0d       	add	r30, r10
     b22:	fb 1d       	adc	r31, r11
     b24:	42 1b       	sub	r20, r18
     b26:	53 0b       	sbc	r21, r19
     b28:	80 81       	ld	r24, Z
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	48 17       	cp	r20, r24
     b2e:	59 07       	cpc	r21, r25
     b30:	08 f4       	brcc	.+2      	; 0xb34 <qtm_key_sensors_process+0x190>
     b32:	04 c1       	rjmp	.+520    	; 0xd3c <qtm_key_sensors_process+0x398>
     b34:	82 81       	ldd	r24, Z+2	; 0x02
     b36:	88 23       	and	r24, r24
     b38:	29 f0       	breq	.+10     	; 0xb44 <qtm_key_sensors_process+0x1a0>
     b3a:	b4 01       	movw	r22, r8
     b3c:	ce 01       	movw	r24, r28
     b3e:	9f de       	rcall	.-706    	; 0x87e <check_for_aks_block>
     b40:	81 11       	cpse	r24, r1
     b42:	fc c0       	rjmp	.+504    	; 0xd3c <qtm_key_sensors_process+0x398>
     b44:	e4 e0       	ldi	r30, 0x04	; 4
     b46:	d8 01       	movw	r26, r16
     b48:	ec 93       	st	X, r30
     b4a:	ea 81       	ldd	r30, Y+2	; 0x02
     b4c:	fb 81       	ldd	r31, Y+3	; 0x03
     b4e:	22 81       	ldd	r18, Z+2	; 0x02
     b50:	8c 81       	ldd	r24, Y+4	; 0x04
     b52:	9d 81       	ldd	r25, Y+5	; 0x05
     b54:	fc 01       	movw	r30, r24
     b56:	ee 0d       	add	r30, r14
     b58:	ff 1d       	adc	r31, r15
     b5a:	21 83       	std	Z+1, r18	; 0x01
     b5c:	e1 c0       	rjmp	.+450    	; 0xd20 <qtm_key_sensors_process+0x37c>
     b5e:	d8 01       	movw	r26, r16
     b60:	14 96       	adiw	r26, 0x04	; 4
     b62:	2d 91       	ld	r18, X+
     b64:	3c 91       	ld	r19, X
     b66:	15 97       	sbiw	r26, 0x05	; 5
     b68:	12 96       	adiw	r26, 0x02	; 2
     b6a:	ed 91       	ld	r30, X+
     b6c:	fc 91       	ld	r31, X
     b6e:	13 97       	sbiw	r26, 0x03	; 3
     b70:	81 81       	ldd	r24, Z+1	; 0x01
     b72:	92 81       	ldd	r25, Z+2	; 0x02
     b74:	82 17       	cp	r24, r18
     b76:	93 07       	cpc	r25, r19
     b78:	08 f4       	brcc	.+2      	; 0xb7c <qtm_key_sensors_process+0x1d8>
     b7a:	d6 c0       	rjmp	.+428    	; 0xd28 <qtm_key_sensors_process+0x384>
     b7c:	ee 81       	ldd	r30, Y+6	; 0x06
     b7e:	ff 81       	ldd	r31, Y+7	; 0x07
     b80:	ea 0d       	add	r30, r10
     b82:	fb 1d       	adc	r31, r11
     b84:	82 1b       	sub	r24, r18
     b86:	93 0b       	sbc	r25, r19
     b88:	20 81       	ld	r18, Z
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	28 17       	cp	r18, r24
     b8e:	39 07       	cpc	r19, r25
     b90:	08 f0       	brcs	.+2      	; 0xb94 <qtm_key_sensors_process+0x1f0>
     b92:	ae c0       	rjmp	.+348    	; 0xcf0 <qtm_key_sensors_process+0x34c>
     b94:	82 81       	ldd	r24, Z+2	; 0x02
     b96:	88 23       	and	r24, r24
     b98:	29 f0       	breq	.+10     	; 0xba4 <qtm_key_sensors_process+0x200>
     b9a:	b4 01       	movw	r22, r8
     b9c:	ce 01       	movw	r24, r28
     b9e:	6f de       	rcall	.-802    	; 0x87e <check_for_aks_block>
     ba0:	81 11       	cpse	r24, r1
     ba2:	cc c0       	rjmp	.+408    	; 0xd3c <qtm_key_sensors_process+0x398>
     ba4:	f8 01       	movw	r30, r16
     ba6:	81 81       	ldd	r24, Z+1	; 0x01
     ba8:	88 23       	and	r24, r24
     baa:	09 f4       	brne	.+2      	; 0xbae <qtm_key_sensors_process+0x20a>
     bac:	67 c0       	rjmp	.+206    	; 0xc7c <qtm_key_sensors_process+0x2d8>
     bae:	81 50       	subi	r24, 0x01	; 1
     bb0:	b6 c0       	rjmp	.+364    	; 0xd1e <qtm_key_sensors_process+0x37a>
     bb2:	a8 81       	ld	r26, Y
     bb4:	b9 81       	ldd	r27, Y+1	; 0x01
     bb6:	80 85       	ldd	r24, Z+8	; 0x08
     bb8:	13 96       	adiw	r26, 0x03	; 3
     bba:	8c 93       	st	X, r24
     bbc:	ec 81       	ldd	r30, Y+4	; 0x04
     bbe:	fd 81       	ldd	r31, Y+5	; 0x05
     bc0:	ee 0d       	add	r30, r14
     bc2:	ff 1d       	adc	r31, r15
     bc4:	44 81       	ldd	r20, Z+4	; 0x04
     bc6:	55 81       	ldd	r21, Z+5	; 0x05
     bc8:	a2 81       	ldd	r26, Z+2	; 0x02
     bca:	b3 81       	ldd	r27, Z+3	; 0x03
     bcc:	11 96       	adiw	r26, 0x01	; 1
     bce:	8d 91       	ld	r24, X+
     bd0:	9c 91       	ld	r25, X
     bd2:	12 97       	sbiw	r26, 0x02	; 2
     bd4:	84 17       	cp	r24, r20
     bd6:	95 07       	cpc	r25, r21
     bd8:	c0 f0       	brcs	.+48     	; 0xc0a <qtm_key_sensors_process+0x266>
     bda:	ae 81       	ldd	r26, Y+6	; 0x06
     bdc:	bf 81       	ldd	r27, Y+7	; 0x07
     bde:	aa 0d       	add	r26, r10
     be0:	bb 1d       	adc	r27, r11
     be2:	6c 91       	ld	r22, X
     be4:	26 2f       	mov	r18, r22
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	11 96       	adiw	r26, 0x01	; 1
     bea:	7c 91       	ld	r23, X
     bec:	7f 5f       	subi	r23, 0xFF	; 255
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <qtm_key_sensors_process+0x250>
     bf0:	35 95       	asr	r19
     bf2:	27 95       	ror	r18
     bf4:	7a 95       	dec	r23
     bf6:	e2 f7       	brpl	.-8      	; 0xbf0 <qtm_key_sensors_process+0x24c>
     bf8:	84 1b       	sub	r24, r20
     bfa:	95 0b       	sbc	r25, r21
     bfc:	62 1b       	sub	r22, r18
     bfe:	26 2f       	mov	r18, r22
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	28 17       	cp	r18, r24
     c04:	39 07       	cpc	r19, r25
     c06:	08 f4       	brcc	.+2      	; 0xc0a <qtm_key_sensors_process+0x266>
     c08:	97 c0       	rjmp	.+302    	; 0xd38 <qtm_key_sensors_process+0x394>
     c0a:	70 82       	st	Z, r7
     c0c:	ea 81       	ldd	r30, Y+2	; 0x02
     c0e:	fb 81       	ldd	r31, Y+3	; 0x03
     c10:	22 81       	ldd	r18, Z+2	; 0x02
     c12:	8c 81       	ldd	r24, Y+4	; 0x04
     c14:	9d 81       	ldd	r25, Y+5	; 0x05
     c16:	fc 01       	movw	r30, r24
     c18:	ee 0d       	add	r30, r14
     c1a:	ff 1d       	adc	r31, r15
     c1c:	21 83       	std	Z+1, r18	; 0x01
     c1e:	42 c0       	rjmp	.+132    	; 0xca4 <qtm_key_sensors_process+0x300>
     c20:	d8 01       	movw	r26, r16
     c22:	14 96       	adiw	r26, 0x04	; 4
     c24:	6d 91       	ld	r22, X+
     c26:	7c 91       	ld	r23, X
     c28:	15 97       	sbiw	r26, 0x05	; 5
     c2a:	12 96       	adiw	r26, 0x02	; 2
     c2c:	ed 91       	ld	r30, X+
     c2e:	fc 91       	ld	r31, X
     c30:	13 97       	sbiw	r26, 0x03	; 3
     c32:	21 81       	ldd	r18, Z+1	; 0x01
     c34:	32 81       	ldd	r19, Z+2	; 0x02
     c36:	26 17       	cp	r18, r22
     c38:	37 07       	cpc	r19, r23
     c3a:	58 f4       	brcc	.+22     	; 0xc52 <qtm_key_sensors_process+0x2ae>
     c3c:	11 96       	adiw	r26, 0x01	; 1
     c3e:	8c 91       	ld	r24, X
     c40:	11 97       	sbiw	r26, 0x01	; 1
     c42:	81 11       	cpse	r24, r1
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <qtm_key_sensors_process+0x2a6>
     c46:	cc 92       	st	X, r12
     c48:	77 c0       	rjmp	.+238    	; 0xd38 <qtm_key_sensors_process+0x394>
     c4a:	81 50       	subi	r24, 0x01	; 1
     c4c:	f8 01       	movw	r30, r16
     c4e:	81 83       	std	Z+1, r24	; 0x01
     c50:	73 c0       	rjmp	.+230    	; 0xd38 <qtm_key_sensors_process+0x394>
     c52:	ee 81       	ldd	r30, Y+6	; 0x06
     c54:	ff 81       	ldd	r31, Y+7	; 0x07
     c56:	ea 0d       	add	r30, r10
     c58:	fb 1d       	adc	r31, r11
     c5a:	80 81       	ld	r24, Z
     c5c:	48 2f       	mov	r20, r24
     c5e:	50 e0       	ldi	r21, 0x00	; 0
     c60:	91 81       	ldd	r25, Z+1	; 0x01
     c62:	9f 5f       	subi	r25, 0xFF	; 255
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <qtm_key_sensors_process+0x2c6>
     c66:	55 95       	asr	r21
     c68:	47 95       	ror	r20
     c6a:	9a 95       	dec	r25
     c6c:	e2 f7       	brpl	.-8      	; 0xc66 <qtm_key_sensors_process+0x2c2>
     c6e:	26 1b       	sub	r18, r22
     c70:	37 0b       	sbc	r19, r23
     c72:	84 1b       	sub	r24, r20
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	82 17       	cp	r24, r18
     c78:	93 07       	cpc	r25, r19
     c7a:	60 f4       	brcc	.+24     	; 0xc94 <qtm_key_sensors_process+0x2f0>
     c7c:	d8 01       	movw	r26, r16
     c7e:	6c 92       	st	X, r6
     c80:	ea 81       	ldd	r30, Y+2	; 0x02
     c82:	fb 81       	ldd	r31, Y+3	; 0x03
     c84:	23 81       	ldd	r18, Z+3	; 0x03
     c86:	8c 81       	ldd	r24, Y+4	; 0x04
     c88:	9d 81       	ldd	r25, Y+5	; 0x05
     c8a:	fc 01       	movw	r30, r24
     c8c:	ee 0d       	add	r30, r14
     c8e:	ff 1d       	adc	r31, r15
     c90:	21 83       	std	Z+1, r18	; 0x01
     c92:	52 c0       	rjmp	.+164    	; 0xd38 <qtm_key_sensors_process+0x394>
     c94:	f8 01       	movw	r30, r16
     c96:	81 81       	ldd	r24, Z+1	; 0x01
     c98:	81 11       	cpse	r24, r1
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <qtm_key_sensors_process+0x2fc>
     c9c:	c0 82       	st	Z, r12
     c9e:	4c c0       	rjmp	.+152    	; 0xd38 <qtm_key_sensors_process+0x394>
     ca0:	81 50       	subi	r24, 0x01	; 1
     ca2:	81 83       	std	Z+1, r24	; 0x01
     ca4:	22 24       	eor	r2, r2
     ca6:	23 94       	inc	r2
     ca8:	3b c0       	rjmp	.+118    	; 0xd20 <qtm_key_sensors_process+0x37c>
     caa:	d8 01       	movw	r26, r16
     cac:	14 96       	adiw	r26, 0x04	; 4
     cae:	2d 91       	ld	r18, X+
     cb0:	3c 91       	ld	r19, X
     cb2:	15 97       	sbiw	r26, 0x05	; 5
     cb4:	12 96       	adiw	r26, 0x02	; 2
     cb6:	8d 91       	ld	r24, X+
     cb8:	9c 91       	ld	r25, X
     cba:	13 97       	sbiw	r26, 0x03	; 3
     cbc:	dc 01       	movw	r26, r24
     cbe:	11 96       	adiw	r26, 0x01	; 1
     cc0:	8d 91       	ld	r24, X+
     cc2:	9c 91       	ld	r25, X
     cc4:	12 97       	sbiw	r26, 0x02	; 2
     cc6:	82 17       	cp	r24, r18
     cc8:	93 07       	cpc	r25, r19
     cca:	68 f5       	brcc	.+90     	; 0xd26 <qtm_key_sensors_process+0x382>
     ccc:	28 1b       	sub	r18, r24
     cce:	39 0b       	sbc	r19, r25
     cd0:	ae 81       	ldd	r26, Y+6	; 0x06
     cd2:	bf 81       	ldd	r27, Y+7	; 0x07
     cd4:	aa 0d       	add	r26, r10
     cd6:	bb 1d       	adc	r27, r11
     cd8:	8c 91       	ld	r24, X
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	05 80       	ldd	r0, Z+5	; 0x05
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <qtm_key_sensors_process+0x340>
     ce0:	95 95       	asr	r25
     ce2:	87 95       	ror	r24
     ce4:	0a 94       	dec	r0
     ce6:	e2 f7       	brpl	.-8      	; 0xce0 <qtm_key_sensors_process+0x33c>
     ce8:	99 27       	eor	r25, r25
     cea:	28 17       	cp	r18, r24
     cec:	39 07       	cpc	r19, r25
     cee:	18 f4       	brcc	.+6      	; 0xcf6 <qtm_key_sensors_process+0x352>
     cf0:	f8 01       	movw	r30, r16
     cf2:	c0 82       	st	Z, r12
     cf4:	1a c0       	rjmp	.+52     	; 0xd2a <qtm_key_sensors_process+0x386>
     cf6:	d8 01       	movw	r26, r16
     cf8:	11 96       	adiw	r26, 0x01	; 1
     cfa:	8c 91       	ld	r24, X
     cfc:	11 97       	sbiw	r26, 0x01	; 1
     cfe:	81 11       	cpse	r24, r1
     d00:	0c c0       	rjmp	.+24     	; 0xd1a <qtm_key_sensors_process+0x376>
     d02:	81 e0       	ldi	r24, 0x01	; 1
     d04:	8c 93       	st	X, r24
     d06:	8c 81       	ldd	r24, Y+4	; 0x04
     d08:	9d 81       	ldd	r25, Y+5	; 0x05
     d0a:	fc 01       	movw	r30, r24
     d0c:	ee 0d       	add	r30, r14
     d0e:	ff 1d       	adc	r31, r15
     d10:	02 80       	ldd	r0, Z+2	; 0x02
     d12:	f3 81       	ldd	r31, Z+3	; 0x03
     d14:	e0 2d       	mov	r30, r0
     d16:	c0 82       	st	Z, r12
     d18:	11 c0       	rjmp	.+34     	; 0xd3c <qtm_key_sensors_process+0x398>
     d1a:	81 50       	subi	r24, 0x01	; 1
     d1c:	f8 01       	movw	r30, r16
     d1e:	81 83       	std	Z+1, r24	; 0x01
     d20:	dd 24       	eor	r13, r13
     d22:	d3 94       	inc	r13
     d24:	0b c0       	rjmp	.+22     	; 0xd3c <qtm_key_sensors_process+0x398>
     d26:	d8 01       	movw	r26, r16
     d28:	cc 92       	st	X, r12
     d2a:	8c 81       	ldd	r24, Y+4	; 0x04
     d2c:	9d 81       	ldd	r25, Y+5	; 0x05
     d2e:	fc 01       	movw	r30, r24
     d30:	ee 0d       	add	r30, r14
     d32:	ff 1d       	adc	r31, r15
     d34:	11 82       	std	Z+1, r1	; 0x01
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <qtm_key_sensors_process+0x398>
     d38:	22 24       	eor	r2, r2
     d3a:	23 94       	inc	r2
     d3c:	bf ef       	ldi	r27, 0xFF	; 255
     d3e:	8b 1a       	sub	r8, r27
     d40:	9b 0a       	sbc	r9, r27
     d42:	e3 e0       	ldi	r30, 0x03	; 3
     d44:	ae 0e       	add	r10, r30
     d46:	b1 1c       	adc	r11, r1
     d48:	55 ce       	rjmp	.-854    	; 0x9f4 <qtm_key_sensors_process+0x50>
     d4a:	e8 81       	ld	r30, Y
     d4c:	f9 81       	ldd	r31, Y+1	; 0x01
     d4e:	80 81       	ld	r24, Z
     d50:	87 ff       	sbrs	r24, 7
     d52:	23 c0       	rjmp	.+70     	; 0xd9a <qtm_key_sensors_process+0x3f6>
     d54:	40 e0       	ldi	r20, 0x00	; 0
     d56:	50 e0       	ldi	r21, 0x00	; 0
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	ea 81       	ldd	r30, Y+2	; 0x02
     d5e:	fb 81       	ldd	r31, Y+3	; 0x03
     d60:	80 81       	ld	r24, Z
     d62:	91 81       	ldd	r25, Z+1	; 0x01
     d64:	28 17       	cp	r18, r24
     d66:	39 07       	cpc	r19, r25
     d68:	98 f4       	brcc	.+38     	; 0xd90 <qtm_key_sensors_process+0x3ec>
     d6a:	ec 81       	ldd	r30, Y+4	; 0x04
     d6c:	fd 81       	ldd	r31, Y+5	; 0x05
     d6e:	e4 0f       	add	r30, r20
     d70:	f5 1f       	adc	r31, r21
     d72:	a2 81       	ldd	r26, Z+2	; 0x02
     d74:	b3 81       	ldd	r27, Z+3	; 0x03
     d76:	8c 91       	ld	r24, X
     d78:	80 fd       	sbrc	r24, 0
     d7a:	05 c0       	rjmp	.+10     	; 0xd86 <qtm_key_sensors_process+0x3e2>
     d7c:	90 81       	ld	r25, Z
     d7e:	97 7f       	andi	r25, 0xF7	; 247
     d80:	11 f0       	breq	.+4      	; 0xd86 <qtm_key_sensors_process+0x3e2>
     d82:	81 60       	ori	r24, 0x01	; 1
     d84:	8c 93       	st	X, r24
     d86:	2f 5f       	subi	r18, 0xFF	; 255
     d88:	3f 4f       	sbci	r19, 0xFF	; 255
     d8a:	4a 5f       	subi	r20, 0xFA	; 250
     d8c:	5f 4f       	sbci	r21, 0xFF	; 255
     d8e:	e6 cf       	rjmp	.-52     	; 0xd5c <qtm_key_sensors_process+0x3b8>
     d90:	e8 81       	ld	r30, Y
     d92:	f9 81       	ldd	r31, Y+1	; 0x01
     d94:	80 81       	ld	r24, Z
     d96:	8f 77       	andi	r24, 0x7F	; 127
     d98:	80 83       	st	Z, r24
     d9a:	d1 10       	cpse	r13, r1
     d9c:	07 c0       	rjmp	.+14     	; 0xdac <qtm_key_sensors_process+0x408>
     d9e:	e8 81       	ld	r30, Y
     da0:	f9 81       	ldd	r31, Y+1	; 0x01
     da2:	21 10       	cpse	r2, r1
     da4:	6f c0       	rjmp	.+222    	; 0xe84 <qtm_key_sensors_process+0x4e0>
     da6:	80 81       	ld	r24, Z
     da8:	8e 7f       	andi	r24, 0xFE	; 254
     daa:	6e c0       	rjmp	.+220    	; 0xe88 <qtm_key_sensors_process+0x4e4>
     dac:	ea 81       	ldd	r30, Y+2	; 0x02
     dae:	fb 81       	ldd	r31, Y+3	; 0x03
     db0:	81 85       	ldd	r24, Z+9	; 0x09
     db2:	88 23       	and	r24, r24
     db4:	a1 f3       	breq	.-24     	; 0xd9e <qtm_key_sensors_process+0x3fa>
     db6:	e8 81       	ld	r30, Y
     db8:	f9 81       	ldd	r31, Y+1	; 0x01
     dba:	80 81       	ld	r24, Z
     dbc:	80 68       	ori	r24, 0x80	; 128
     dbe:	80 83       	st	Z, r24
     dc0:	ea 81       	ldd	r30, Y+2	; 0x02
     dc2:	fb 81       	ldd	r31, Y+3	; 0x03
     dc4:	81 85       	ldd	r24, Z+9	; 0x09
     dc6:	81 30       	cpi	r24, 0x01	; 1
     dc8:	51 f7       	brne	.-44     	; 0xd9e <qtm_key_sensors_process+0x3fa>
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	50 e0       	ldi	r21, 0x00	; 0
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	96 e0       	ldi	r25, 0x06	; 6
     dd4:	d9 2e       	mov	r13, r25
     dd6:	ea 81       	ldd	r30, Y+2	; 0x02
     dd8:	fb 81       	ldd	r31, Y+3	; 0x03
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	26 17       	cp	r18, r22
     de0:	37 07       	cpc	r19, r23
     de2:	e8 f6       	brcc	.-70     	; 0xd9e <qtm_key_sensors_process+0x3fa>
     de4:	0c 81       	ldd	r16, Y+4	; 0x04
     de6:	1d 81       	ldd	r17, Y+5	; 0x05
     de8:	fa 01       	movw	r30, r20
     dea:	ee 0f       	add	r30, r30
     dec:	ff 1f       	adc	r31, r31
     dee:	e0 0f       	add	r30, r16
     df0:	f1 1f       	adc	r31, r17
     df2:	80 81       	ld	r24, Z
     df4:	98 2f       	mov	r25, r24
     df6:	97 7f       	andi	r25, 0xF7	; 247
     df8:	a1 f1       	breq	.+104    	; 0xe62 <qtm_key_sensors_process+0x4be>
     dfa:	85 38       	cpi	r24, 0x85	; 133
     dfc:	11 f0       	breq	.+4      	; 0xe02 <qtm_key_sensors_process+0x45e>
     dfe:	83 30       	cpi	r24, 0x03	; 3
     e00:	b1 f5       	brne	.+108    	; 0xe6e <qtm_key_sensors_process+0x4ca>
     e02:	ee 80       	ldd	r14, Y+6	; 0x06
     e04:	ff 80       	ldd	r15, Y+7	; 0x07
     e06:	d7 01       	movw	r26, r14
     e08:	a4 0f       	add	r26, r20
     e0a:	b5 1f       	adc	r27, r21
     e0c:	12 96       	adiw	r26, 0x02	; 2
     e0e:	bc 90       	ld	r11, X
     e10:	bb 20       	and	r11, r11
     e12:	39 f1       	breq	.+78     	; 0xe62 <qtm_key_sensors_process+0x4be>
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	c1 2c       	mov	r12, r1
     e1a:	86 17       	cp	r24, r22
     e1c:	97 07       	cpc	r25, r23
     e1e:	f8 f4       	brcc	.+62     	; 0xe5e <qtm_key_sensors_process+0x4ba>
     e20:	28 17       	cp	r18, r24
     e22:	39 07       	cpc	r19, r25
     e24:	d1 f0       	breq	.+52     	; 0xe5a <qtm_key_sensors_process+0x4b6>
     e26:	d8 9e       	mul	r13, r24
     e28:	d0 01       	movw	r26, r0
     e2a:	d9 9e       	mul	r13, r25
     e2c:	b0 0d       	add	r27, r0
     e2e:	11 24       	eor	r1, r1
     e30:	a0 0f       	add	r26, r16
     e32:	b1 1f       	adc	r27, r17
     e34:	ac 91       	ld	r26, X
     e36:	a4 30       	cpi	r26, 0x04	; 4
     e38:	11 f0       	breq	.+4      	; 0xe3e <qtm_key_sensors_process+0x49a>
     e3a:	a6 38       	cpi	r26, 0x86	; 134
     e3c:	71 f4       	brne	.+28     	; 0xe5a <qtm_key_sensors_process+0x4b6>
     e3e:	dc 01       	movw	r26, r24
     e40:	aa 0f       	add	r26, r26
     e42:	bb 1f       	adc	r27, r27
     e44:	a8 0f       	add	r26, r24
     e46:	b9 1f       	adc	r27, r25
     e48:	ae 0d       	add	r26, r14
     e4a:	bf 1d       	adc	r27, r15
     e4c:	12 96       	adiw	r26, 0x02	; 2
     e4e:	ac 91       	ld	r26, X
     e50:	ba 12       	cpse	r11, r26
     e52:	03 c0       	rjmp	.+6      	; 0xe5a <qtm_key_sensors_process+0x4b6>
     e54:	cb 01       	movw	r24, r22
     e56:	cc 24       	eor	r12, r12
     e58:	c3 94       	inc	r12
     e5a:	01 96       	adiw	r24, 0x01	; 1
     e5c:	de cf       	rjmp	.-68     	; 0xe1a <qtm_key_sensors_process+0x476>
     e5e:	c1 10       	cpse	r12, r1
     e60:	06 c0       	rjmp	.+12     	; 0xe6e <qtm_key_sensors_process+0x4ca>
     e62:	02 80       	ldd	r0, Z+2	; 0x02
     e64:	f3 81       	ldd	r31, Z+3	; 0x03
     e66:	e0 2d       	mov	r30, r0
     e68:	80 81       	ld	r24, Z
     e6a:	8e 7f       	andi	r24, 0xFE	; 254
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <qtm_key_sensors_process+0x4d4>
     e6e:	02 80       	ldd	r0, Z+2	; 0x02
     e70:	f3 81       	ldd	r31, Z+3	; 0x03
     e72:	e0 2d       	mov	r30, r0
     e74:	80 81       	ld	r24, Z
     e76:	81 60       	ori	r24, 0x01	; 1
     e78:	80 83       	st	Z, r24
     e7a:	2f 5f       	subi	r18, 0xFF	; 255
     e7c:	3f 4f       	sbci	r19, 0xFF	; 255
     e7e:	4d 5f       	subi	r20, 0xFD	; 253
     e80:	5f 4f       	sbci	r21, 0xFF	; 255
     e82:	a9 cf       	rjmp	.-174    	; 0xdd6 <qtm_key_sensors_process+0x432>
     e84:	80 81       	ld	r24, Z
     e86:	81 60       	ori	r24, 0x01	; 1
     e88:	80 83       	st	Z, r24
     e8a:	80 91 60 3e 	lds	r24, 0x3E60	; 0x803e60 <qtm_local_ms_timecount>
     e8e:	90 91 61 3e 	lds	r25, 0x3E61	; 0x803e61 <qtm_local_ms_timecount+0x1>
     e92:	e8 81       	ld	r30, Y
     e94:	f9 81       	ldd	r31, Y+1	; 0x01
     e96:	21 81       	ldd	r18, Z+1	; 0x01
     e98:	32 81       	ldd	r19, Z+2	; 0x02
     e9a:	a9 01       	movw	r20, r18
     e9c:	48 53       	subi	r20, 0x38	; 56
     e9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ea0:	48 17       	cp	r20, r24
     ea2:	59 07       	cpc	r21, r25
     ea4:	38 f4       	brcc	.+14     	; 0xeb4 <qtm_key_sensors_process+0x510>
     ea6:	82 1b       	sub	r24, r18
     ea8:	93 0b       	sbc	r25, r19
     eaa:	aa 24       	eor	r10, r10
     eac:	a3 94       	inc	r10
     eae:	a3 e0       	ldi	r26, 0x03	; 3
     eb0:	ba 2e       	mov	r11, r26
     eb2:	44 c0       	rjmp	.+136    	; 0xf3c <qtm_key_sensors_process+0x598>
     eb4:	82 17       	cp	r24, r18
     eb6:	93 07       	cpc	r25, r19
     eb8:	10 f0       	brcs	.+4      	; 0xebe <qtm_key_sensors_process+0x51a>
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	04 c1       	rjmp	.+520    	; 0x10c6 <qtm_key_sensors_process+0x722>
     ebe:	82 1b       	sub	r24, r18
     ec0:	93 0b       	sbc	r25, r19
     ec2:	01 97       	sbiw	r24, 0x01	; 1
     ec4:	89 3c       	cpi	r24, 0xC9	; 201
     ec6:	91 05       	cpc	r25, r1
     ec8:	c0 f3       	brcs	.-16     	; 0xeba <qtm_key_sensors_process+0x516>
     eca:	ef cf       	rjmp	.-34     	; 0xeaa <qtm_key_sensors_process+0x506>
     ecc:	88 5c       	subi	r24, 0xC8	; 200
     ece:	91 09       	sbc	r25, r1
     ed0:	e8 81       	ld	r30, Y
     ed2:	f9 81       	ldd	r31, Y+1	; 0x01
     ed4:	21 81       	ldd	r18, Z+1	; 0x01
     ed6:	32 81       	ldd	r19, Z+2	; 0x02
     ed8:	28 53       	subi	r18, 0x38	; 56
     eda:	3f 4f       	sbci	r19, 0xFF	; 255
     edc:	21 83       	std	Z+1, r18	; 0x01
     ede:	32 83       	std	Z+2, r19	; 0x02
     ee0:	23 81       	ldd	r18, Z+3	; 0x03
     ee2:	21 11       	cpse	r18, r1
     ee4:	96 c0       	rjmp	.+300    	; 0x1012 <qtm_key_sensors_process+0x66e>
     ee6:	24 81       	ldd	r18, Z+4	; 0x04
     ee8:	22 23       	and	r18, r18
     eea:	11 f0       	breq	.+4      	; 0xef0 <qtm_key_sensors_process+0x54c>
     eec:	21 50       	subi	r18, 0x01	; 1
     eee:	24 83       	std	Z+4, r18	; 0x04
     ef0:	e8 81       	ld	r30, Y
     ef2:	f9 81       	ldd	r31, Y+1	; 0x01
     ef4:	25 81       	ldd	r18, Z+5	; 0x05
     ef6:	22 23       	and	r18, r18
     ef8:	11 f0       	breq	.+4      	; 0xefe <qtm_key_sensors_process+0x55a>
     efa:	21 50       	subi	r18, 0x01	; 1
     efc:	25 83       	std	Z+5, r18	; 0x05
     efe:	8a 80       	ldd	r8, Y+2	; 0x02
     f00:	9b 80       	ldd	r9, Y+3	; 0x03
     f02:	d4 01       	movw	r26, r8
     f04:	16 96       	adiw	r26, 0x06	; 6
     f06:	2c 91       	ld	r18, X
     f08:	16 97       	sbiw	r26, 0x06	; 6
     f0a:	21 11       	cpse	r18, r1
     f0c:	1b c0       	rjmp	.+54     	; 0xf44 <qtm_key_sensors_process+0x5a0>
     f0e:	8a 80       	ldd	r8, Y+2	; 0x02
     f10:	9b 80       	ldd	r9, Y+3	; 0x03
     f12:	f4 01       	movw	r30, r8
     f14:	27 81       	ldd	r18, Z+7	; 0x07
     f16:	21 11       	cpse	r18, r1
     f18:	48 c0       	rjmp	.+144    	; 0xfaa <qtm_key_sensors_process+0x606>
     f1a:	ea 81       	ldd	r30, Y+2	; 0x02
     f1c:	fb 81       	ldd	r31, Y+3	; 0x03
     f1e:	23 81       	ldd	r18, Z+3	; 0x03
     f20:	22 23       	and	r18, r18
     f22:	61 f0       	breq	.+24     	; 0xf3c <qtm_key_sensors_process+0x598>
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	ea 81       	ldd	r30, Y+2	; 0x02
     f2e:	fb 81       	ldd	r31, Y+3	; 0x03
     f30:	40 81       	ld	r20, Z
     f32:	51 81       	ldd	r21, Z+1	; 0x01
     f34:	a4 17       	cp	r26, r20
     f36:	b5 07       	cpc	r27, r21
     f38:	08 f4       	brcc	.+2      	; 0xf3c <qtm_key_sensors_process+0x598>
     f3a:	6e c0       	rjmp	.+220    	; 0x1018 <qtm_key_sensors_process+0x674>
     f3c:	89 3c       	cpi	r24, 0xC9	; 201
     f3e:	91 05       	cpc	r25, r1
     f40:	28 f6       	brcc	.-118    	; 0xecc <qtm_key_sensors_process+0x528>
     f42:	bb cf       	rjmp	.-138    	; 0xeba <qtm_key_sensors_process+0x516>
     f44:	08 81       	ld	r16, Y
     f46:	19 81       	ldd	r17, Y+1	; 0x01
     f48:	f8 01       	movw	r30, r16
     f4a:	24 81       	ldd	r18, Z+4	; 0x04
     f4c:	21 11       	cpse	r18, r1
     f4e:	df cf       	rjmp	.-66     	; 0xf0e <qtm_key_sensors_process+0x56a>
     f50:	ed 90       	ld	r14, X+
     f52:	fc 90       	ld	r15, X
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	40 e0       	ldi	r20, 0x00	; 0
     f5a:	50 e0       	ldi	r21, 0x00	; 0
     f5c:	4e 15       	cp	r20, r14
     f5e:	5f 05       	cpc	r21, r15
     f60:	f1 f0       	breq	.+60     	; 0xf9e <qtm_key_sensors_process+0x5fa>
     f62:	ec 81       	ldd	r30, Y+4	; 0x04
     f64:	fd 81       	ldd	r31, Y+5	; 0x05
     f66:	e6 0f       	add	r30, r22
     f68:	f7 1f       	adc	r31, r23
     f6a:	20 81       	ld	r18, Z
     f6c:	23 30       	cpi	r18, 0x03	; 3
     f6e:	11 f0       	breq	.+4      	; 0xf74 <qtm_key_sensors_process+0x5d0>
     f70:	28 30       	cpi	r18, 0x08	; 8
     f72:	81 f4       	brne	.+32     	; 0xf94 <qtm_key_sensors_process+0x5f0>
     f74:	24 81       	ldd	r18, Z+4	; 0x04
     f76:	35 81       	ldd	r19, Z+5	; 0x05
     f78:	c2 80       	ldd	r12, Z+2	; 0x02
     f7a:	d3 80       	ldd	r13, Z+3	; 0x03
     f7c:	d6 01       	movw	r26, r12
     f7e:	11 96       	adiw	r26, 0x01	; 1
     f80:	cd 90       	ld	r12, X+
     f82:	dc 90       	ld	r13, X
     f84:	12 97       	sbiw	r26, 0x02	; 2
     f86:	2c 15       	cp	r18, r12
     f88:	3d 05       	cpc	r19, r13
     f8a:	20 f4       	brcc	.+8      	; 0xf94 <qtm_key_sensors_process+0x5f0>
     f8c:	2f 5f       	subi	r18, 0xFF	; 255
     f8e:	3f 4f       	sbci	r19, 0xFF	; 255
     f90:	24 83       	std	Z+4, r18	; 0x04
     f92:	35 83       	std	Z+5, r19	; 0x05
     f94:	4f 5f       	subi	r20, 0xFF	; 255
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	6a 5f       	subi	r22, 0xFA	; 250
     f9a:	7f 4f       	sbci	r23, 0xFF	; 255
     f9c:	df cf       	rjmp	.-66     	; 0xf5c <qtm_key_sensors_process+0x5b8>
     f9e:	f4 01       	movw	r30, r8
     fa0:	26 81       	ldd	r18, Z+6	; 0x06
     fa2:	d8 01       	movw	r26, r16
     fa4:	14 96       	adiw	r26, 0x04	; 4
     fa6:	2c 93       	st	X, r18
     fa8:	b2 cf       	rjmp	.-156    	; 0xf0e <qtm_key_sensors_process+0x56a>
     faa:	08 81       	ld	r16, Y
     fac:	19 81       	ldd	r17, Y+1	; 0x01
     fae:	d8 01       	movw	r26, r16
     fb0:	15 96       	adiw	r26, 0x05	; 5
     fb2:	2c 91       	ld	r18, X
     fb4:	21 11       	cpse	r18, r1
     fb6:	b1 cf       	rjmp	.-158    	; 0xf1a <qtm_key_sensors_process+0x576>
     fb8:	e0 80       	ld	r14, Z
     fba:	f1 80       	ldd	r15, Z+1	; 0x01
     fbc:	60 e0       	ldi	r22, 0x00	; 0
     fbe:	70 e0       	ldi	r23, 0x00	; 0
     fc0:	40 e0       	ldi	r20, 0x00	; 0
     fc2:	50 e0       	ldi	r21, 0x00	; 0
     fc4:	4e 15       	cp	r20, r14
     fc6:	5f 05       	cpc	r21, r15
     fc8:	f1 f0       	breq	.+60     	; 0x1006 <qtm_key_sensors_process+0x662>
     fca:	ec 81       	ldd	r30, Y+4	; 0x04
     fcc:	fd 81       	ldd	r31, Y+5	; 0x05
     fce:	e6 0f       	add	r30, r22
     fd0:	f7 1f       	adc	r31, r23
     fd2:	20 81       	ld	r18, Z
     fd4:	23 30       	cpi	r18, 0x03	; 3
     fd6:	11 f0       	breq	.+4      	; 0xfdc <qtm_key_sensors_process+0x638>
     fd8:	28 30       	cpi	r18, 0x08	; 8
     fda:	81 f4       	brne	.+32     	; 0xffc <qtm_key_sensors_process+0x658>
     fdc:	24 81       	ldd	r18, Z+4	; 0x04
     fde:	35 81       	ldd	r19, Z+5	; 0x05
     fe0:	c2 80       	ldd	r12, Z+2	; 0x02
     fe2:	d3 80       	ldd	r13, Z+3	; 0x03
     fe4:	d6 01       	movw	r26, r12
     fe6:	11 96       	adiw	r26, 0x01	; 1
     fe8:	cd 90       	ld	r12, X+
     fea:	dc 90       	ld	r13, X
     fec:	12 97       	sbiw	r26, 0x02	; 2
     fee:	c2 16       	cp	r12, r18
     ff0:	d3 06       	cpc	r13, r19
     ff2:	20 f4       	brcc	.+8      	; 0xffc <qtm_key_sensors_process+0x658>
     ff4:	21 50       	subi	r18, 0x01	; 1
     ff6:	31 09       	sbc	r19, r1
     ff8:	24 83       	std	Z+4, r18	; 0x04
     ffa:	35 83       	std	Z+5, r19	; 0x05
     ffc:	4f 5f       	subi	r20, 0xFF	; 255
     ffe:	5f 4f       	sbci	r21, 0xFF	; 255
    1000:	6a 5f       	subi	r22, 0xFA	; 250
    1002:	7f 4f       	sbci	r23, 0xFF	; 255
    1004:	df cf       	rjmp	.-66     	; 0xfc4 <qtm_key_sensors_process+0x620>
    1006:	f4 01       	movw	r30, r8
    1008:	27 81       	ldd	r18, Z+7	; 0x07
    100a:	d8 01       	movw	r26, r16
    100c:	15 96       	adiw	r26, 0x05	; 5
    100e:	2c 93       	st	X, r18
    1010:	84 cf       	rjmp	.-248    	; 0xf1a <qtm_key_sensors_process+0x576>
    1012:	21 50       	subi	r18, 0x01	; 1
    1014:	23 83       	std	Z+3, r18	; 0x03
    1016:	81 cf       	rjmp	.-254    	; 0xf1a <qtm_key_sensors_process+0x576>
    1018:	a9 01       	movw	r20, r18
    101a:	44 0f       	add	r20, r20
    101c:	55 1f       	adc	r21, r21
    101e:	ec 81       	ldd	r30, Y+4	; 0x04
    1020:	fd 81       	ldd	r31, Y+5	; 0x05
    1022:	e4 0f       	add	r30, r20
    1024:	f5 1f       	adc	r31, r21
    1026:	60 81       	ld	r22, Z
    1028:	65 38       	cpi	r22, 0x85	; 133
    102a:	09 f0       	breq	.+2      	; 0x102e <qtm_key_sensors_process+0x68a>
    102c:	47 c0       	rjmp	.+142    	; 0x10bc <qtm_key_sensors_process+0x718>
    102e:	61 81       	ldd	r22, Z+1	; 0x01
    1030:	66 23       	and	r22, r22
    1032:	19 f0       	breq	.+6      	; 0x103a <qtm_key_sensors_process+0x696>
    1034:	61 50       	subi	r22, 0x01	; 1
    1036:	61 83       	std	Z+1, r22	; 0x01
    1038:	41 c0       	rjmp	.+130    	; 0x10bc <qtm_key_sensors_process+0x718>
    103a:	a0 82       	st	Z, r10
    103c:	6c 81       	ldd	r22, Y+4	; 0x04
    103e:	7d 81       	ldd	r23, Y+5	; 0x05
    1040:	fb 01       	movw	r30, r22
    1042:	e4 0f       	add	r30, r20
    1044:	f5 1f       	adc	r31, r21
    1046:	02 80       	ldd	r0, Z+2	; 0x02
    1048:	f3 81       	ldd	r31, Z+3	; 0x03
    104a:	e0 2d       	mov	r30, r0
    104c:	b0 82       	st	Z, r11
    104e:	ee 81       	ldd	r30, Y+6	; 0x06
    1050:	ff 81       	ldd	r31, Y+7	; 0x07
    1052:	e2 0f       	add	r30, r18
    1054:	f3 1f       	adc	r31, r19
    1056:	d2 80       	ldd	r13, Z+2	; 0x02
    1058:	dd 20       	and	r13, r13
    105a:	81 f1       	breq	.+96     	; 0x10bc <qtm_key_sensors_process+0x718>
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	00 e0       	ldi	r16, 0x00	; 0
    1062:	10 e0       	ldi	r17, 0x00	; 0
    1064:	ea 81       	ldd	r30, Y+2	; 0x02
    1066:	fb 81       	ldd	r31, Y+3	; 0x03
    1068:	60 81       	ld	r22, Z
    106a:	71 81       	ldd	r23, Z+1	; 0x01
    106c:	06 17       	cp	r16, r22
    106e:	17 07       	cpc	r17, r23
    1070:	28 f5       	brcc	.+74     	; 0x10bc <qtm_key_sensors_process+0x718>
    1072:	ee 81       	ldd	r30, Y+6	; 0x06
    1074:	ff 81       	ldd	r31, Y+7	; 0x07
    1076:	e4 0f       	add	r30, r20
    1078:	f5 1f       	adc	r31, r21
    107a:	62 81       	ldd	r22, Z+2	; 0x02
    107c:	d6 12       	cpse	r13, r22
    107e:	19 c0       	rjmp	.+50     	; 0x10b2 <qtm_key_sensors_process+0x70e>
    1080:	ba 01       	movw	r22, r20
    1082:	66 0f       	add	r22, r22
    1084:	77 1f       	adc	r23, r23
    1086:	ec 81       	ldd	r30, Y+4	; 0x04
    1088:	fd 81       	ldd	r31, Y+5	; 0x05
    108a:	4f 01       	movw	r8, r30
    108c:	86 0e       	add	r8, r22
    108e:	97 1e       	adc	r9, r23
    1090:	f4 01       	movw	r30, r8
    1092:	e2 80       	ldd	r14, Z+2	; 0x02
    1094:	f3 80       	ldd	r15, Z+3	; 0x03
    1096:	f7 01       	movw	r30, r14
    1098:	f0 80       	ld	r15, Z
    109a:	f0 fe       	sbrs	r15, 0
    109c:	0a c0       	rjmp	.+20     	; 0x10b2 <qtm_key_sensors_process+0x70e>
    109e:	f4 01       	movw	r30, r8
    10a0:	a0 82       	st	Z, r10
    10a2:	ec 81       	ldd	r30, Y+4	; 0x04
    10a4:	fd 81       	ldd	r31, Y+5	; 0x05
    10a6:	e6 0f       	add	r30, r22
    10a8:	f7 1f       	adc	r31, r23
    10aa:	02 80       	ldd	r0, Z+2	; 0x02
    10ac:	f3 81       	ldd	r31, Z+3	; 0x03
    10ae:	e0 2d       	mov	r30, r0
    10b0:	b0 82       	st	Z, r11
    10b2:	0f 5f       	subi	r16, 0xFF	; 255
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	4d 5f       	subi	r20, 0xFD	; 253
    10b8:	5f 4f       	sbci	r21, 0xFF	; 255
    10ba:	d4 cf       	rjmp	.-88     	; 0x1064 <qtm_key_sensors_process+0x6c0>
    10bc:	11 96       	adiw	r26, 0x01	; 1
    10be:	2d 5f       	subi	r18, 0xFD	; 253
    10c0:	3f 4f       	sbci	r19, 0xFF	; 255
    10c2:	34 cf       	rjmp	.-408    	; 0xf2c <qtm_key_sensors_process+0x588>
    10c4:	8b e0       	ldi	r24, 0x0B	; 11
    10c6:	df 91       	pop	r29
    10c8:	cf 91       	pop	r28
    10ca:	1f 91       	pop	r17
    10cc:	0f 91       	pop	r16
    10ce:	ff 90       	pop	r15
    10d0:	ef 90       	pop	r14
    10d2:	df 90       	pop	r13
    10d4:	cf 90       	pop	r12
    10d6:	bf 90       	pop	r11
    10d8:	af 90       	pop	r10
    10da:	9f 90       	pop	r9
    10dc:	8f 90       	pop	r8
    10de:	7f 90       	pop	r7
    10e0:	6f 90       	pop	r6
    10e2:	5f 90       	pop	r5
    10e4:	4f 90       	pop	r4
    10e6:	3f 90       	pop	r3
    10e8:	2f 90       	pop	r2
    10ea:	08 95       	ret

000010ec <qtm_error_handler>:
    10ec:	95 e0       	ldi	r25, 0x05	; 5
    10ee:	90 93 64 3e 	sts	0x3E64, r25	; 0x803e64 <qtm_state>
    10f2:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    10f6:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    10fa:	01 88       	ldd	r0, Z+17	; 0x11
    10fc:	f2 89       	ldd	r31, Z+18	; 0x12
    10fe:	e0 2d       	mov	r30, r0
    1100:	30 97       	sbiw	r30, 0x00	; 0
    1102:	09 f0       	breq	.+2      	; 0x1106 <qtm_error_handler+0x1a>
    1104:	09 94       	ijmp
    1106:	ff cf       	rjmp	.-2      	; 0x1106 <qtm_error_handler+0x1a>

00001108 <generic_callback_function>:
    1108:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    110c:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    1110:	03 88       	ldd	r0, Z+19	; 0x13
    1112:	f4 89       	ldd	r31, Z+20	; 0x14
    1114:	e0 2d       	mov	r30, r0
    1116:	30 97       	sbiw	r30, 0x00	; 0
    1118:	09 f0       	breq	.+2      	; 0x111c <generic_callback_function+0x14>
    111a:	09 94       	ijmp
    111c:	80 e4       	ldi	r24, 0x40	; 64
    111e:	e6 cf       	rjmp	.-52     	; 0x10ec <qtm_error_handler>

00001120 <qmt_get_binding_layer_ptr>:
    1120:	80 91 a2 3e 	lds	r24, 0x3EA2	; 0x803ea2 <qtm>
    1124:	90 91 a3 3e 	lds	r25, 0x3EA3	; 0x803ea3 <qtm+0x1>
    1128:	08 95       	ret

0000112a <qtm_binding_layer_init>:
    112a:	cf 93       	push	r28
    112c:	80 93 a2 3e 	sts	0x3EA2, r24	; 0x803ea2 <qtm>
    1130:	90 93 a3 3e 	sts	0x3EA3, r25	; 0x803ea3 <qtm+0x1>
    1134:	80 91 64 3e 	lds	r24, 0x3E64	; 0x803e64 <qtm_state>
    1138:	85 30       	cpi	r24, 0x05	; 5
    113a:	39 f0       	breq	.+14     	; 0x114a <qtm_binding_layer_init+0x20>
    113c:	82 30       	cpi	r24, 0x02	; 2
    113e:	28 f0       	brcs	.+10     	; 0x114a <qtm_binding_layer_init+0x20>
    1140:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1144:	88 23       	and	r24, r24
    1146:	71 f1       	breq	.+92     	; 0x11a4 <qtm_binding_layer_init+0x7a>
    1148:	40 c0       	rjmp	.+128    	; 0x11ca <qtm_binding_layer_init+0xa0>
    114a:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    114e:	c0 e0       	ldi	r28, 0x00	; 0
    1150:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    1154:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    1158:	8c 2f       	mov	r24, r28
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	88 0f       	add	r24, r24
    115e:	99 1f       	adc	r25, r25
    1160:	11 96       	adiw	r26, 0x01	; 1
    1162:	ed 91       	ld	r30, X+
    1164:	fc 91       	ld	r31, X
    1166:	12 97       	sbiw	r26, 0x02	; 2
    1168:	e8 0f       	add	r30, r24
    116a:	f9 1f       	adc	r31, r25
    116c:	01 90       	ld	r0, Z+
    116e:	f0 81       	ld	r31, Z
    1170:	e0 2d       	mov	r30, r0
    1172:	30 97       	sbiw	r30, 0x00	; 0
    1174:	29 f3       	breq	.-54     	; 0x1140 <qtm_binding_layer_init+0x16>
    1176:	17 96       	adiw	r26, 0x07	; 7
    1178:	2d 91       	ld	r18, X+
    117a:	3c 91       	ld	r19, X
    117c:	18 97       	sbiw	r26, 0x08	; 8
    117e:	d9 01       	movw	r26, r18
    1180:	a8 0f       	add	r26, r24
    1182:	b9 1f       	adc	r27, r25
    1184:	8d 91       	ld	r24, X+
    1186:	9c 91       	ld	r25, X
    1188:	09 95       	icall
    118a:	88 23       	and	r24, r24
    118c:	29 f0       	breq	.+10     	; 0x1198 <qtm_binding_layer_init+0x6e>
    118e:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1192:	8f 5f       	subi	r24, 0xFF	; 255
    1194:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    1198:	cf 5f       	subi	r28, 0xFF	; 255
    119a:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    119e:	88 23       	and	r24, r24
    11a0:	b9 f2       	breq	.-82     	; 0x1150 <qtm_binding_layer_init+0x26>
    11a2:	ce cf       	rjmp	.-100    	; 0x1140 <qtm_binding_layer_init+0x16>
    11a4:	82 e0       	ldi	r24, 0x02	; 2
    11a6:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    11aa:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    11ae:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    11b2:	07 84       	ldd	r0, Z+15	; 0x0f
    11b4:	f0 89       	ldd	r31, Z+16	; 0x10
    11b6:	e0 2d       	mov	r30, r0
    11b8:	30 97       	sbiw	r30, 0x00	; 0
    11ba:	11 f0       	breq	.+4      	; 0x11c0 <qtm_binding_layer_init+0x96>
    11bc:	09 95       	icall
    11be:	08 c0       	rjmp	.+16     	; 0x11d0 <qtm_binding_layer_init+0xa6>
    11c0:	85 e0       	ldi	r24, 0x05	; 5
    11c2:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    11c6:	81 e0       	ldi	r24, 0x01	; 1
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <qtm_binding_layer_init+0xa2>
    11ca:	8f 5f       	subi	r24, 0xFF	; 255
    11cc:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    11d0:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    11d4:	88 23       	and	r24, r24
    11d6:	29 f0       	breq	.+10     	; 0x11e2 <qtm_binding_layer_init+0xb8>
    11d8:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    11dc:	80 e8       	ldi	r24, 0x80	; 128
    11de:	cf 91       	pop	r28
    11e0:	85 cf       	rjmp	.-246    	; 0x10ec <qtm_error_handler>
    11e2:	cf 91       	pop	r28
    11e4:	08 95       	ret

000011e6 <qtm_lib_start_acquisition>:
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	18 2f       	mov	r17, r24
    11ee:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    11f2:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    11f6:	15 96       	adiw	r26, 0x05	; 5
    11f8:	2d 91       	ld	r18, X+
    11fa:	3c 91       	ld	r19, X
    11fc:	16 97       	sbiw	r26, 0x06	; 6
    11fe:	d0 e0       	ldi	r29, 0x00	; 0
    1200:	f9 01       	movw	r30, r18
    1202:	ed 0f       	add	r30, r29
    1204:	f1 1d       	adc	r31, r1
    1206:	ed 0f       	add	r30, r29
    1208:	f1 1d       	adc	r31, r1
    120a:	80 81       	ld	r24, Z
    120c:	91 81       	ldd	r25, Z+1	; 0x01
    120e:	89 2b       	or	r24, r25
    1210:	11 f0       	breq	.+4      	; 0x1216 <qtm_lib_start_acquisition+0x30>
    1212:	df 5f       	subi	r29, 0xFF	; 255
    1214:	f5 cf       	rjmp	.-22     	; 0x1200 <qtm_lib_start_acquisition+0x1a>
    1216:	53 96       	adiw	r26, 0x13	; 19
    1218:	8d 91       	ld	r24, X+
    121a:	9c 91       	ld	r25, X
    121c:	54 97       	sbiw	r26, 0x14	; 20
    121e:	89 2b       	or	r24, r25
    1220:	49 f1       	breq	.+82     	; 0x1274 <qtm_lib_start_acquisition+0x8e>
    1222:	81 2f       	mov	r24, r17
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	88 0f       	add	r24, r24
    1228:	99 1f       	adc	r25, r25
    122a:	f9 01       	movw	r30, r18
    122c:	e8 0f       	add	r30, r24
    122e:	f9 1f       	adc	r31, r25
    1230:	01 90       	ld	r0, Z+
    1232:	f0 81       	ld	r31, Z
    1234:	e0 2d       	mov	r30, r0
    1236:	30 97       	sbiw	r30, 0x00	; 0
    1238:	e9 f0       	breq	.+58     	; 0x1274 <qtm_lib_start_acquisition+0x8e>
    123a:	1b 96       	adiw	r26, 0x0b	; 11
    123c:	2d 91       	ld	r18, X+
    123e:	3c 91       	ld	r19, X
    1240:	1c 97       	sbiw	r26, 0x0c	; 12
    1242:	d9 01       	movw	r26, r18
    1244:	a8 0f       	add	r26, r24
    1246:	b9 1f       	adc	r27, r25
    1248:	8d 91       	ld	r24, X+
    124a:	9c 91       	ld	r25, X
    124c:	00 97       	sbiw	r24, 0x00	; 0
    124e:	91 f0       	breq	.+36     	; 0x1274 <qtm_lib_start_acquisition+0x8e>
    1250:	64 e8       	ldi	r22, 0x84	; 132
    1252:	78 e0       	ldi	r23, 0x08	; 8
    1254:	09 95       	icall
    1256:	c8 2f       	mov	r28, r24
    1258:	81 11       	cpse	r24, r1
    125a:	06 c0       	rjmp	.+12     	; 0x1268 <qtm_lib_start_acquisition+0x82>
    125c:	83 e0       	ldi	r24, 0x03	; 3
    125e:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    1262:	10 92 63 3e 	sts	0x3E63, r1	; 0x803e63 <current_process_id>
    1266:	03 c0       	rjmp	.+6      	; 0x126e <qtm_lib_start_acquisition+0x88>
    1268:	82 e0       	ldi	r24, 0x02	; 2
    126a:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    126e:	1d 17       	cp	r17, r29
    1270:	20 f0       	brcs	.+8      	; 0x127a <qtm_lib_start_acquisition+0x94>
    1272:	01 c0       	rjmp	.+2      	; 0x1276 <qtm_lib_start_acquisition+0x90>
    1274:	c2 e0       	ldi	r28, 0x02	; 2
    1276:	82 e8       	ldi	r24, 0x82	; 130
    1278:	39 df       	rcall	.-398    	; 0x10ec <qtm_error_handler>
    127a:	8c 2f       	mov	r24, r28
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	1f 91       	pop	r17
    1282:	08 95       	ret

00001284 <qtm_lib_acq_process>:
    1284:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    1288:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    128c:	05 84       	ldd	r0, Z+13	; 0x0d
    128e:	f6 85       	ldd	r31, Z+14	; 0x0e
    1290:	e0 2d       	mov	r30, r0
    1292:	09 94       	ijmp

00001294 <qtm_lib_post_process>:
    1294:	1f 93       	push	r17
    1296:	cf 93       	push	r28
    1298:	df 93       	push	r29
    129a:	1f 92       	push	r1
    129c:	cd b7       	in	r28, 0x3d	; 61
    129e:	de b7       	in	r29, 0x3e	; 62
    12a0:	19 82       	std	Y+1, r1	; 0x01
    12a2:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    12a6:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    12aa:	05 88       	ldd	r0, Z+21	; 0x15
    12ac:	f6 89       	ldd	r31, Z+22	; 0x16
    12ae:	e0 2d       	mov	r30, r0
    12b0:	30 97       	sbiw	r30, 0x00	; 0
    12b2:	49 f0       	breq	.+18     	; 0x12c6 <qtm_lib_post_process+0x32>
    12b4:	82 e0       	ldi	r24, 0x02	; 2
    12b6:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12ba:	ce 01       	movw	r24, r28
    12bc:	01 96       	adiw	r24, 0x01	; 1
    12be:	09 95       	icall
    12c0:	83 e0       	ldi	r24, 0x03	; 3
    12c2:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12c6:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    12ca:	81 11       	cpse	r24, r1
    12cc:	2c c0       	rjmp	.+88     	; 0x1326 <qtm_lib_post_process+0x92>
    12ce:	19 81       	ldd	r17, Y+1	; 0x01
    12d0:	11 11       	cpse	r17, r1
    12d2:	29 c0       	rjmp	.+82     	; 0x1326 <qtm_lib_post_process+0x92>
    12d4:	84 e0       	ldi	r24, 0x04	; 4
    12d6:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12da:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    12de:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    12e2:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	88 0f       	add	r24, r24
    12ea:	99 1f       	adc	r25, r25
    12ec:	13 96       	adiw	r26, 0x03	; 3
    12ee:	ed 91       	ld	r30, X+
    12f0:	fc 91       	ld	r31, X
    12f2:	14 97       	sbiw	r26, 0x04	; 4
    12f4:	e8 0f       	add	r30, r24
    12f6:	f9 1f       	adc	r31, r25
    12f8:	01 90       	ld	r0, Z+
    12fa:	f0 81       	ld	r31, Z
    12fc:	e0 2d       	mov	r30, r0
    12fe:	19 96       	adiw	r26, 0x09	; 9
    1300:	2d 91       	ld	r18, X+
    1302:	3c 91       	ld	r19, X
    1304:	1a 97       	sbiw	r26, 0x0a	; 10
    1306:	30 97       	sbiw	r30, 0x00	; 0
    1308:	81 f0       	breq	.+32     	; 0x132a <qtm_lib_post_process+0x96>
    130a:	d9 01       	movw	r26, r18
    130c:	a8 0f       	add	r26, r24
    130e:	b9 1f       	adc	r27, r25
    1310:	8d 91       	ld	r24, X+
    1312:	9c 91       	ld	r25, X
    1314:	09 95       	icall
    1316:	81 11       	cpse	r24, r1
    1318:	3d c0       	rjmp	.+122    	; 0x1394 <qtm_lib_post_process+0x100>
    131a:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    131e:	8f 5f       	subi	r24, 0xFF	; 255
    1320:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <current_process_id>
    1324:	da cf       	rjmp	.-76     	; 0x12da <qtm_lib_post_process+0x46>
    1326:	10 e0       	ldi	r17, 0x00	; 0
    1328:	3c c0       	rjmp	.+120    	; 0x13a2 <qtm_lib_post_process+0x10e>
    132a:	10 92 63 3e 	sts	0x3E63, r1	; 0x803e63 <current_process_id>
    132e:	f9 01       	movw	r30, r18
    1330:	e1 0f       	add	r30, r17
    1332:	f1 1d       	adc	r31, r1
    1334:	e1 0f       	add	r30, r17
    1336:	f1 1d       	adc	r31, r1
    1338:	01 90       	ld	r0, Z+
    133a:	f0 81       	ld	r31, Z
    133c:	e0 2d       	mov	r30, r0
    133e:	30 97       	sbiw	r30, 0x00	; 0
    1340:	59 f0       	breq	.+22     	; 0x1358 <qtm_lib_post_process+0xc4>
    1342:	01 90       	ld	r0, Z+
    1344:	f0 81       	ld	r31, Z
    1346:	e0 2d       	mov	r30, r0
    1348:	80 81       	ld	r24, Z
    134a:	87 ff       	sbrs	r24, 7
    134c:	03 c0       	rjmp	.+6      	; 0x1354 <qtm_lib_post_process+0xc0>
    134e:	9c 91       	ld	r25, X
    1350:	94 60       	ori	r25, 0x04	; 4
    1352:	9c 93       	st	X, r25
    1354:	1f 5f       	subi	r17, 0xFF	; 255
    1356:	eb cf       	rjmp	.-42     	; 0x132e <qtm_lib_post_process+0x9a>
    1358:	10 93 63 3e 	sts	0x3E63, r17	; 0x803e63 <current_process_id>
    135c:	82 e0       	ldi	r24, 0x02	; 2
    135e:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    1362:	57 96       	adiw	r26, 0x17	; 23
    1364:	ed 91       	ld	r30, X+
    1366:	fc 91       	ld	r31, X
    1368:	58 97       	sbiw	r26, 0x18	; 24
    136a:	30 97       	sbiw	r30, 0x00	; 0
    136c:	11 f0       	breq	.+4      	; 0x1372 <qtm_lib_post_process+0xde>
    136e:	09 95       	icall
    1370:	05 c0       	rjmp	.+10     	; 0x137c <qtm_lib_post_process+0xe8>
    1372:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1376:	8f 5f       	subi	r24, 0xFF	; 255
    1378:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    137c:	10 e0       	ldi	r17, 0x00	; 0
    137e:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1382:	88 23       	and	r24, r24
    1384:	71 f0       	breq	.+28     	; 0x13a2 <qtm_lib_post_process+0x10e>
    1386:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    138a:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    138e:	80 64       	ori	r24, 0x40	; 64
    1390:	ad de       	rcall	.-678    	; 0x10ec <qtm_error_handler>
    1392:	07 c0       	rjmp	.+14     	; 0x13a2 <qtm_lib_post_process+0x10e>
    1394:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1398:	8f 5f       	subi	r24, 0xFF	; 255
    139a:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    139e:	13 e0       	ldi	r17, 0x03	; 3
    13a0:	ee cf       	rjmp	.-36     	; 0x137e <qtm_lib_post_process+0xea>
    13a2:	81 2f       	mov	r24, r17
    13a4:	0f 90       	pop	r0
    13a6:	df 91       	pop	r29
    13a8:	cf 91       	pop	r28
    13aa:	1f 91       	pop	r17
    13ac:	08 95       	ret

000013ae <select_next_channel_to_measure>:
    13ae:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    13b2:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    13b6:	a0 91 a4 3e 	lds	r26, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    13ba:	b0 91 a5 3e 	lds	r27, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    13be:	ed 91       	ld	r30, X+
    13c0:	fc 91       	ld	r31, X
    13c2:	11 97       	sbiw	r26, 0x01	; 1
    13c4:	40 81       	ld	r20, Z
    13c6:	51 81       	ldd	r21, Z+1	; 0x01
    13c8:	25 e0       	ldi	r18, 0x05	; 5
    13ca:	28 9f       	mul	r18, r24
    13cc:	b0 01       	movw	r22, r0
    13ce:	29 9f       	mul	r18, r25
    13d0:	70 0d       	add	r23, r0
    13d2:	11 24       	eor	r1, r1
    13d4:	20 e0       	ldi	r18, 0x00	; 0
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	84 17       	cp	r24, r20
    13da:	95 07       	cpc	r25, r21
    13dc:	a8 f4       	brcc	.+42     	; 0x1408 <select_next_channel_to_measure+0x5a>
    13de:	14 96       	adiw	r26, 0x04	; 4
    13e0:	ed 91       	ld	r30, X+
    13e2:	fc 91       	ld	r31, X
    13e4:	15 97       	sbiw	r26, 0x05	; 5
    13e6:	e2 0f       	add	r30, r18
    13e8:	f3 1f       	adc	r31, r19
    13ea:	e6 0f       	add	r30, r22
    13ec:	f7 1f       	adc	r31, r23
    13ee:	e0 81       	ld	r30, Z
    13f0:	2b 5f       	subi	r18, 0xFB	; 251
    13f2:	3f 4f       	sbci	r19, 0xFF	; 255
    13f4:	e0 fd       	sbrc	r30, 0
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <select_next_channel_to_measure+0x4e>
    13f8:	01 96       	adiw	r24, 0x01	; 1
    13fa:	ee cf       	rjmp	.-36     	; 0x13d8 <select_next_channel_to_measure+0x2a>
    13fc:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <current_measure_channel>
    1400:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <current_measure_channel+0x1>
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	08 95       	ret
    1408:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel>
    140c:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <current_measure_channel+0x1>
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	08 95       	ret

00001414 <qtm_measure_node>:
    1414:	bc 01       	movw	r22, r24
    1416:	e0 91 a4 3e 	lds	r30, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    141a:	f0 91 a5 3e 	lds	r31, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    141e:	86 e0       	ldi	r24, 0x06	; 6
    1420:	86 9f       	mul	r24, r22
    1422:	90 01       	movw	r18, r0
    1424:	87 9f       	mul	r24, r23
    1426:	30 0d       	add	r19, r0
    1428:	11 24       	eor	r1, r1
    142a:	a2 81       	ldd	r26, Z+2	; 0x02
    142c:	b3 81       	ldd	r27, Z+3	; 0x03
    142e:	a2 0f       	add	r26, r18
    1430:	b3 1f       	adc	r27, r19
    1432:	11 96       	adiw	r26, 0x01	; 1
    1434:	8c 91       	ld	r24, X
    1436:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    143a:	a2 81       	ldd	r26, Z+2	; 0x02
    143c:	b3 81       	ldd	r27, Z+3	; 0x03
    143e:	a2 0f       	add	r26, r18
    1440:	b3 1f       	adc	r27, r19
    1442:	8c 91       	ld	r24, X
    1444:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    1448:	95 e0       	ldi	r25, 0x05	; 5
    144a:	96 9f       	mul	r25, r22
    144c:	a0 01       	movw	r20, r0
    144e:	97 9f       	mul	r25, r23
    1450:	50 0d       	add	r21, r0
    1452:	11 24       	eor	r1, r1
    1454:	a4 81       	ldd	r26, Z+4	; 0x04
    1456:	b5 81       	ldd	r27, Z+5	; 0x05
    1458:	a4 0f       	add	r26, r20
    145a:	b5 1f       	adc	r27, r21
    145c:	13 96       	adiw	r26, 0x03	; 3
    145e:	8c 91       	ld	r24, X
    1460:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    1464:	a4 81       	ldd	r26, Z+4	; 0x04
    1466:	b5 81       	ldd	r27, Z+5	; 0x05
    1468:	a4 0f       	add	r26, r20
    146a:	b5 1f       	adc	r27, r21
    146c:	14 96       	adiw	r26, 0x04	; 4
    146e:	8c 91       	ld	r24, X
    1470:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    1474:	a4 81       	ldd	r26, Z+4	; 0x04
    1476:	b5 81       	ldd	r27, Z+5	; 0x05
    1478:	a4 0f       	add	r26, r20
    147a:	b5 1f       	adc	r27, r21
    147c:	8c 91       	ld	r24, X
    147e:	81 fd       	sbrc	r24, 1
    1480:	9c 93       	st	X, r25
    1482:	84 81       	ldd	r24, Z+4	; 0x04
    1484:	95 81       	ldd	r25, Z+5	; 0x05
    1486:	dc 01       	movw	r26, r24
    1488:	a4 0f       	add	r26, r20
    148a:	b5 1f       	adc	r27, r21
    148c:	8c 91       	ld	r24, X
    148e:	8c 71       	andi	r24, 0x1C	; 28
    1490:	69 f4       	brne	.+26     	; 0x14ac <qtm_measure_node+0x98>
    1492:	a2 81       	ldd	r26, Z+2	; 0x02
    1494:	b3 81       	ldd	r27, Z+3	; 0x03
    1496:	a2 0f       	add	r26, r18
    1498:	b3 1f       	adc	r27, r19
    149a:	14 96       	adiw	r26, 0x04	; 4
    149c:	ac 91       	ld	r26, X
    149e:	a2 95       	swap	r26
    14a0:	af 70       	andi	r26, 0x0F	; 15
    14a2:	b0 e0       	ldi	r27, 0x00	; 0
    14a4:	ae 53       	subi	r26, 0x3E	; 62
    14a6:	b5 46       	sbci	r27, 0x65	; 101
    14a8:	8c 91       	ld	r24, X
    14aa:	01 c0       	rjmp	.+2      	; 0x14ae <qtm_measure_node+0x9a>
    14ac:	8f e3       	ldi	r24, 0x3F	; 63
    14ae:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    14b2:	a2 81       	ldd	r26, Z+2	; 0x02
    14b4:	b3 81       	ldd	r27, Z+3	; 0x03
    14b6:	a2 0f       	add	r26, r18
    14b8:	b3 1f       	adc	r27, r19
    14ba:	12 96       	adiw	r26, 0x02	; 2
    14bc:	8c 91       	ld	r24, X
    14be:	8b 31       	cpi	r24, 0x1B	; 27
    14c0:	10 f4       	brcc	.+4      	; 0x14c6 <qtm_measure_node+0xb2>
    14c2:	8c 5f       	subi	r24, 0xFC	; 252
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <qtm_measure_node+0xb4>
    14c6:	8f e1       	ldi	r24, 0x1F	; 31
    14c8:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    14cc:	a2 81       	ldd	r26, Z+2	; 0x02
    14ce:	b3 81       	ldd	r27, Z+3	; 0x03
    14d0:	a2 0f       	add	r26, r18
    14d2:	b3 1f       	adc	r27, r19
    14d4:	15 96       	adiw	r26, 0x05	; 5
    14d6:	8c 91       	ld	r24, X
    14d8:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    14dc:	a2 81       	ldd	r26, Z+2	; 0x02
    14de:	b3 81       	ldd	r27, Z+3	; 0x03
    14e0:	a2 0f       	add	r26, r18
    14e2:	b3 1f       	adc	r27, r19
    14e4:	13 96       	adiw	r26, 0x03	; 3
    14e6:	8c 91       	ld	r24, X
    14e8:	82 95       	swap	r24
    14ea:	8f 70       	andi	r24, 0x0F	; 15
    14ec:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    14f0:	82 81       	ldd	r24, Z+2	; 0x02
    14f2:	93 81       	ldd	r25, Z+3	; 0x03
    14f4:	fc 01       	movw	r30, r24
    14f6:	e2 0f       	add	r30, r18
    14f8:	f3 1f       	adc	r31, r19
    14fa:	83 81       	ldd	r24, Z+3	; 0x03
    14fc:	8f 70       	andi	r24, 0x0F	; 15
    14fe:	80 61       	ori	r24, 0x10	; 16
    1500:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    1504:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1508:	83 60       	ori	r24, 0x03	; 3
    150a:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    150e:	81 e8       	ldi	r24, 0x81	; 129
    1510:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1514:	81 e0       	ldi	r24, 0x01	; 1
    1516:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    151a:	08 95       	ret

0000151c <qtm_acquisition_process>:
    151c:	3f 92       	push	r3
    151e:	4f 92       	push	r4
    1520:	5f 92       	push	r5
    1522:	6f 92       	push	r6
    1524:	7f 92       	push	r7
    1526:	8f 92       	push	r8
    1528:	9f 92       	push	r9
    152a:	af 92       	push	r10
    152c:	bf 92       	push	r11
    152e:	cf 92       	push	r12
    1530:	df 92       	push	r13
    1532:	ef 92       	push	r14
    1534:	ff 92       	push	r15
    1536:	0f 93       	push	r16
    1538:	1f 93       	push	r17
    153a:	cf 93       	push	r28
    153c:	df 93       	push	r29
    153e:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    1542:	88 23       	and	r24, r24
    1544:	09 f4       	brne	.+2      	; 0x1548 <qtm_acquisition_process+0x2c>
    1546:	48 c1       	rjmp	.+656    	; 0x17d8 <qtm_acquisition_process+0x2bc>
    1548:	a0 91 a4 3e 	lds	r26, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    154c:	b0 91 a5 3e 	lds	r27, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    1550:	c0 90 a6 3e 	lds	r12, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    1554:	d0 90 a7 3e 	lds	r13, 0x3EA7	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    1558:	00 e0       	ldi	r16, 0x00	; 0
    155a:	10 e0       	ldi	r17, 0x00	; 0
    155c:	60 e0       	ldi	r22, 0x00	; 0
    155e:	70 e0       	ldi	r23, 0x00	; 0
    1560:	e1 2c       	mov	r14, r1
    1562:	f1 2c       	mov	r15, r1
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	33 24       	eor	r3, r3
    1568:	33 94       	inc	r3
    156a:	d1 e8       	ldi	r29, 0x81	; 129
    156c:	4d 2e       	mov	r4, r29
    156e:	88 24       	eor	r8, r8
    1570:	8a 94       	dec	r8
    1572:	99 24       	eor	r9, r9
    1574:	93 94       	inc	r9
    1576:	6d 90       	ld	r6, X+
    1578:	7c 90       	ld	r7, X
    157a:	11 97       	sbiw	r26, 0x01	; 1
    157c:	f3 01       	movw	r30, r6
    157e:	20 81       	ld	r18, Z
    1580:	31 81       	ldd	r19, Z+1	; 0x01
    1582:	e2 16       	cp	r14, r18
    1584:	f3 06       	cpc	r15, r19
    1586:	08 f0       	brcs	.+2      	; 0x158a <qtm_acquisition_process+0x6e>
    1588:	23 c1       	rjmp	.+582    	; 0x17d0 <qtm_acquisition_process+0x2b4>
    158a:	e6 01       	movw	r28, r12
    158c:	29 91       	ld	r18, Y+
    158e:	39 91       	ld	r19, Y+
    1590:	6e 01       	movw	r12, r28
    1592:	14 96       	adiw	r26, 0x04	; 4
    1594:	ed 91       	ld	r30, X+
    1596:	fc 91       	ld	r31, X
    1598:	15 97       	sbiw	r26, 0x05	; 5
    159a:	e6 0f       	add	r30, r22
    159c:	f7 1f       	adc	r31, r23
    159e:	40 81       	ld	r20, Z
    15a0:	4c 71       	andi	r20, 0x1C	; 28
    15a2:	50 e0       	ldi	r21, 0x00	; 0
    15a4:	56 95       	lsr	r21
    15a6:	47 95       	ror	r20
    15a8:	56 95       	lsr	r21
    15aa:	47 95       	ror	r20
    15ac:	41 15       	cp	r20, r1
    15ae:	51 05       	cpc	r21, r1
    15b0:	21 f0       	breq	.+8      	; 0x15ba <qtm_acquisition_process+0x9e>
    15b2:	41 30       	cpi	r20, 0x01	; 1
    15b4:	51 05       	cpc	r21, r1
    15b6:	b9 f0       	breq	.+46     	; 0x15e6 <qtm_acquisition_process+0xca>
    15b8:	02 c1       	rjmp	.+516    	; 0x17be <qtm_acquisition_process+0x2a2>
    15ba:	12 96       	adiw	r26, 0x02	; 2
    15bc:	cd 91       	ld	r28, X+
    15be:	dc 91       	ld	r29, X
    15c0:	13 97       	sbiw	r26, 0x03	; 3
    15c2:	c0 0f       	add	r28, r16
    15c4:	d1 1f       	adc	r29, r17
    15c6:	4c 81       	ldd	r20, Y+4	; 0x04
    15c8:	4f 70       	andi	r20, 0x0F	; 15
    15ca:	9d 81       	ldd	r25, Y+5	; 0x05
    15cc:	49 17       	cp	r20, r25
    15ce:	10 f4       	brcc	.+4      	; 0x15d4 <qtm_acquisition_process+0xb8>
    15d0:	94 1b       	sub	r25, r20
    15d2:	01 c0       	rjmp	.+2      	; 0x15d6 <qtm_acquisition_process+0xba>
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <qtm_acquisition_process+0xc0>
    15d8:	36 95       	lsr	r19
    15da:	27 95       	ror	r18
    15dc:	9a 95       	dec	r25
    15de:	e2 f7       	brpl	.-8      	; 0x15d8 <qtm_acquisition_process+0xbc>
    15e0:	21 83       	std	Z+1, r18	; 0x01
    15e2:	32 83       	std	Z+2, r19	; 0x02
    15e4:	ed c0       	rjmp	.+474    	; 0x17c0 <qtm_acquisition_process+0x2a4>
    15e6:	12 96       	adiw	r26, 0x02	; 2
    15e8:	4d 91       	ld	r20, X+
    15ea:	5c 91       	ld	r21, X
    15ec:	13 97       	sbiw	r26, 0x03	; 3
    15ee:	40 0f       	add	r20, r16
    15f0:	51 1f       	adc	r21, r17
    15f2:	ea 01       	movw	r28, r20
    15f4:	0d 80       	ldd	r0, Y+5	; 0x05
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <qtm_acquisition_process+0xe0>
    15f8:	36 95       	lsr	r19
    15fa:	27 95       	ror	r18
    15fc:	0a 94       	dec	r0
    15fe:	e2 f7       	brpl	.-8      	; 0x15f8 <qtm_acquisition_process+0xdc>
    1600:	21 83       	std	Z+1, r18	; 0x01
    1602:	32 83       	std	Z+2, r19	; 0x02
    1604:	a3 80       	ldd	r10, Z+3	; 0x03
    1606:	b4 80       	ldd	r11, Z+4	; 0x04
    1608:	21 15       	cp	r18, r1
    160a:	d2 e0       	ldi	r29, 0x02	; 2
    160c:	3d 07       	cpc	r19, r29
    160e:	20 f0       	brcs	.+8      	; 0x1618 <qtm_acquisition_process+0xfc>
    1610:	2f 5f       	subi	r18, 0xFF	; 255
    1612:	31 40       	sbci	r19, 0x01	; 1
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	05 c0       	rjmp	.+10     	; 0x1622 <qtm_acquisition_process+0x106>
    1618:	a4 01       	movw	r20, r8
    161a:	42 1b       	sub	r20, r18
    161c:	53 0b       	sbc	r21, r19
    161e:	9a 01       	movw	r18, r20
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	e3 01       	movw	r28, r6
    1624:	5a 80       	ldd	r5, Y+2	; 0x02
    1626:	d0 e4       	ldi	r29, 0x40	; 64
    1628:	5d 12       	cpse	r5, r29
    162a:	05 c0       	rjmp	.+10     	; 0x1636 <qtm_acquisition_process+0x11a>
    162c:	36 95       	lsr	r19
    162e:	27 95       	ror	r18
    1630:	99 23       	and	r25, r25
    1632:	19 f0       	breq	.+6      	; 0x163a <qtm_acquisition_process+0x11e>
    1634:	09 c0       	rjmp	.+18     	; 0x1648 <qtm_acquisition_process+0x12c>
    1636:	99 23       	and	r25, r25
    1638:	39 f0       	breq	.+14     	; 0x1648 <qtm_acquisition_process+0x12c>
    163a:	4f ef       	ldi	r20, 0xFF	; 255
    163c:	a4 16       	cp	r10, r20
    163e:	b4 06       	cpc	r11, r20
    1640:	31 f4       	brne	.+12     	; 0x164e <qtm_acquisition_process+0x132>
    1642:	40 82       	st	Z, r4
    1644:	8e e0       	ldi	r24, 0x0E	; 14
    1646:	07 c0       	rjmp	.+14     	; 0x1656 <qtm_acquisition_process+0x13a>
    1648:	77 24       	eor	r7, r7
    164a:	73 94       	inc	r7
    164c:	01 c0       	rjmp	.+2      	; 0x1650 <qtm_acquisition_process+0x134>
    164e:	71 2c       	mov	r7, r1
    1650:	2a 30       	cpi	r18, 0x0A	; 10
    1652:	31 05       	cpc	r19, r1
    1654:	90 f4       	brcc	.+36     	; 0x167a <qtm_acquisition_process+0x15e>
    1656:	14 96       	adiw	r26, 0x04	; 4
    1658:	ed 91       	ld	r30, X+
    165a:	fc 91       	ld	r31, X
    165c:	15 97       	sbiw	r26, 0x05	; 5
    165e:	e6 0f       	add	r30, r22
    1660:	f7 1f       	adc	r31, r23
    1662:	90 81       	ld	r25, Z
    1664:	97 ff       	sbrs	r25, 7
    1666:	30 82       	st	Z, r3
    1668:	14 96       	adiw	r26, 0x04	; 4
    166a:	ed 91       	ld	r30, X+
    166c:	fc 91       	ld	r31, X
    166e:	15 97       	sbiw	r26, 0x05	; 5
    1670:	e6 0f       	add	r30, r22
    1672:	f7 1f       	adc	r31, r23
    1674:	a3 82       	std	Z+3, r10	; 0x03
    1676:	b4 82       	std	Z+4, r11	; 0x04
    1678:	a3 c0       	rjmp	.+326    	; 0x17c0 <qtm_acquisition_process+0x2a4>
    167a:	e5 01       	movw	r28, r10
    167c:	cd 2f       	mov	r28, r29
    167e:	dd 27       	eor	r29, r29
    1680:	c2 95       	swap	r28
    1682:	cf 70       	andi	r28, 0x0F	; 15
    1684:	9c 2f       	mov	r25, r28
    1686:	a5 01       	movw	r20, r10
    1688:	44 27       	eor	r20, r20
    168a:	5f 70       	andi	r21, 0x0F	; 15
    168c:	65 2e       	mov	r6, r21
    168e:	a5 01       	movw	r20, r10
    1690:	40 7f       	andi	r20, 0xF0	; 240
    1692:	55 27       	eor	r21, r21
    1694:	52 95       	swap	r21
    1696:	42 95       	swap	r20
    1698:	4f 70       	andi	r20, 0x0F	; 15
    169a:	45 27       	eor	r20, r21
    169c:	5f 70       	andi	r21, 0x0F	; 15
    169e:	45 27       	eor	r20, r21
    16a0:	5a 2d       	mov	r21, r10
    16a2:	5f 70       	andi	r21, 0x0F	; 15
    16a4:	a5 2e       	mov	r10, r21
    16a6:	c4 30       	cpi	r28, 0x04	; 4
    16a8:	30 f0       	brcs	.+12     	; 0x16b6 <qtm_acquisition_process+0x19a>
    16aa:	93 70       	andi	r25, 0x03	; 3
    16ac:	d6 95       	lsr	r29
    16ae:	c7 95       	ror	r28
    16b0:	d6 95       	lsr	r29
    16b2:	c7 95       	ror	r28
    16b4:	9c 0f       	add	r25, r28
    16b6:	71 10       	cpse	r7, r1
    16b8:	3c c0       	rjmp	.+120    	; 0x1732 <qtm_acquisition_process+0x216>
    16ba:	50 e8       	ldi	r21, 0x80	; 128
    16bc:	55 0d       	add	r21, r5
    16be:	52 30       	cpi	r21, 0x02	; 2
    16c0:	10 f4       	brcc	.+4      	; 0x16c6 <qtm_acquisition_process+0x1aa>
    16c2:	56 e0       	ldi	r21, 0x06	; 6
    16c4:	07 c0       	rjmp	.+14     	; 0x16d4 <qtm_acquisition_process+0x1b8>
    16c6:	53 e0       	ldi	r21, 0x03	; 3
    16c8:	05 c0       	rjmp	.+10     	; 0x16d4 <qtm_acquisition_process+0x1b8>
    16ca:	95 17       	cp	r25, r21
    16cc:	68 f4       	brcc	.+26     	; 0x16e8 <qtm_acquisition_process+0x1cc>
    16ce:	9f 5f       	subi	r25, 0xFF	; 255
    16d0:	2f 5c       	subi	r18, 0xCF	; 207
    16d2:	31 09       	sbc	r19, r1
    16d4:	20 3d       	cpi	r18, 0xD0	; 208
    16d6:	31 05       	cpc	r19, r1
    16d8:	c0 f7       	brcc	.-16     	; 0x16ca <qtm_acquisition_process+0x1ae>
    16da:	06 c0       	rjmp	.+12     	; 0x16e8 <qtm_acquisition_process+0x1cc>
    16dc:	cf e0       	ldi	r28, 0x0F	; 15
    16de:	6c 16       	cp	r6, r28
    16e0:	49 f0       	breq	.+18     	; 0x16f4 <qtm_acquisition_process+0x1d8>
    16e2:	63 94       	inc	r6
    16e4:	25 51       	subi	r18, 0x15	; 21
    16e6:	31 09       	sbc	r19, r1
    16e8:	26 31       	cpi	r18, 0x16	; 22
    16ea:	31 05       	cpc	r19, r1
    16ec:	b8 f7       	brcc	.-18     	; 0x16dc <qtm_acquisition_process+0x1c0>
    16ee:	df e0       	ldi	r29, 0x0F	; 15
    16f0:	6d 12       	cpse	r6, r29
    16f2:	0e c0       	rjmp	.+28     	; 0x1710 <qtm_acquisition_process+0x1f4>
    16f4:	95 17       	cp	r25, r21
    16f6:	20 f4       	brcc	.+8      	; 0x1700 <qtm_acquisition_process+0x1e4>
    16f8:	9f 5f       	subi	r25, 0xFF	; 255
    16fa:	d5 e0       	ldi	r29, 0x05	; 5
    16fc:	6d 2e       	mov	r6, r29
    16fe:	08 c0       	rjmp	.+16     	; 0x1710 <qtm_acquisition_process+0x1f4>
    1700:	cf e0       	ldi	r28, 0x0F	; 15
    1702:	6c 2e       	mov	r6, r28
    1704:	05 c0       	rjmp	.+10     	; 0x1710 <qtm_acquisition_process+0x1f4>
    1706:	4f 30       	cpi	r20, 0x0F	; 15
    1708:	49 f0       	breq	.+18     	; 0x171c <qtm_acquisition_process+0x200>
    170a:	4f 5f       	subi	r20, 0xFF	; 255
    170c:	22 50       	subi	r18, 0x02	; 2
    170e:	31 09       	sbc	r19, r1
    1710:	23 30       	cpi	r18, 0x03	; 3
    1712:	31 05       	cpc	r19, r1
    1714:	c0 f7       	brcc	.-16     	; 0x1706 <qtm_acquisition_process+0x1ea>
    1716:	4f 30       	cpi	r20, 0x0F	; 15
    1718:	09 f0       	breq	.+2      	; 0x171c <qtm_acquisition_process+0x200>
    171a:	65 c0       	rjmp	.+202    	; 0x17e6 <qtm_acquisition_process+0x2ca>
    171c:	4f e0       	ldi	r20, 0x0F	; 15
    171e:	64 16       	cp	r6, r20
    1720:	81 f1       	breq	.+96     	; 0x1782 <qtm_acquisition_process+0x266>
    1722:	63 94       	inc	r6
    1724:	45 e0       	ldi	r20, 0x05	; 5
    1726:	5f c0       	rjmp	.+190    	; 0x17e6 <qtm_acquisition_process+0x2ca>
    1728:	99 23       	and	r25, r25
    172a:	61 f0       	breq	.+24     	; 0x1744 <qtm_acquisition_process+0x228>
    172c:	91 50       	subi	r25, 0x01	; 1
    172e:	2f 5c       	subi	r18, 0xCF	; 207
    1730:	31 09       	sbc	r19, r1
    1732:	20 3d       	cpi	r18, 0xD0	; 208
    1734:	31 05       	cpc	r19, r1
    1736:	c0 f7       	brcc	.-16     	; 0x1728 <qtm_acquisition_process+0x20c>
    1738:	05 c0       	rjmp	.+10     	; 0x1744 <qtm_acquisition_process+0x228>
    173a:	66 20       	and	r6, r6
    173c:	41 f0       	breq	.+16     	; 0x174e <qtm_acquisition_process+0x232>
    173e:	6a 94       	dec	r6
    1740:	25 51       	subi	r18, 0x15	; 21
    1742:	31 09       	sbc	r19, r1
    1744:	26 31       	cpi	r18, 0x16	; 22
    1746:	31 05       	cpc	r19, r1
    1748:	c0 f7       	brcc	.-16     	; 0x173a <qtm_acquisition_process+0x21e>
    174a:	61 10       	cpse	r6, r1
    174c:	0d c0       	rjmp	.+26     	; 0x1768 <qtm_acquisition_process+0x24c>
    174e:	99 23       	and	r25, r25
    1750:	21 f0       	breq	.+8      	; 0x175a <qtm_acquisition_process+0x23e>
    1752:	91 50       	subi	r25, 0x01	; 1
    1754:	5a e0       	ldi	r21, 0x0A	; 10
    1756:	65 2e       	mov	r6, r21
    1758:	07 c0       	rjmp	.+14     	; 0x1768 <qtm_acquisition_process+0x24c>
    175a:	61 2c       	mov	r6, r1
    175c:	05 c0       	rjmp	.+10     	; 0x1768 <qtm_acquisition_process+0x24c>
    175e:	44 23       	and	r20, r20
    1760:	41 f0       	breq	.+16     	; 0x1772 <qtm_acquisition_process+0x256>
    1762:	41 50       	subi	r20, 0x01	; 1
    1764:	22 50       	subi	r18, 0x02	; 2
    1766:	31 09       	sbc	r19, r1
    1768:	23 30       	cpi	r18, 0x03	; 3
    176a:	31 05       	cpc	r19, r1
    176c:	c0 f7       	brcc	.-16     	; 0x175e <qtm_acquisition_process+0x242>
    176e:	41 11       	cpse	r20, r1
    1770:	10 c0       	rjmp	.+32     	; 0x1792 <qtm_acquisition_process+0x276>
    1772:	66 20       	and	r6, r6
    1774:	e9 f1       	breq	.+122    	; 0x17f0 <qtm_acquisition_process+0x2d4>
    1776:	6a 94       	dec	r6
    1778:	4a e0       	ldi	r20, 0x0A	; 10
    177a:	23 30       	cpi	r18, 0x03	; 3
    177c:	31 05       	cpc	r19, r1
    177e:	c8 f6       	brcc	.-78     	; 0x1732 <qtm_acquisition_process+0x216>
    1780:	08 c0       	rjmp	.+16     	; 0x1792 <qtm_acquisition_process+0x276>
    1782:	59 13       	cpse	r21, r25
    1784:	2f c0       	rjmp	.+94     	; 0x17e4 <qtm_acquisition_process+0x2c8>
    1786:	23 30       	cpi	r18, 0x03	; 3
    1788:	31 05       	cpc	r19, r1
    178a:	40 f1       	brcs	.+80     	; 0x17dc <qtm_acquisition_process+0x2c0>
    178c:	4f e0       	ldi	r20, 0x0F	; 15
    178e:	a4 2e       	mov	r10, r20
    1790:	4f e0       	ldi	r20, 0x0F	; 15
    1792:	94 30       	cpi	r25, 0x04	; 4
    1794:	18 f0       	brcs	.+6      	; 0x179c <qtm_acquisition_process+0x280>
    1796:	99 0f       	add	r25, r25
    1798:	99 0f       	add	r25, r25
    179a:	99 50       	subi	r25, 0x09	; 9
    179c:	c0 e1       	ldi	r28, 0x10	; 16
    179e:	4c 9f       	mul	r20, r28
    17a0:	a0 01       	movw	r20, r0
    17a2:	11 24       	eor	r1, r1
    17a4:	56 29       	or	r21, r6
    17a6:	4a 29       	or	r20, r10
    17a8:	c9 2f       	mov	r28, r25
    17aa:	d0 e0       	ldi	r29, 0x00	; 0
    17ac:	dc 2f       	mov	r29, r28
    17ae:	cc 27       	eor	r28, r28
    17b0:	d2 95       	swap	r29
    17b2:	d0 7f       	andi	r29, 0xF0	; 240
    17b4:	4c 2b       	or	r20, r28
    17b6:	5d 2b       	or	r21, r29
    17b8:	43 83       	std	Z+3, r20	; 0x03
    17ba:	54 83       	std	Z+4, r21	; 0x04
    17bc:	01 c0       	rjmp	.+2      	; 0x17c0 <qtm_acquisition_process+0x2a4>
    17be:	ff cf       	rjmp	.-2      	; 0x17be <qtm_acquisition_process+0x2a2>
    17c0:	df ef       	ldi	r29, 0xFF	; 255
    17c2:	ed 1a       	sub	r14, r29
    17c4:	fd 0a       	sbc	r15, r29
    17c6:	6b 5f       	subi	r22, 0xFB	; 251
    17c8:	7f 4f       	sbci	r23, 0xFF	; 255
    17ca:	0a 5f       	subi	r16, 0xFA	; 250
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	d3 ce       	rjmp	.-602    	; 0x1576 <qtm_acquisition_process+0x5a>
    17d0:	92 e0       	ldi	r25, 0x02	; 2
    17d2:	90 93 67 3e 	sts	0x3E67, r25	; 0x803e67 <touch_seq_lib_state>
    17d6:	0e c0       	rjmp	.+28     	; 0x17f4 <qtm_acquisition_process+0x2d8>
    17d8:	83 e0       	ldi	r24, 0x03	; 3
    17da:	0c c0       	rjmp	.+24     	; 0x17f4 <qtm_acquisition_process+0x2d8>
    17dc:	4f e0       	ldi	r20, 0x0F	; 15
    17de:	2f e0       	ldi	r18, 0x0F	; 15
    17e0:	a2 2e       	mov	r10, r18
    17e2:	d7 cf       	rjmp	.-82     	; 0x1792 <qtm_acquisition_process+0x276>
    17e4:	4f e0       	ldi	r20, 0x0F	; 15
    17e6:	23 30       	cpi	r18, 0x03	; 3
    17e8:	31 05       	cpc	r19, r1
    17ea:	08 f0       	brcs	.+2      	; 0x17ee <qtm_acquisition_process+0x2d2>
    17ec:	73 cf       	rjmp	.-282    	; 0x16d4 <qtm_acquisition_process+0x1b8>
    17ee:	d1 cf       	rjmp	.-94     	; 0x1792 <qtm_acquisition_process+0x276>
    17f0:	40 e0       	ldi	r20, 0x00	; 0
    17f2:	cf cf       	rjmp	.-98     	; 0x1792 <qtm_acquisition_process+0x276>
    17f4:	df 91       	pop	r29
    17f6:	cf 91       	pop	r28
    17f8:	1f 91       	pop	r17
    17fa:	0f 91       	pop	r16
    17fc:	ff 90       	pop	r15
    17fe:	ef 90       	pop	r14
    1800:	df 90       	pop	r13
    1802:	cf 90       	pop	r12
    1804:	bf 90       	pop	r11
    1806:	af 90       	pop	r10
    1808:	9f 90       	pop	r9
    180a:	8f 90       	pop	r8
    180c:	7f 90       	pop	r7
    180e:	6f 90       	pop	r6
    1810:	5f 90       	pop	r5
    1812:	4f 90       	pop	r4
    1814:	3f 90       	pop	r3
    1816:	08 95       	ret

00001818 <qtm_ptc_init_acquisition_module>:
    1818:	cf 93       	push	r28
    181a:	dc 01       	movw	r26, r24
    181c:	89 2b       	or	r24, r25
    181e:	79 f1       	breq	.+94     	; 0x187e <qtm_ptc_init_acquisition_module+0x66>
    1820:	ed 91       	ld	r30, X+
    1822:	fc 91       	ld	r31, X
    1824:	11 97       	sbiw	r26, 0x01	; 1
    1826:	60 81       	ld	r22, Z
    1828:	71 81       	ldd	r23, Z+1	; 0x01
    182a:	40 e0       	ldi	r20, 0x00	; 0
    182c:	50 e0       	ldi	r21, 0x00	; 0
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	26 17       	cp	r18, r22
    1836:	37 07       	cpc	r19, r23
    1838:	79 f0       	breq	.+30     	; 0x1858 <qtm_ptc_init_acquisition_module+0x40>
    183a:	12 96       	adiw	r26, 0x02	; 2
    183c:	ed 91       	ld	r30, X+
    183e:	fc 91       	ld	r31, X
    1840:	13 97       	sbiw	r26, 0x03	; 3
    1842:	e4 0f       	add	r30, r20
    1844:	f5 1f       	adc	r31, r21
    1846:	c0 81       	ld	r28, Z
    1848:	81 81       	ldd	r24, Z+1	; 0x01
    184a:	8c 2b       	or	r24, r28
    184c:	98 2b       	or	r25, r24
    184e:	2f 5f       	subi	r18, 0xFF	; 255
    1850:	3f 4f       	sbci	r19, 0xFF	; 255
    1852:	4a 5f       	subi	r20, 0xFA	; 250
    1854:	5f 4f       	sbci	r21, 0xFF	; 255
    1856:	ee cf       	rjmp	.-36     	; 0x1834 <qtm_ptc_init_acquisition_module+0x1c>
    1858:	99 23       	and	r25, r25
    185a:	99 f0       	breq	.+38     	; 0x1882 <qtm_ptc_init_acquisition_module+0x6a>
    185c:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    1860:	81 11       	cpse	r24, r1
    1862:	06 c0       	rjmp	.+12     	; 0x1870 <qtm_ptc_init_acquisition_module+0x58>
    1864:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    186e:	05 c0       	rjmp	.+10     	; 0x187a <qtm_ptc_init_acquisition_module+0x62>
    1870:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1874:	98 2b       	or	r25, r24
    1876:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	03 c0       	rjmp	.+6      	; 0x1884 <qtm_ptc_init_acquisition_module+0x6c>
    187e:	8b e0       	ldi	r24, 0x0B	; 11
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <qtm_ptc_init_acquisition_module+0x6c>
    1882:	82 e0       	ldi	r24, 0x02	; 2
    1884:	cf 91       	pop	r28
    1886:	08 95       	ret

00001888 <qtm_ptc_qtlib_assign_signal_memory>:
    1888:	00 97       	sbiw	r24, 0x00	; 0
    188a:	31 f0       	breq	.+12     	; 0x1898 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    188c:	80 93 a6 3e 	sts	0x3EA6, r24	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    1890:	90 93 a7 3e 	sts	0x3EA7, r25	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    1894:	80 e0       	ldi	r24, 0x00	; 0
    1896:	08 95       	ret
    1898:	8b e0       	ldi	r24, 0x0B	; 11
    189a:	08 95       	ret

0000189c <qtm_ptc_start_measurement_seq>:
    189c:	61 15       	cp	r22, r1
    189e:	71 05       	cpc	r23, r1
    18a0:	91 f1       	breq	.+100    	; 0x1906 <qtm_ptc_start_measurement_seq+0x6a>
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	81 f1       	breq	.+96     	; 0x1906 <qtm_ptc_start_measurement_seq+0x6a>
    18a6:	20 91 67 3e 	lds	r18, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    18aa:	22 23       	and	r18, r18
    18ac:	71 f1       	breq	.+92     	; 0x190a <qtm_ptc_start_measurement_seq+0x6e>
    18ae:	24 30       	cpi	r18, 0x04	; 4
    18b0:	71 f1       	breq	.+92     	; 0x190e <qtm_ptc_start_measurement_seq+0x72>
    18b2:	80 93 a4 3e 	sts	0x3EA4, r24	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    18b6:	90 93 a5 3e 	sts	0x3EA5, r25	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    18ba:	60 93 65 3e 	sts	0x3E65, r22	; 0x803e65 <ptc_seq_measure_complete_pointer>
    18be:	70 93 66 3e 	sts	0x3E66, r23	; 0x803e66 <ptc_seq_measure_complete_pointer+0x1>
    18c2:	20 ec       	ldi	r18, 0xC0	; 192
    18c4:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18c8:	dc 01       	movw	r26, r24
    18ca:	ed 91       	ld	r30, X+
    18cc:	fc 91       	ld	r31, X
    18ce:	22 81       	ldd	r18, Z+2	; 0x02
    18d0:	20 34       	cpi	r18, 0x40	; 64
    18d2:	21 f4       	brne	.+8      	; 0x18dc <qtm_ptc_start_measurement_seq+0x40>
    18d4:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18d8:	20 62       	ori	r18, 0x20	; 32
    18da:	05 c0       	rjmp	.+10     	; 0x18e6 <qtm_ptc_start_measurement_seq+0x4a>
    18dc:	20 38       	cpi	r18, 0x80	; 128
    18de:	41 f4       	brne	.+16     	; 0x18f0 <qtm_ptc_start_measurement_seq+0x54>
    18e0:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18e4:	28 62       	ori	r18, 0x28	; 40
    18e6:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18ea:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    18ee:	13 c0       	rjmp	.+38     	; 0x1916 <qtm_ptc_start_measurement_seq+0x7a>
    18f0:	21 38       	cpi	r18, 0x81	; 129
    18f2:	79 f4       	brne	.+30     	; 0x1912 <qtm_ptc_start_measurement_seq+0x76>
    18f4:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18f8:	28 62       	ori	r18, 0x28	; 40
    18fa:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18fe:	26 e8       	ldi	r18, 0x86	; 134
    1900:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    1904:	08 c0       	rjmp	.+16     	; 0x1916 <qtm_ptc_start_measurement_seq+0x7a>
    1906:	8b e0       	ldi	r24, 0x0B	; 11
    1908:	08 95       	ret
    190a:	83 e0       	ldi	r24, 0x03	; 3
    190c:	08 95       	ret
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	08 95       	ret
    1912:	82 e0       	ldi	r24, 0x02	; 2
    1914:	08 95       	ret
    1916:	dc 01       	movw	r26, r24
    1918:	ed 91       	ld	r30, X+
    191a:	fc 91       	ld	r31, X
    191c:	84 81       	ldd	r24, Z+4	; 0x04
    191e:	80 31       	cpi	r24, 0x10	; 16
    1920:	08 f0       	brcs	.+2      	; 0x1924 <qtm_ptc_start_measurement_seq+0x88>
    1922:	80 e1       	ldi	r24, 0x10	; 16
    1924:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    192e:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    1932:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel>
    1936:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <current_measure_channel+0x1>
    193a:	39 dd       	rcall	.-1422   	; 0x13ae <select_next_channel_to_measure>
    193c:	81 11       	cpse	r24, r1
    193e:	0a c0       	rjmp	.+20     	; 0x1954 <qtm_ptc_start_measurement_seq+0xb8>
    1940:	84 e0       	ldi	r24, 0x04	; 4
    1942:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    1946:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    194a:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    194e:	62 dd       	rcall	.-1340   	; 0x1414 <qtm_measure_node>
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	08 95       	ret
    1954:	82 e0       	ldi	r24, 0x02	; 2
    1956:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    195a:	08 95       	ret

0000195c <qtm_enable_sensor_node>:
    195c:	00 97       	sbiw	r24, 0x00	; 0
    195e:	c9 f0       	breq	.+50     	; 0x1992 <qtm_enable_sensor_node+0x36>
    1960:	dc 01       	movw	r26, r24
    1962:	ed 91       	ld	r30, X+
    1964:	fc 91       	ld	r31, X
    1966:	11 97       	sbiw	r26, 0x01	; 1
    1968:	20 81       	ld	r18, Z
    196a:	31 81       	ldd	r19, Z+1	; 0x01
    196c:	26 17       	cp	r18, r22
    196e:	37 07       	cpc	r19, r23
    1970:	90 f0       	brcs	.+36     	; 0x1996 <qtm_enable_sensor_node+0x3a>
    1972:	45 e0       	ldi	r20, 0x05	; 5
    1974:	46 9f       	mul	r20, r22
    1976:	90 01       	movw	r18, r0
    1978:	47 9f       	mul	r20, r23
    197a:	30 0d       	add	r19, r0
    197c:	11 24       	eor	r1, r1
    197e:	14 96       	adiw	r26, 0x04	; 4
    1980:	ed 91       	ld	r30, X+
    1982:	fc 91       	ld	r31, X
    1984:	15 97       	sbiw	r26, 0x05	; 5
    1986:	e2 0f       	add	r30, r18
    1988:	f3 1f       	adc	r31, r19
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	80 83       	st	Z, r24
    198e:	80 e0       	ldi	r24, 0x00	; 0
    1990:	08 95       	ret
    1992:	8b e0       	ldi	r24, 0x0B	; 11
    1994:	08 95       	ret
    1996:	82 e0       	ldi	r24, 0x02	; 2
    1998:	08 95       	ret

0000199a <qtm_calibrate_sensor_node>:
    199a:	fc 01       	movw	r30, r24
    199c:	89 2b       	or	r24, r25
    199e:	d1 f1       	breq	.+116    	; 0x1a14 <qtm_calibrate_sensor_node+0x7a>
    19a0:	a0 81       	ld	r26, Z
    19a2:	b1 81       	ldd	r27, Z+1	; 0x01
    19a4:	8d 91       	ld	r24, X+
    19a6:	9c 91       	ld	r25, X
    19a8:	11 97       	sbiw	r26, 0x01	; 1
    19aa:	86 17       	cp	r24, r22
    19ac:	97 07       	cpc	r25, r23
    19ae:	a0 f1       	brcs	.+104    	; 0x1a18 <qtm_calibrate_sensor_node+0x7e>
    19b0:	12 96       	adiw	r26, 0x02	; 2
    19b2:	9c 91       	ld	r25, X
    19b4:	04 80       	ldd	r0, Z+4	; 0x04
    19b6:	f5 81       	ldd	r31, Z+5	; 0x05
    19b8:	e0 2d       	mov	r30, r0
    19ba:	90 34       	cpi	r25, 0x40	; 64
    19bc:	59 f4       	brne	.+22     	; 0x19d4 <qtm_calibrate_sensor_node+0x3a>
    19be:	85 e0       	ldi	r24, 0x05	; 5
    19c0:	86 9f       	mul	r24, r22
    19c2:	d0 01       	movw	r26, r0
    19c4:	87 9f       	mul	r24, r23
    19c6:	b0 0d       	add	r27, r0
    19c8:	11 24       	eor	r1, r1
    19ca:	ae 0f       	add	r26, r30
    19cc:	bf 1f       	adc	r27, r31
    19ce:	84 e3       	ldi	r24, 0x34	; 52
    19d0:	92 e0       	ldi	r25, 0x02	; 2
    19d2:	0d c0       	rjmp	.+26     	; 0x19ee <qtm_calibrate_sensor_node+0x54>
    19d4:	90 58       	subi	r25, 0x80	; 128
    19d6:	92 30       	cpi	r25, 0x02	; 2
    19d8:	80 f4       	brcc	.+32     	; 0x19fa <qtm_calibrate_sensor_node+0x60>
    19da:	85 e0       	ldi	r24, 0x05	; 5
    19dc:	86 9f       	mul	r24, r22
    19de:	d0 01       	movw	r26, r0
    19e0:	87 9f       	mul	r24, r23
    19e2:	b0 0d       	add	r27, r0
    19e4:	11 24       	eor	r1, r1
    19e6:	ae 0f       	add	r26, r30
    19e8:	bf 1f       	adc	r27, r31
    19ea:	87 e6       	ldi	r24, 0x67	; 103
    19ec:	95 e0       	ldi	r25, 0x05	; 5
    19ee:	13 96       	adiw	r26, 0x03	; 3
    19f0:	8d 93       	st	X+, r24
    19f2:	9c 93       	st	X, r25
    19f4:	14 97       	sbiw	r26, 0x04	; 4
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	01 c0       	rjmp	.+2      	; 0x19fc <qtm_calibrate_sensor_node+0x62>
    19fa:	82 e0       	ldi	r24, 0x02	; 2
    19fc:	95 e0       	ldi	r25, 0x05	; 5
    19fe:	96 9f       	mul	r25, r22
    1a00:	90 01       	movw	r18, r0
    1a02:	97 9f       	mul	r25, r23
    1a04:	30 0d       	add	r19, r0
    1a06:	11 24       	eor	r1, r1
    1a08:	e2 0f       	add	r30, r18
    1a0a:	f3 1f       	adc	r31, r19
    1a0c:	90 81       	ld	r25, Z
    1a0e:	92 60       	ori	r25, 0x02	; 2
    1a10:	90 83       	st	Z, r25
    1a12:	08 95       	ret
    1a14:	8b e0       	ldi	r24, 0x0B	; 11
    1a16:	08 95       	ret
    1a18:	82 e0       	ldi	r24, 0x02	; 2
    1a1a:	08 95       	ret

00001a1c <qtm_t81x_ptc_handler_eoc>:
    1a1c:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1a20:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    1a24:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    1a28:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    1a2c:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    1a30:	9c 01       	movw	r18, r24
    1a32:	22 0f       	add	r18, r18
    1a34:	33 1f       	adc	r19, r19
    1a36:	e0 91 a6 3e 	lds	r30, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    1a3a:	f0 91 a7 3e 	lds	r31, 0x3EA7	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    1a3e:	e2 0f       	add	r30, r18
    1a40:	f3 1f       	adc	r31, r19
    1a42:	40 83       	st	Z, r20
    1a44:	51 83       	std	Z+1, r21	; 0x01
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <current_measure_channel>
    1a4c:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <current_measure_channel+0x1>
    1a50:	ae dc       	rcall	.-1700   	; 0x13ae <select_next_channel_to_measure>
    1a52:	81 11       	cpse	r24, r1
    1a54:	08 c0       	rjmp	.+16     	; 0x1a66 <qtm_t81x_ptc_handler_eoc+0x4a>
    1a56:	84 e0       	ldi	r24, 0x04	; 4
    1a58:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    1a5c:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    1a60:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    1a64:	d7 cc       	rjmp	.-1618   	; 0x1414 <qtm_measure_node>
    1a66:	e0 91 65 3e 	lds	r30, 0x3E65	; 0x803e65 <ptc_seq_measure_complete_pointer>
    1a6a:	f0 91 66 3e 	lds	r31, 0x3E66	; 0x803e66 <ptc_seq_measure_complete_pointer+0x1>
    1a6e:	09 94       	ijmp

00001a70 <__udivmodhi4>:
    1a70:	aa 1b       	sub	r26, r26
    1a72:	bb 1b       	sub	r27, r27
    1a74:	51 e1       	ldi	r21, 0x11	; 17
    1a76:	07 c0       	rjmp	.+14     	; 0x1a86 <__udivmodhi4_ep>

00001a78 <__udivmodhi4_loop>:
    1a78:	aa 1f       	adc	r26, r26
    1a7a:	bb 1f       	adc	r27, r27
    1a7c:	a6 17       	cp	r26, r22
    1a7e:	b7 07       	cpc	r27, r23
    1a80:	10 f0       	brcs	.+4      	; 0x1a86 <__udivmodhi4_ep>
    1a82:	a6 1b       	sub	r26, r22
    1a84:	b7 0b       	sbc	r27, r23

00001a86 <__udivmodhi4_ep>:
    1a86:	88 1f       	adc	r24, r24
    1a88:	99 1f       	adc	r25, r25
    1a8a:	5a 95       	dec	r21
    1a8c:	a9 f7       	brne	.-22     	; 0x1a78 <__udivmodhi4_loop>
    1a8e:	80 95       	com	r24
    1a90:	90 95       	com	r25
    1a92:	bc 01       	movw	r22, r24
    1a94:	cd 01       	movw	r24, r26
    1a96:	08 95       	ret

00001a98 <__divmodhi4>:
    1a98:	97 fb       	bst	r25, 7
    1a9a:	07 2e       	mov	r0, r23
    1a9c:	16 f4       	brtc	.+4      	; 0x1aa2 <__divmodhi4+0xa>
    1a9e:	00 94       	com	r0
    1aa0:	06 d0       	rcall	.+12     	; 0x1aae <__divmodhi4_neg1>
    1aa2:	77 fd       	sbrc	r23, 7
    1aa4:	08 d0       	rcall	.+16     	; 0x1ab6 <__divmodhi4_neg2>
    1aa6:	e4 df       	rcall	.-56     	; 0x1a70 <__udivmodhi4>
    1aa8:	07 fc       	sbrc	r0, 7
    1aaa:	05 d0       	rcall	.+10     	; 0x1ab6 <__divmodhi4_neg2>
    1aac:	3e f4       	brtc	.+14     	; 0x1abc <__divmodhi4_exit>

00001aae <__divmodhi4_neg1>:
    1aae:	90 95       	com	r25
    1ab0:	81 95       	neg	r24
    1ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab4:	08 95       	ret

00001ab6 <__divmodhi4_neg2>:
    1ab6:	70 95       	com	r23
    1ab8:	61 95       	neg	r22
    1aba:	7f 4f       	sbci	r23, 0xFF	; 255

00001abc <__divmodhi4_exit>:
    1abc:	08 95       	ret

00001abe <_exit>:
    1abe:	f8 94       	cli

00001ac0 <__stop_program>:
    1ac0:	ff cf       	rjmp	.-2      	; 0x1ac0 <__stop_program>
