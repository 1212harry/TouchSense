
Attiny814Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00803e00  00001ace  00001b82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ac8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  00009ac8  00001ac8  00001b7c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000061  00803e46  00803e46  00001bc8  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001bc8  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001bf8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002a8  00000000  00000000  00001c38  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005cf4  00000000  00000000  00001ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000254b  00000000  00000000  00007bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000178c  00000000  00000000  0000a11f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000488  00000000  00000000  0000b8ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002dca  00000000  00000000  0000bd34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ea0  00000000  00000000  0000eafe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001e8  00000000  00000000  0000f99e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	30 c0       	rjmp	.+96     	; 0x70 <__vector_7>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	4e c0       	rjmp	.+156    	; 0xbe <__vector_16>
      22:	62 c3       	rjmp	.+1732   	; 0x6e8 <__vector_17>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	cd bf       	out	0x3d, r28	; 61
      3c:	df e3       	ldi	r29, 0x3F	; 63
      3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
      40:	1e e3       	ldi	r17, 0x3E	; 62
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	be e3       	ldi	r27, 0x3E	; 62
      46:	ee ec       	ldi	r30, 0xCE	; 206
      48:	fa e1       	ldi	r31, 0x1A	; 26
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	a6 34       	cpi	r26, 0x46	; 70
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	2e e3       	ldi	r18, 0x3E	; 62
      58:	a6 e4       	ldi	r26, 0x46	; 70
      5a:	be e3       	ldi	r27, 0x3E	; 62
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a7 3a       	cpi	r26, 0xA7	; 167
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	08 d1       	rcall	.+528    	; 0x278 <main>
      68:	2d cd       	rjmp	.-1446   	; 0xfffffac4 <__eeprom_end+0xff7efac4>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      6c:	af d3       	rcall	.+1886   	; 0x7cc <system_init>

	touch_init();
      6e:	a6 c2       	rjmp	.+1356   	; 0x5bc <touch_init>

00000070 <__vector_7>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_PIT_vect)
{
      70:	1f 92       	push	r1
      72:	0f 92       	push	r0
      74:	0f b6       	in	r0, 0x3f	; 63
      76:	0f 92       	push	r0
      78:	11 24       	eor	r1, r1
      7a:	2f 93       	push	r18
      7c:	3f 93       	push	r19
      7e:	4f 93       	push	r20
      80:	5f 93       	push	r21
      82:	6f 93       	push	r22
      84:	7f 93       	push	r23
      86:	8f 93       	push	r24
      88:	9f 93       	push	r25
      8a:	af 93       	push	r26
      8c:	bf 93       	push	r27
      8e:	ef 93       	push	r30
      90:	ff 93       	push	r31
	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      92:	06 d3       	rcall	.+1548   	; 0x6a0 <touch_timer_handler>
	RTC_CallBack();
      94:	7e d0       	rcall	.+252    	; 0x192 <RTC_CallBack>
	/* PIT interrupt flag has to be cleared manually */
	RTC.PITINTFLAGS = RTC_PI_bm;
      96:	81 e0       	ldi	r24, 0x01	; 1
      98:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
      9c:	ff 91       	pop	r31
      9e:	ef 91       	pop	r30
      a0:	bf 91       	pop	r27
      a2:	af 91       	pop	r26
      a4:	9f 91       	pop	r25
      a6:	8f 91       	pop	r24
      a8:	7f 91       	pop	r23
      aa:	6f 91       	pop	r22
      ac:	5f 91       	pop	r21
      ae:	4f 91       	pop	r20
      b0:	3f 91       	pop	r19
      b2:	2f 91       	pop	r18
      b4:	0f 90       	pop	r0
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	0f 90       	pop	r0
      ba:	1f 90       	pop	r1
      bc:	18 95       	reti

000000be <__vector_16>:

ISR(AC0_AC_vect)
{
      be:	1f 92       	push	r1
      c0:	0f 92       	push	r0
      c2:	0f b6       	in	r0, 0x3f	; 63
      c4:	0f 92       	push	r0
      c6:	11 24       	eor	r1, r1
      c8:	2f 93       	push	r18
      ca:	3f 93       	push	r19
      cc:	4f 93       	push	r20
      ce:	5f 93       	push	r21
      d0:	6f 93       	push	r22
      d2:	7f 93       	push	r23
      d4:	8f 93       	push	r24
      d6:	9f 93       	push	r25
      d8:	af 93       	push	r26
      da:	bf 93       	push	r27
      dc:	ef 93       	push	r30
      de:	ff 93       	push	r31
	uint8_t temp;
	/* Insert your AC interrupt handling code here */
	/* The interrupt flag has to be cleared manually */
	temp = AC0.STATUS;
      e0:	e0 e7       	ldi	r30, 0x70	; 112
      e2:	f6 e0       	ldi	r31, 0x06	; 6
      e4:	87 81       	ldd	r24, Z+7	; 0x07
	
	AC0.STATUS = AC_CMP_bm;
      e6:	81 e0       	ldi	r24, 0x01	; 1
      e8:	87 83       	std	Z+7, r24	; 0x07
	
	LowBattery();
      ea:	46 d0       	rcall	.+140    	; 0x178 <LowBattery>
}
      ec:	ff 91       	pop	r31
      ee:	ef 91       	pop	r30
      f0:	bf 91       	pop	r27
      f2:	af 91       	pop	r26
      f4:	9f 91       	pop	r25
      f6:	8f 91       	pop	r24
      f8:	7f 91       	pop	r23
      fa:	6f 91       	pop	r22
      fc:	5f 91       	pop	r21
      fe:	4f 91       	pop	r20
     100:	3f 91       	pop	r19
     102:	2f 91       	pop	r18
     104:	0f 90       	pop	r0
     106:	0f be       	out	0x3f, r0	; 63
     108:	0f 90       	pop	r0
     10a:	1f 90       	pop	r1
     10c:	18 95       	reti

0000010e <TOUCH_SetMeasureBusyFlag>:
	
	if (edgeDetectFreeze == 1)
		tempDelta = 0;
		
	return abs(tempDelta);
}
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	80 93 4e 3e 	sts	0x3E4E, r24	; 0x803e4e <measureBusyFlag>
     114:	08 95       	ret

00000116 <Radiotube_Handle>:
     116:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     11a:	81 30       	cpi	r24, 0x01	; 1
     11c:	71 f4       	brne	.+28     	; 0x13a <Radiotube_Handle+0x24>
     11e:	10 92 03 3e 	sts	0x3E03, r1	; 0x803e03 <RadiotubeState>
     122:	28 9a       	sbi	0x05, 0	; 5
     124:	2f e5       	ldi	r18, 0x5F	; 95
     126:	3a ee       	ldi	r19, 0xEA	; 234
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	21 50       	subi	r18, 0x01	; 1
     12c:	30 40       	sbci	r19, 0x00	; 0
     12e:	90 40       	sbci	r25, 0x00	; 0
     130:	e1 f7       	brne	.-8      	; 0x12a <Radiotube_Handle+0x14>
     132:	00 c0       	rjmp	.+0      	; 0x134 <Radiotube_Handle+0x1e>
     134:	00 00       	nop
     136:	28 98       	cbi	0x05, 0	; 5
     138:	0e c0       	rjmp	.+28     	; 0x156 <Radiotube_Handle+0x40>
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	80 93 03 3e 	sts	0x3E03, r24	; 0x803e03 <RadiotubeState>
     140:	29 9a       	sbi	0x05, 1	; 5
     142:	2f e5       	ldi	r18, 0x5F	; 95
     144:	3a ee       	ldi	r19, 0xEA	; 234
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	21 50       	subi	r18, 0x01	; 1
     14a:	30 40       	sbci	r19, 0x00	; 0
     14c:	90 40       	sbci	r25, 0x00	; 0
     14e:	e1 f7       	brne	.-8      	; 0x148 <Radiotube_Handle+0x32>
     150:	00 c0       	rjmp	.+0      	; 0x152 <Radiotube_Handle+0x3c>
     152:	00 00       	nop
     154:	29 98       	cbi	0x05, 1	; 5
     156:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <edgeDetectFreeze>
     15a:	08 95       	ret

0000015c <MCU_GoToSleep>:
     15c:	e0 e5       	ldi	r30, 0x50	; 80
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	90 81       	ld	r25, Z
     162:	99 7f       	andi	r25, 0xF9	; 249
     164:	89 2b       	or	r24, r25
     166:	80 83       	st	Z, r24
     168:	80 81       	ld	r24, Z
     16a:	81 60       	ori	r24, 0x01	; 1
     16c:	80 83       	st	Z, r24
     16e:	88 95       	sleep
     170:	80 81       	ld	r24, Z
     172:	8e 7f       	andi	r24, 0xFE	; 254
     174:	80 83       	st	Z, r24
     176:	08 95       	ret

00000178 <LowBattery>:
     178:	28 9a       	sbi	0x05, 0	; 5
     17a:	2f e5       	ldi	r18, 0x5F	; 95
     17c:	8a ee       	ldi	r24, 0xEA	; 234
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	21 50       	subi	r18, 0x01	; 1
     182:	80 40       	sbci	r24, 0x00	; 0
     184:	90 40       	sbci	r25, 0x00	; 0
     186:	e1 f7       	brne	.-8      	; 0x180 <LowBattery+0x8>
     188:	00 c0       	rjmp	.+0      	; 0x18a <LowBattery+0x12>
     18a:	00 00       	nop
     18c:	28 98       	cbi	0x05, 0	; 5
     18e:	a8 95       	wdr
     190:	fe cf       	rjmp	.-4      	; 0x18e <LowBattery+0x16>

00000192 <RTC_CallBack>:
     192:	80 91 47 3e 	lds	r24, 0x3E47	; 0x803e47 <AC_TimeCnt>
     196:	90 91 48 3e 	lds	r25, 0x3E48	; 0x803e48 <AC_TimeCnt+0x1>
     19a:	01 96       	adiw	r24, 0x01	; 1
     19c:	8f 31       	cpi	r24, 0x1F	; 31
     19e:	91 05       	cpc	r25, r1
     1a0:	28 f4       	brcc	.+10     	; 0x1ac <RTC_CallBack+0x1a>
     1a2:	80 93 47 3e 	sts	0x3E47, r24	; 0x803e47 <AC_TimeCnt>
     1a6:	90 93 48 3e 	sts	0x3E48, r25	; 0x803e48 <AC_TimeCnt+0x1>
     1aa:	18 c0       	rjmp	.+48     	; 0x1dc <RTC_CallBack+0x4a>
     1ac:	10 92 47 3e 	sts	0x3E47, r1	; 0x803e47 <AC_TimeCnt>
     1b0:	10 92 48 3e 	sts	0x3E48, r1	; 0x803e48 <AC_TimeCnt+0x1>
     1b4:	0e 9a       	sbi	0x01, 6	; 1
     1b6:	87 e8       	ldi	r24, 0x87	; 135
     1b8:	93 e1       	ldi	r25, 0x13	; 19
     1ba:	01 97       	sbiw	r24, 0x01	; 1
     1bc:	f1 f7       	brne	.-4      	; 0x1ba <RTC_CallBack+0x28>
     1be:	00 c0       	rjmp	.+0      	; 0x1c0 <RTC_CallBack+0x2e>
     1c0:	00 00       	nop
     1c2:	b5 d2       	rcall	.+1386   	; 0x72e <AC_0_init>
     1c4:	87 e8       	ldi	r24, 0x87	; 135
     1c6:	93 e1       	ldi	r25, 0x13	; 19
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <RTC_CallBack+0x36>
     1cc:	00 c0       	rjmp	.+0      	; 0x1ce <RTC_CallBack+0x3c>
     1ce:	00 00       	nop
     1d0:	80 91 77 06 	lds	r24, 0x0677	; 0x800677 <__TEXT_REGION_LENGTH__+0x700677>
     1d4:	84 ff       	sbrs	r24, 4
     1d6:	d0 df       	rcall	.-96     	; 0x178 <LowBattery>
     1d8:	b4 d2       	rcall	.+1384   	; 0x742 <AC_0_Disable>
     1da:	0e 98       	cbi	0x01, 6	; 1
     1dc:	80 91 5c 3e 	lds	r24, 0x3E5C	; 0x803e5c <SensorState>
     1e0:	81 30       	cpi	r24, 0x01	; 1
     1e2:	49 f4       	brne	.+18     	; 0x1f6 <RTC_CallBack+0x64>
     1e4:	80 91 5a 3e 	lds	r24, 0x3E5A	; 0x803e5a <fingerOnCnt>
     1e8:	90 91 5b 3e 	lds	r25, 0x3E5B	; 0x803e5b <fingerOnCnt+0x1>
     1ec:	01 96       	adiw	r24, 0x01	; 1
     1ee:	80 93 5a 3e 	sts	0x3E5A, r24	; 0x803e5a <fingerOnCnt>
     1f2:	90 93 5b 3e 	sts	0x3E5B, r25	; 0x803e5b <fingerOnCnt+0x1>
     1f6:	80 91 55 3e 	lds	r24, 0x3E55	; 0x803e55 <edgeDetectFreeze>
     1fa:	81 30       	cpi	r24, 0x01	; 1
     1fc:	49 f4       	brne	.+18     	; 0x210 <RTC_CallBack+0x7e>
     1fe:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <edgeFreezeCnt>
     202:	90 91 54 3e 	lds	r25, 0x3E54	; 0x803e54 <edgeFreezeCnt+0x1>
     206:	01 96       	adiw	r24, 0x01	; 1
     208:	80 93 53 3e 	sts	0x3E53, r24	; 0x803e53 <edgeFreezeCnt>
     20c:	90 93 54 3e 	sts	0x3E54, r25	; 0x803e54 <edgeFreezeCnt+0x1>
     210:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <edgeFreezeCnt>
     214:	90 91 54 3e 	lds	r25, 0x3E54	; 0x803e54 <edgeFreezeCnt+0x1>
     218:	40 97       	sbiw	r24, 0x10	; 16
     21a:	30 f0       	brcs	.+12     	; 0x228 <RTC_CallBack+0x96>
     21c:	10 92 53 3e 	sts	0x3E53, r1	; 0x803e53 <edgeFreezeCnt>
     220:	10 92 54 3e 	sts	0x3E54, r1	; 0x803e54 <edgeFreezeCnt+0x1>
     224:	10 92 55 3e 	sts	0x3E55, r1	; 0x803e55 <edgeDetectFreeze>
     228:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     22c:	81 11       	cpse	r24, r1
     22e:	23 c0       	rjmp	.+70     	; 0x276 <RTC_CallBack+0xe4>
     230:	80 91 56 3e 	lds	r24, 0x3E56	; 0x803e56 <RadiotubeOnTime>
     234:	90 91 57 3e 	lds	r25, 0x3E57	; 0x803e57 <RadiotubeOnTime+0x1>
     238:	a0 91 58 3e 	lds	r26, 0x3E58	; 0x803e58 <RadiotubeOnTime+0x2>
     23c:	b0 91 59 3e 	lds	r27, 0x3E59	; 0x803e59 <RadiotubeOnTime+0x3>
     240:	01 96       	adiw	r24, 0x01	; 1
     242:	a1 1d       	adc	r26, r1
     244:	b1 1d       	adc	r27, r1
     246:	8a 3f       	cpi	r24, 0xFA	; 250
     248:	25 e1       	ldi	r18, 0x15	; 21
     24a:	92 07       	cpc	r25, r18
     24c:	a1 05       	cpc	r26, r1
     24e:	b1 05       	cpc	r27, r1
     250:	48 f4       	brcc	.+18     	; 0x264 <RTC_CallBack+0xd2>
     252:	80 93 56 3e 	sts	0x3E56, r24	; 0x803e56 <RadiotubeOnTime>
     256:	90 93 57 3e 	sts	0x3E57, r25	; 0x803e57 <RadiotubeOnTime+0x1>
     25a:	a0 93 58 3e 	sts	0x3E58, r26	; 0x803e58 <RadiotubeOnTime+0x2>
     25e:	b0 93 59 3e 	sts	0x3E59, r27	; 0x803e59 <RadiotubeOnTime+0x3>
     262:	08 95       	ret
     264:	10 92 56 3e 	sts	0x3E56, r1	; 0x803e56 <RadiotubeOnTime>
     268:	10 92 57 3e 	sts	0x3E57, r1	; 0x803e57 <RadiotubeOnTime+0x1>
     26c:	10 92 58 3e 	sts	0x3E58, r1	; 0x803e58 <RadiotubeOnTime+0x2>
     270:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <RadiotubeOnTime+0x3>
     274:	50 cf       	rjmp	.-352    	; 0x116 <Radiotube_Handle>
     276:	08 95       	ret

00000278 <main>:

int main(void)
{
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     278:	f9 de       	rcall	.-526    	; 0x6c <atmel_start_init>
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
     27a:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     27c:	2f e5       	ldi	r18, 0x5F	; 95
     27e:	8a ee       	ldi	r24, 0xEA	; 234
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	21 50       	subi	r18, 0x01	; 1
     284:	80 40       	sbci	r24, 0x00	; 0
     286:	90 40       	sbci	r25, 0x00	; 0
     288:	e1 f7       	brne	.-8      	; 0x282 <main+0xa>
     28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0x14>
     28c:	00 00       	nop
	} else {
		VPORTB.OUT &= ~(1 << pin);
     28e:	29 98       	cbi	0x05, 1	; 5
		TouchSignalGroupPtr = 0;
}

static void TOUCH_TouchSignal(void)
{
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     290:	19 e0       	ldi	r17, 0x09	; 9
     292:	ca e0       	ldi	r28, 0x0A	; 10
     294:	d0 e0       	ldi	r29, 0x00	; 0
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     296:	07 e0       	ldi	r16, 0x07	; 7
	//Radiotube_Test();
	
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
     298:	a8 95       	wdr
{
	uint8_t keyStatus = 0;
	uint8_t edgeStatus = EDGE_NONE;
	
	///* Does acquisition and post-processing */
	touch_process();
     29a:	d0 d1       	rcall	.+928    	; 0x63c <touch_process>
	
	if (measurement_done_touch == 0)
     29c:	80 91 5e 3e 	lds	r24, 0x3E5E	; 0x803e5e <measurement_done_touch>
     2a0:	88 23       	and	r24, r24
     2a2:	09 f4       	brne	.+2      	; 0x2a6 <main+0x2e>
     2a4:	3f c1       	rjmp	.+638    	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
	int16_t edgeGroupSum = 0;
	
	curDelta = get_sensor_node_signal(0);
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	04 d2       	rcall	.+1032   	; 0x6b4 <get_sensor_node_signal>
     2ac:	7c 01       	movw	r14, r24
	curDelta -= get_sensor_node_reference(0);
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0d d2       	rcall	.+1050   	; 0x6ce <get_sensor_node_reference>
     2b4:	a7 01       	movw	r20, r14
     2b6:	48 1b       	sub	r20, r24
     2b8:	59 0b       	sbc	r21, r25
	
	tempDelta = curDelta - preFilteredDeltaValue;
     2ba:	20 91 4f 3e 	lds	r18, 0x3E4F	; 0x803e4f <preFilteredDeltaValue>
     2be:	30 91 50 3e 	lds	r19, 0x3E50	; 0x803e50 <preFilteredDeltaValue+0x1>
     2c2:	7a 01       	movw	r14, r20
     2c4:	e2 1a       	sub	r14, r18
     2c6:	f3 0a       	sbc	r15, r19
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
     2c8:	b7 01       	movw	r22, r14
     2ca:	f7 fe       	sbrs	r15, 7
     2cc:	04 c0       	rjmp	.+8      	; 0x2d6 <main+0x5e>
     2ce:	66 27       	eor	r22, r22
     2d0:	77 27       	eor	r23, r23
     2d2:	6e 19       	sub	r22, r14
     2d4:	7f 09       	sbc	r23, r15
     2d6:	a0 91 06 3e 	lds	r26, 0x3E06	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     2da:	b0 91 07 3e 	lds	r27, 0x3E07	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
     2de:	6a 17       	cp	r22, r26
     2e0:	7b 07       	cpc	r23, r27
     2e2:	18 f1       	brcs	.+70     	; 0x32a <main+0xb2>
	{
		/* this is an strong edge */
		if(tempDelta > 0)
     2e4:	1e 14       	cp	r1, r14
     2e6:	1f 04       	cpc	r1, r15
     2e8:	14 f0       	brlt	.+4      	; 0x2ee <main+0x76>
			edgeStatus = EDGE_RISING;
		else 
			edgeStatus = EDGE_FALLING;
     2ea:	92 e0       	ldi	r25, 0x02	; 2
     2ec:	01 c0       	rjmp	.+2      	; 0x2f0 <main+0x78>
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
	{
		/* this is an strong edge */
		if(tempDelta > 0)
			edgeStatus = EDGE_RISING;
     2ee:	91 e0       	ldi	r25, 0x01	; 1
		else 
			edgeStatus = EDGE_FALLING;
		
		filteredDeltaValue = curDelta;
     2f0:	40 93 51 3e 	sts	0x3E51, r20	; 0x803e51 <filteredDeltaValue>
     2f4:	50 93 52 3e 	sts	0x3E52, r21	; 0x803e52 <filteredDeltaValue+0x1>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     2f8:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     2fc:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <edgeGroup>
     300:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     304:	e0 91 49 3e 	lds	r30, 0x3E49	; 0x803e49 <TouchSignalGroupPtr>
     308:	81 e0       	ldi	r24, 0x01	; 1
     30a:	8e 0f       	add	r24, r30
     30c:	80 93 49 3e 	sts	0x3E49, r24	; 0x803e49 <TouchSignalGroupPtr>
     310:	f0 e0       	ldi	r31, 0x00	; 0
     312:	ee 0f       	add	r30, r30
     314:	ff 1f       	adc	r31, r31
     316:	e6 5b       	subi	r30, 0xB6	; 182
     318:	f1 4c       	sbci	r31, 0xC1	; 193
     31a:	60 83       	st	Z, r22
     31c:	71 83       	std	Z+1, r23	; 0x01
	if (TouchSignalGroupPtr >= 2)
     31e:	82 30       	cpi	r24, 0x02	; 2
     320:	08 f4       	brcc	.+2      	; 0x324 <main+0xac>
     322:	82 c0       	rjmp	.+260    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		TouchSignalGroupPtr = 0;
     324:	10 92 49 3e 	sts	0x3E49, r1	; 0x803e49 <TouchSignalGroupPtr>
     328:	7f c0       	rjmp	.+254    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		
		filteredDeltaValue = curDelta;
		TOUCH_ClearEdgeGroup();
		TOUCH_TouchSignalCollect(abs(tempDelta));
	}
	else if (abs(tempDelta) >= WEAK_EDGE_THRESHOLD)
     32a:	80 91 04 3e 	lds	r24, 0x3E04	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     32e:	90 91 05 3e 	lds	r25, 0x3E05	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
     332:	e0 91 46 3e 	lds	r30, 0x3E46	; 0x803e46 <__data_end>
     336:	68 17       	cp	r22, r24
     338:	79 07       	cpc	r23, r25
     33a:	08 f4       	brcc	.+2      	; 0x33e <main+0xc6>
     33c:	56 c0       	rjmp	.+172    	; 0x3ea <main+0x172>
	{
		/* this is an weak edge */
		
		filteredDeltaValue = (preFilteredDeltaValue * 5 + curDelta * 5)/10;
     33e:	ca 01       	movw	r24, r20
     340:	82 0f       	add	r24, r18
     342:	93 1f       	adc	r25, r19
     344:	97 fd       	sbrc	r25, 7
     346:	01 96       	adiw	r24, 0x01	; 1
     348:	95 95       	asr	r25
     34a:	87 95       	ror	r24
     34c:	80 93 51 3e 	sts	0x3E51, r24	; 0x803e51 <filteredDeltaValue>
     350:	90 93 52 3e 	sts	0x3E52, r25	; 0x803e52 <filteredDeltaValue+0x1>
		
		/* if the sum of continuous four edges exceed the 
			strong threshold, an effective status should
			be return.*/
		edgeGroup[edgeGroupPtr++] = tempDelta;
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	8e 0f       	add	r24, r30
     358:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	ee 0f       	add	r30, r30
     360:	ff 1f       	adc	r31, r31
     362:	e7 59       	subi	r30, 0x97	; 151
     364:	f1 4c       	sbci	r31, 0xC1	; 193
     366:	e0 82       	st	Z, r14
     368:	f1 82       	std	Z+1, r15	; 0x01
		if (edgeGroupPtr >= 4)
     36a:	84 30       	cpi	r24, 0x04	; 4
     36c:	10 f0       	brcs	.+4      	; 0x372 <main+0xfa>
			edgeGroupPtr = 0;
     36e:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
		
		for (i = 0; i < 4; i++)
			edgeGroupSum += edgeGroup[i];
     372:	20 91 69 3e 	lds	r18, 0x3E69	; 0x803e69 <edgeGroup>
     376:	30 91 6a 3e 	lds	r19, 0x3E6A	; 0x803e6a <edgeGroup+0x1>
     37a:	80 91 6b 3e 	lds	r24, 0x3E6B	; 0x803e6b <edgeGroup+0x2>
     37e:	90 91 6c 3e 	lds	r25, 0x3E6C	; 0x803e6c <edgeGroup+0x3>
     382:	82 0f       	add	r24, r18
     384:	93 1f       	adc	r25, r19
     386:	20 91 6d 3e 	lds	r18, 0x3E6D	; 0x803e6d <edgeGroup+0x4>
     38a:	30 91 6e 3e 	lds	r19, 0x3E6E	; 0x803e6e <edgeGroup+0x5>
     38e:	82 0f       	add	r24, r18
     390:	93 1f       	adc	r25, r19
     392:	20 91 6f 3e 	lds	r18, 0x3E6F	; 0x803e6f <edgeGroup+0x6>
     396:	30 91 70 3e 	lds	r19, 0x3E70	; 0x803e70 <edgeGroup+0x7>
     39a:	82 0f       	add	r24, r18
     39c:	93 1f       	adc	r25, r19
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
     39e:	9c 01       	movw	r18, r24
     3a0:	97 ff       	sbrs	r25, 7
     3a2:	04 c0       	rjmp	.+8      	; 0x3ac <main+0x134>
     3a4:	22 27       	eor	r18, r18
     3a6:	33 27       	eor	r19, r19
     3a8:	28 1b       	sub	r18, r24
     3aa:	39 0b       	sbc	r19, r25
     3ac:	2a 17       	cp	r18, r26
     3ae:	3b 07       	cpc	r19, r27
     3b0:	c0 f1       	brcs	.+112    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     3b2:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     3b6:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <edgeGroup>
     3ba:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     3be:	e0 91 49 3e 	lds	r30, 0x3E49	; 0x803e49 <TouchSignalGroupPtr>
     3c2:	41 e0       	ldi	r20, 0x01	; 1
     3c4:	4e 0f       	add	r20, r30
     3c6:	40 93 49 3e 	sts	0x3E49, r20	; 0x803e49 <TouchSignalGroupPtr>
     3ca:	f0 e0       	ldi	r31, 0x00	; 0
     3cc:	ee 0f       	add	r30, r30
     3ce:	ff 1f       	adc	r31, r31
     3d0:	e6 5b       	subi	r30, 0xB6	; 182
     3d2:	f1 4c       	sbci	r31, 0xC1	; 193
     3d4:	20 83       	st	Z, r18
     3d6:	31 83       	std	Z+1, r19	; 0x01
	if (TouchSignalGroupPtr >= 2)
     3d8:	42 30       	cpi	r20, 0x02	; 2
     3da:	10 f0       	brcs	.+4      	; 0x3e0 <main+0x168>
		TouchSignalGroupPtr = 0;
     3dc:	10 92 49 3e 	sts	0x3E49, r1	; 0x803e49 <TouchSignalGroupPtr>
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
     3e0:	18 16       	cp	r1, r24
     3e2:	19 06       	cpc	r1, r25
     3e4:	04 f1       	brlt	.+64     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
				edgeStatus = EDGE_RISING; 
			else
				edgeStatus = EDGE_FALLING;
     3e6:	92 e0       	ldi	r25, 0x02	; 2
     3e8:	1f c0       	rjmp	.+62     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		}
	}
	else
	{
		/* this should be suppressed */
		filteredDeltaValue = (preFilteredDeltaValue * 9 + curDelta)/10;
     3ea:	12 9f       	mul	r17, r18
     3ec:	c0 01       	movw	r24, r0
     3ee:	13 9f       	mul	r17, r19
     3f0:	90 0d       	add	r25, r0
     3f2:	11 24       	eor	r1, r1
     3f4:	84 0f       	add	r24, r20
     3f6:	95 1f       	adc	r25, r21
     3f8:	be 01       	movw	r22, r28
     3fa:	51 db       	rcall	.-2398   	; 0xfffffa9e <__eeprom_end+0xff7efa9e>
     3fc:	60 93 51 3e 	sts	0x3E51, r22	; 0x803e51 <filteredDeltaValue>
     400:	70 93 52 3e 	sts	0x3E52, r23	; 0x803e52 <filteredDeltaValue+0x1>
		
		edgeGroup[edgeGroupPtr++] = 0;
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	8e 0f       	add	r24, r30
     408:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     40c:	f0 e0       	ldi	r31, 0x00	; 0
     40e:	ee 0f       	add	r30, r30
     410:	ff 1f       	adc	r31, r31
     412:	e7 59       	subi	r30, 0x97	; 151
     414:	f1 4c       	sbci	r31, 0xC1	; 193
     416:	10 82       	st	Z, r1
     418:	11 82       	std	Z+1, r1	; 0x01
		if (edgeGroupPtr >= 4)
     41a:	84 30       	cpi	r24, 0x04	; 4
     41c:	10 f0       	brcs	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
			edgeGroupPtr = 0;
     41e:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>

static uint8_t TOUCH_DeltaEdgeDetct(void)
{
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	01 c0       	rjmp	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
				edgeStatus = EDGE_RISING; 
     426:	91 e0       	ldi	r25, 0x01	; 1
		edgeGroup[edgeGroupPtr++] = 0;
		if (edgeGroupPtr >= 4)
			edgeGroupPtr = 0;
	}
	
	preFilteredDeltaValue = filteredDeltaValue;
     428:	20 91 51 3e 	lds	r18, 0x3E51	; 0x803e51 <filteredDeltaValue>
     42c:	30 91 52 3e 	lds	r19, 0x3E52	; 0x803e52 <filteredDeltaValue+0x1>
     430:	20 93 4f 3e 	sts	0x3E4F, r18	; 0x803e4f <preFilteredDeltaValue>
     434:	30 93 50 3e 	sts	0x3E50, r19	; 0x803e50 <preFilteredDeltaValue+0x1>
	if (measurement_done_touch == 0)
		return keyStatus;
		
	edgeStatus = TOUCH_DeltaEdgeDetct();
	
	if (edgeDetectFreeze == 1)
     438:	80 91 55 3e 	lds	r24, 0x3E55	; 0x803e55 <edgeDetectFreeze>
     43c:	81 30       	cpi	r24, 0x01	; 1
     43e:	09 f4       	brne	.+2      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     440:	71 c0       	rjmp	.+226    	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
		return keyStatus;

	switch(SensorState)
     442:	80 91 5c 3e 	lds	r24, 0x3E5C	; 0x803e5c <SensorState>
     446:	88 23       	and	r24, r24
     448:	19 f0       	breq	.+6      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	39 f0       	breq	.+14     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     44e:	62 c0       	rjmp	.+196    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
	{
		case FINGER_ON_DETECT:
			if (edgeStatus == EDGE_RISING)
     450:	91 30       	cpi	r25, 0x01	; 1
     452:	09 f0       	breq	.+2      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     454:	5f c0       	rjmp	.+190    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
				SensorState = FINGER_OFF_DETECT;
     456:	90 93 5c 3e 	sts	0x3E5C, r25	; 0x803e5c <SensorState>
     45a:	5c c0       	rjmp	.+184    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
		break;
		
		case FINGER_OFF_DETECT:
			/* state will roll back if rising edge appears. */
			if (edgeStatus == EDGE_RISING)
     45c:	91 30       	cpi	r25, 0x01	; 1
     45e:	29 f4       	brne	.+10     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
				fingerOnCnt = 0;
     460:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <fingerOnCnt>
     464:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt+0x1>
     468:	55 c0       	rjmp	.+170    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
			/* the time duration of effective touch should between 70ms to 1000ms */
			else if (fingerOnCnt >= FINGER_ON_MAXIMUM_TIME_MS(1000))
     46a:	20 91 5a 3e 	lds	r18, 0x3E5A	; 0x803e5a <fingerOnCnt>
     46e:	30 91 5b 3e 	lds	r19, 0x3E5B	; 0x803e5b <fingerOnCnt+0x1>
     472:	2f 31       	cpi	r18, 0x1F	; 31
     474:	31 05       	cpc	r19, r1
     476:	38 f0       	brcs	.+14     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
			{
				fingerOnCnt = 0;
     478:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <fingerOnCnt>
     47c:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     480:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <SensorState>
     484:	47 c0       	rjmp	.+142    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
			}
			else if (edgeStatus == EDGE_FALLING)
     486:	92 30       	cpi	r25, 0x02	; 2
     488:	09 f0       	breq	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     48a:	44 c0       	rjmp	.+136    	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
     48c:	80 91 5a 3e 	lds	r24, 0x3E5A	; 0x803e5a <fingerOnCnt>
     490:	90 91 5b 3e 	lds	r25, 0x3E5B	; 0x803e5b <fingerOnCnt+0x1>
     494:	02 97       	sbiw	r24, 0x02	; 2
     496:	b0 f1       	brcs	.+108    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		TouchSignalGroupPtr = 0;
}

static void TOUCH_TouchSignal(void)
{
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     498:	20 91 4a 3e 	lds	r18, 0x3E4A	; 0x803e4a <TouchSignalGroup>
     49c:	30 91 4b 3e 	lds	r19, 0x3E4B	; 0x803e4b <TouchSignalGroup+0x1>
     4a0:	80 91 4c 3e 	lds	r24, 0x3E4C	; 0x803e4c <TouchSignalGroup+0x2>
     4a4:	90 91 4d 3e 	lds	r25, 0x3E4D	; 0x803e4d <TouchSignalGroup+0x3>
     4a8:	82 0f       	add	r24, r18
     4aa:	93 1f       	adc	r25, r19
     4ac:	96 95       	lsr	r25
     4ae:	87 95       	ror	r24
     4b0:	40 91 00 3e 	lds	r20, 0x3E00	; 0x803e00 <TouchSignal>
     4b4:	50 91 01 3e 	lds	r21, 0x3E01	; 0x803e01 <TouchSignal+0x1>
     4b8:	14 9f       	mul	r17, r20
     4ba:	90 01       	movw	r18, r0
     4bc:	15 9f       	mul	r17, r21
     4be:	30 0d       	add	r19, r0
     4c0:	11 24       	eor	r1, r1
     4c2:	82 0f       	add	r24, r18
     4c4:	93 1f       	adc	r25, r19
     4c6:	be 01       	movw	r22, r28
     4c8:	d6 da       	rcall	.-2644   	; 0xfffffa76 <__eeprom_end+0xff7efa76>
     4ca:	9b 01       	movw	r18, r22
     4cc:	60 93 00 3e 	sts	0x3E00, r22	; 0x803e00 <TouchSignal>
     4d0:	70 93 01 3e 	sts	0x3E01, r23	; 0x803e01 <TouchSignal+0x1>
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     4d4:	06 9f       	mul	r16, r22
     4d6:	c0 01       	movw	r24, r0
     4d8:	07 9f       	mul	r16, r23
     4da:	90 0d       	add	r25, r0
     4dc:	11 24       	eor	r1, r1
     4de:	be 01       	movw	r22, r28
     4e0:	ca da       	rcall	.-2668   	; 0xfffffa76 <__eeprom_end+0xff7efa76>
     4e2:	60 93 06 3e 	sts	0x3E06, r22	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     4e6:	70 93 07 3e 	sts	0x3E07, r23	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
	WEAK_EDGE_THRESHOLD = TouchSignal * 4 / 10;
     4ea:	c9 01       	movw	r24, r18
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	88 0f       	add	r24, r24
     4f2:	99 1f       	adc	r25, r25
     4f4:	be 01       	movw	r22, r28
     4f6:	bf da       	rcall	.-2690   	; 0xfffffa76 <__eeprom_end+0xff7efa76>
     4f8:	60 93 04 3e 	sts	0x3E04, r22	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     4fc:	70 93 05 3e 	sts	0x3E05, r23	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
			}
			else if (edgeStatus == EDGE_FALLING)
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
				{
					keyStatus = 1;
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	01 c0       	rjmp	.+2      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     504:	80 e0       	ldi	r24, 0x00	; 0
				{
					keyStatus = 1;
					TOUCH_TouchSignal();
				}
					
				fingerOnCnt = 0;
     506:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <fingerOnCnt>
     50a:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     50e:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <SensorState>
     512:	01 c0       	rjmp	.+2      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     514:	80 e0       	ldi	r24, 0x00	; 0
			}
			break;
	}
	
	/* one cycle of measurement is done */
	measurement_done_touch = 0;
     516:	10 92 5e 3e 	sts	0x3E5E, r1	; 0x803e5e <measurement_done_touch>
	measureBusyFlag = 0;
     51a:	10 92 4e 3e 	sts	0x3E4E, r1	; 0x803e4e <measureBusyFlag>
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
		
		if(TOUCH_TouchDetect() == 1)
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	09 f4       	brne	.+2      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
			Radiotube_Handle();
     522:	f9 dd       	rcall	.-1038   	; 0x116 <Radiotube_Handle>
		
		if (measureBusyFlag == 0)
     524:	80 91 4e 3e 	lds	r24, 0x3E4E	; 0x803e4e <measureBusyFlag>
     528:	81 11       	cpse	r24, r1
     52a:	b6 ce       	rjmp	.-660    	; 0x298 <main+0x20>
			MCU_GoToSleep(SLEEP_MODE_PWR_DOWN);
     52c:	84 e0       	ldi	r24, 0x04	; 4
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	15 de       	rcall	.-982    	; 0x15c <MCU_GoToSleep>
     532:	b2 ce       	rjmp	.-668    	; 0x298 <main+0x20>

00000534 <qtm_measure_complete_callback>:
void calibrate_node(uint16_t sensor_node)
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
     534:	e2 e8       	ldi	r30, 0x82	; 130
     536:	fe e3       	ldi	r31, 0x3E	; 62
     538:	80 81       	ld	r24, Z
     53a:	82 60       	ori	r24, 0x02	; 2
     53c:	80 83       	st	Z, r24
     53e:	08 95       	ret

00000540 <qtm_error_callback>:
     540:	87 ff       	sbrs	r24, 7
     542:	02 c0       	rjmp	.+4      	; 0x548 <qtm_error_callback+0x8>
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	07 c0       	rjmp	.+14     	; 0x556 <qtm_error_callback+0x16>
     548:	86 fd       	sbrc	r24, 6
     54a:	03 c0       	rjmp	.+6      	; 0x552 <qtm_error_callback+0x12>
     54c:	10 92 5d 3e 	sts	0x3E5D, r1	; 0x803e5d <module_error_code>
     550:	08 95       	ret
     552:	8f 70       	andi	r24, 0x0F	; 15
     554:	8e 5f       	subi	r24, 0xFE	; 254
     556:	80 93 5d 3e 	sts	0x3E5D, r24	; 0x803e5d <module_error_code>
     55a:	08 95       	ret

0000055c <init_complete_callback>:
     55c:	8e e7       	ldi	r24, 0x7E	; 126
     55e:	9e e3       	ldi	r25, 0x3E	; 62
     560:	96 d9       	rcall	.-3284   	; 0xfffff88e <__eeprom_end+0xff7ef88e>
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	85 e3       	ldi	r24, 0x35	; 53
     568:	9e e3       	ldi	r25, 0x3E	; 62
     56a:	fb d9       	rcall	.-3082   	; 0xfffff962 <__eeprom_end+0xff7ef962>
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	85 e3       	ldi	r24, 0x35	; 53
     572:	9e e3       	ldi	r25, 0x3E	; 62
     574:	15 da       	rcall	.-3030   	; 0xfffff9a0 <__eeprom_end+0xff7ef9a0>
     576:	49 e7       	ldi	r20, 0x79	; 121
     578:	5e e3       	ldi	r21, 0x3E	; 62
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	80 e2       	ldi	r24, 0x20	; 32
     57e:	9e e3       	ldi	r25, 0x3E	; 62
     580:	f5 c1       	rjmp	.+1002   	; 0x96c <qtm_init_sensor_key>

00000582 <qtm_post_process_complete>:
     582:	e0 91 20 3e 	lds	r30, 0x3E20	; 0x803e20 <qtlib_key_set1>
     586:	f0 91 21 3e 	lds	r31, 0x3E21	; 0x803e21 <qtlib_key_set1+0x1>
     58a:	80 81       	ld	r24, Z
     58c:	87 ff       	sbrs	r24, 7
     58e:	08 c0       	rjmp	.+16     	; 0x5a0 <qtm_post_process_complete+0x1e>
     590:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     594:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     598:	80 81       	ld	r24, Z
     59a:	84 60       	ori	r24, 0x04	; 4
     59c:	80 83       	st	Z, r24
     59e:	08 95       	ret
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	80 93 5e 3e 	sts	0x3E5E, r24	; 0x803e5e <measurement_done_touch>
     5a6:	08 95       	ret

000005a8 <Timer_set_period>:
     5a8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
     5ac:	92 fd       	sbrc	r25, 2
     5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <Timer_set_period>
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     5b6:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     5ba:	08 95       	ret

000005bc <touch_init>:
     5bc:	80 e2       	ldi	r24, 0x20	; 32
     5be:	f4 df       	rcall	.-24     	; 0x5a8 <Timer_set_period>
     5c0:	e4 e1       	ldi	r30, 0x14	; 20
     5c2:	f4 e0       	ldi	r31, 0x04	; 4
     5c4:	80 81       	ld	r24, Z
     5c6:	87 7f       	andi	r24, 0xF7	; 247
     5c8:	80 83       	st	Z, r24
     5ca:	e2 e8       	ldi	r30, 0x82	; 130
     5cc:	fe e3       	ldi	r31, 0x3E	; 62
     5ce:	10 82       	st	Z, r1
     5d0:	8c e1       	ldi	r24, 0x1C	; 28
     5d2:	9e e3       	ldi	r25, 0x3E	; 62
     5d4:	81 83       	std	Z+1, r24	; 0x01
     5d6:	92 83       	std	Z+2, r25	; 0x02
     5d8:	88 e1       	ldi	r24, 0x18	; 24
     5da:	9e e3       	ldi	r25, 0x3E	; 62
     5dc:	83 83       	std	Z+3, r24	; 0x03
     5de:	94 83       	std	Z+4, r25	; 0x04
     5e0:	80 e1       	ldi	r24, 0x10	; 16
     5e2:	9e e3       	ldi	r25, 0x3E	; 62
     5e4:	85 83       	std	Z+5, r24	; 0x05
     5e6:	96 83       	std	Z+6, r25	; 0x06
     5e8:	84 e1       	ldi	r24, 0x14	; 20
     5ea:	9e e3       	ldi	r25, 0x3E	; 62
     5ec:	87 83       	std	Z+7, r24	; 0x07
     5ee:	90 87       	std	Z+8, r25	; 0x08
     5f0:	88 e0       	ldi	r24, 0x08	; 8
     5f2:	9e e3       	ldi	r25, 0x3E	; 62
     5f4:	81 87       	std	Z+9, r24	; 0x09
     5f6:	92 87       	std	Z+10, r25	; 0x0a
     5f8:	8c e0       	ldi	r24, 0x0C	; 12
     5fa:	9e e3       	ldi	r25, 0x3E	; 62
     5fc:	83 87       	std	Z+11, r24	; 0x0b
     5fe:	94 87       	std	Z+12, r25	; 0x0c
     600:	81 e9       	ldi	r24, 0x91	; 145
     602:	9a e0       	ldi	r25, 0x0A	; 10
     604:	85 87       	std	Z+13, r24	; 0x0d
     606:	96 87       	std	Z+14, r25	; 0x0e
     608:	8e ea       	ldi	r24, 0xAE	; 174
     60a:	92 e0       	ldi	r25, 0x02	; 2
     60c:	87 87       	std	Z+15, r24	; 0x0f
     60e:	90 8b       	std	Z+16, r25	; 0x10
     610:	80 ea       	ldi	r24, 0xA0	; 160
     612:	92 e0       	ldi	r25, 0x02	; 2
     614:	81 8b       	std	Z+17, r24	; 0x11
     616:	92 8b       	std	Z+18, r25	; 0x12
     618:	8a e9       	ldi	r24, 0x9A	; 154
     61a:	92 e0       	ldi	r25, 0x02	; 2
     61c:	83 8b       	std	Z+19, r24	; 0x13
     61e:	94 8b       	std	Z+20, r25	; 0x14
     620:	15 8a       	std	Z+21, r1	; 0x15
     622:	16 8a       	std	Z+22, r1	; 0x16
     624:	81 ec       	ldi	r24, 0xC1	; 193
     626:	92 e0       	ldi	r25, 0x02	; 2
     628:	87 8b       	std	Z+23, r24	; 0x17
     62a:	90 8f       	std	Z+24, r25	; 0x18
     62c:	cf 01       	movw	r24, r30
     62e:	80 d5       	rcall	.+2816   	; 0x1130 <qtm_binding_layer_init>
     630:	7a d5       	rcall	.+2804   	; 0x1126 <qmt_get_binding_layer_ptr>
     632:	80 93 80 3e 	sts	0x3E80, r24	; 0x803e80 <p_qtm_control>
     636:	90 93 81 3e 	sts	0x3E81, r25	; 0x803e81 <p_qtm_control+0x1>
     63a:	08 95       	ret

0000063c <touch_process>:
     63c:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     640:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     644:	80 81       	ld	r24, Z
     646:	80 ff       	sbrs	r24, 0
     648:	0b c0       	rjmp	.+22     	; 0x660 <touch_process+0x24>
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	cf d5       	rcall	.+2974   	; 0x11ec <qtm_lib_start_acquisition>
     64e:	81 11       	cpse	r24, r1
     650:	07 c0       	rjmp	.+14     	; 0x660 <touch_process+0x24>
     652:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     656:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     65a:	80 81       	ld	r24, Z
     65c:	8e 7f       	andi	r24, 0xFE	; 254
     65e:	80 83       	st	Z, r24
     660:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     664:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     668:	80 81       	ld	r24, Z
     66a:	81 ff       	sbrs	r24, 1
     66c:	0e c0       	rjmp	.+28     	; 0x68a <touch_process+0x4e>
     66e:	0d d6       	rcall	.+3098   	; 0x128a <qtm_lib_acq_process>
     670:	81 11       	cpse	r24, r1
     672:	02 c0       	rjmp	.+4      	; 0x678 <touch_process+0x3c>
     674:	12 d6       	rcall	.+3108   	; 0x129a <qtm_lib_post_process>
     676:	02 c0       	rjmp	.+4      	; 0x67c <touch_process+0x40>
     678:	80 e8       	ldi	r24, 0x80	; 128
     67a:	62 df       	rcall	.-316    	; 0x540 <qtm_error_callback>
     67c:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     680:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     684:	80 81       	ld	r24, Z
     686:	8d 7f       	andi	r24, 0xFD	; 253
     688:	80 83       	st	Z, r24
     68a:	e0 91 80 3e 	lds	r30, 0x3E80	; 0x803e80 <p_qtm_control>
     68e:	f0 91 81 3e 	lds	r31, 0x3E81	; 0x803e81 <p_qtm_control+0x1>
     692:	80 81       	ld	r24, Z
     694:	82 ff       	sbrs	r24, 2
     696:	03 c0       	rjmp	.+6      	; 0x69e <touch_process+0x62>
     698:	8b 7f       	andi	r24, 0xFB	; 251
     69a:	81 60       	ori	r24, 0x01	; 1
     69c:	80 83       	st	Z, r24
     69e:	08 95       	ret

000006a0 <touch_timer_handler>:
     6a0:	36 dd       	rcall	.-1428   	; 0x10e <TOUCH_SetMeasureBusyFlag>
     6a2:	e2 e8       	ldi	r30, 0x82	; 130
     6a4:	fe e3       	ldi	r31, 0x3E	; 62
     6a6:	80 81       	ld	r24, Z
     6a8:	81 60       	ori	r24, 0x01	; 1
     6aa:	80 83       	st	Z, r24
     6ac:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <measeurePeriod>
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	51 c1       	rjmp	.+674    	; 0x956 <qtm_update_qtlib_timer>

000006b4 <get_sensor_node_signal>:
     6b4:	25 e0       	ldi	r18, 0x05	; 5
     6b6:	ac 01       	movw	r20, r24
     6b8:	24 9f       	mul	r18, r20
     6ba:	c0 01       	movw	r24, r0
     6bc:	25 9f       	mul	r18, r21
     6be:	90 0d       	add	r25, r0
     6c0:	11 24       	eor	r1, r1
     6c2:	fc 01       	movw	r30, r24
     6c4:	e7 58       	subi	r30, 0x87	; 135
     6c6:	f1 4c       	sbci	r31, 0xC1	; 193
     6c8:	81 81       	ldd	r24, Z+1	; 0x01
     6ca:	92 81       	ldd	r25, Z+2	; 0x02
     6cc:	08 95       	ret

000006ce <get_sensor_node_reference>:
     6ce:	26 e0       	ldi	r18, 0x06	; 6
     6d0:	ac 01       	movw	r20, r24
     6d2:	24 9f       	mul	r18, r20
     6d4:	c0 01       	movw	r24, r0
     6d6:	25 9f       	mul	r18, r21
     6d8:	90 0d       	add	r25, r0
     6da:	11 24       	eor	r1, r1
     6dc:	fc 01       	movw	r30, r24
     6de:	e5 56       	subi	r30, 0x65	; 101
     6e0:	f1 4c       	sbci	r31, 0xC1	; 193
     6e2:	84 81       	ldd	r24, Z+4	; 0x04
     6e4:	95 81       	ldd	r25, Z+5	; 0x05
     6e6:	08 95       	ret

000006e8 <__vector_17>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     6e8:	1f 92       	push	r1
     6ea:	0f 92       	push	r0
     6ec:	0f b6       	in	r0, 0x3f	; 63
     6ee:	0f 92       	push	r0
     6f0:	11 24       	eor	r1, r1
     6f2:	2f 93       	push	r18
     6f4:	3f 93       	push	r19
     6f6:	4f 93       	push	r20
     6f8:	5f 93       	push	r21
     6fa:	6f 93       	push	r22
     6fc:	7f 93       	push	r23
     6fe:	8f 93       	push	r24
     700:	9f 93       	push	r25
     702:	af 93       	push	r26
     704:	bf 93       	push	r27
     706:	ef 93       	push	r30
     708:	ff 93       	push	r31
	qtm_t81x_ptc_handler_eoc();
     70a:	8b d9       	rcall	.-3306   	; 0xfffffa22 <__eeprom_end+0xff7efa22>
}
     70c:	ff 91       	pop	r31
     70e:	ef 91       	pop	r30
     710:	bf 91       	pop	r27
     712:	af 91       	pop	r26
     714:	9f 91       	pop	r25
     716:	8f 91       	pop	r24
     718:	7f 91       	pop	r23
     71a:	6f 91       	pop	r22
     71c:	5f 91       	pop	r21
     71e:	4f 91       	pop	r20
     720:	3f 91       	pop	r19
     722:	2f 91       	pop	r18
     724:	0f 90       	pop	r0
     726:	0f be       	out	0x3f, r0	; 63
     728:	0f 90       	pop	r0
     72a:	1f 90       	pop	r1
     72c:	18 95       	reti

0000072e <AC_0_init>:
 * \return Initialization status.
 */
int8_t AC_0_init()
{

	AC0.INTCTRL = 1 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     72e:	e0 e7       	ldi	r30, 0x70	; 112
     730:	f6 e0       	ldi	r31, 0x06	; 6
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	86 83       	std	Z+6, r24	; 0x06

	AC0.MUXCTRLA = 0 << AC_INVERT_bp    /* Invert AC Output: disabled */
     736:	82 e0       	ldi	r24, 0x02	; 2
     738:	82 83       	std	Z+2, r24	; 0x02
	               | AC_MUXNEG_VREF_gc  /* Voltage Reference */
	               | AC_MUXPOS_PIN0_gc; /* Positive Pin 0 */

	AC0.CTRLA = 1 << AC_ENABLE_bp       /* Enable: disabled */
     73a:	81 e2       	ldi	r24, 0x21	; 33
     73c:	80 83       	st	Z, r24
	            //| AC_LPMODE_EN_gc       /* Low power mode enabled */
	            | 0 << AC_OUTEN_bp      /* Output Buffer Enable: disabled */
	            | 0 << AC_RUNSTDBY_bp;  /* Run in Standby Mode: disabled */

	return 0;
}
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	08 95       	ret

00000742 <AC_0_Disable>:



void AC_0_Disable(void)
{
	AC0.INTCTRL = 0 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     742:	e0 e7       	ldi	r30, 0x70	; 112
     744:	f6 e0       	ldi	r31, 0x06	; 6
     746:	16 82       	std	Z+6, r1	; 0x06
	AC0.CTRLA = 0 << AC_ENABLE_bp;	/* Enable: disabled */
     748:	10 82       	st	Z, r1
     74a:	08 95       	ret

0000074c <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	08 95       	ret

00000750 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     750:	42 e0       	ldi	r20, 0x02	; 2
     752:	68 ed       	ldi	r22, 0xD8	; 216
     754:	88 e7       	ldi	r24, 0x78	; 120
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	6d d0       	rcall	.+218    	; 0x834 <protected_write_io>
     75a:	41 e0       	ldi	r20, 0x01	; 1
     75c:	68 ed       	ldi	r22, 0xD8	; 216
     75e:	81 e6       	ldi	r24, 0x61	; 97
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	68 d0       	rcall	.+208    	; 0x834 <protected_write_io>
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	68 ed       	ldi	r22, 0xD8	; 216
     768:	80 e6       	ldi	r24, 0x60	; 96
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	63 d0       	rcall	.+198    	; 0x834 <protected_write_io>
	ccp_write_io((void *)&(CLKCTRL.MCLKCTRLA),
	             CLKCTRL_CLKSEL_OSC20M_gc /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */
	                 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	/* wait for system oscillator changing to finish */
	while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {
     76e:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x700063>
     772:	80 fd       	sbrc	r24, 0
     774:	fc cf       	rjmp	.-8      	; 0x76e <CLKCTRL_init+0x1e>
	}

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	08 95       	ret

0000077a <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     77a:	78 94       	sei

	return 0;
}
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	08 95       	ret

00000780 <mcu_init>:
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	false);

	USART_init();
     780:	e0 e1       	ldi	r30, 0x10	; 16
     782:	f4 e0       	ldi	r31, 0x04	; 4
     784:	80 81       	ld	r24, Z
     786:	88 60       	ori	r24, 0x08	; 8
     788:	81 93       	st	Z+, r24
     78a:	e8 31       	cpi	r30, 0x18	; 24
     78c:	84 e0       	ldi	r24, 0x04	; 4
     78e:	f8 07       	cpc	r31, r24
     790:	c9 f7       	brne	.-14     	; 0x784 <mcu_init+0x4>
     792:	e0 e3       	ldi	r30, 0x30	; 48
     794:	f4 e0       	ldi	r31, 0x04	; 4
     796:	80 81       	ld	r24, Z
     798:	88 60       	ori	r24, 0x08	; 8
     79a:	81 93       	st	Z+, r24
     79c:	e8 33       	cpi	r30, 0x38	; 56
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	f8 07       	cpc	r31, r24
     7a2:	c9 f7       	brne	.-14     	; 0x796 <mcu_init+0x16>
     7a4:	e0 e5       	ldi	r30, 0x50	; 80
     7a6:	f4 e0       	ldi	r31, 0x04	; 4
     7a8:	80 81       	ld	r24, Z
     7aa:	88 60       	ori	r24, 0x08	; 8
     7ac:	81 93       	st	Z+, r24
     7ae:	e8 35       	cpi	r30, 0x58	; 88
     7b0:	84 e0       	ldi	r24, 0x04	; 4
     7b2:	f8 07       	cpc	r31, r24
     7b4:	c9 f7       	brne	.-14     	; 0x7a8 <mcu_init+0x28>
     7b6:	08 95       	ret

000007b8 <AC_0_initialization>:
     7b8:	e7 e1       	ldi	r30, 0x17	; 23
     7ba:	f4 e0       	ldi	r31, 0x04	; 4
     7bc:	80 81       	ld	r24, Z
     7be:	88 7f       	andi	r24, 0xF8	; 248
     7c0:	84 60       	ori	r24, 0x04	; 4
     7c2:	80 83       	st	Z, r24
     7c4:	80 81       	ld	r24, Z
     7c6:	87 7f       	andi	r24, 0xF7	; 247
     7c8:	80 83       	st	Z, r24
     7ca:	08 95       	ret

000007cc <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     7cc:	d9 df       	rcall	.-78     	; 0x780 <mcu_init>
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7ce:	00 98       	cbi	0x00, 0	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7d0:	e0 e1       	ldi	r30, 0x10	; 16
     7d2:	f4 e0       	ldi	r31, 0x04	; 4
     7d4:	80 81       	ld	r24, Z
     7d6:	88 60       	ori	r24, 0x08	; 8
     7d8:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7da:	02 98       	cbi	0x00, 2	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7dc:	e2 e1       	ldi	r30, 0x12	; 18
     7de:	f4 e0       	ldi	r31, 0x04	; 4
     7e0:	80 81       	ld	r24, Z
     7e2:	88 60       	ori	r24, 0x08	; 8
     7e4:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7e6:	03 98       	cbi	0x00, 3	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7e8:	e3 e1       	ldi	r30, 0x13	; 19
     7ea:	f4 e0       	ldi	r31, 0x04	; 4
     7ec:	80 81       	ld	r24, Z
     7ee:	88 60       	ori	r24, 0x08	; 8
     7f0:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7f2:	05 98       	cbi	0x00, 5	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7f4:	e5 e1       	ldi	r30, 0x15	; 21
     7f6:	f4 e0       	ldi	r31, 0x04	; 4
     7f8:	80 81       	ld	r24, Z
     7fa:	88 60       	ori	r24, 0x08	; 8
     7fc:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     7fe:	06 9a       	sbi	0x00, 6	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     800:	0e 98       	cbi	0x01, 6	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     802:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     804:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     806:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     808:	29 98       	cbi	0x05, 1	; 5
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     80a:	22 98       	cbi	0x04, 2	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     80c:	e2 e3       	ldi	r30, 0x32	; 50
     80e:	f4 e0       	ldi	r31, 0x04	; 4
     810:	80 81       	ld	r24, Z
     812:	88 60       	ori	r24, 0x08	; 8
     814:	80 83       	st	Z, r24
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     816:	23 98       	cbi	0x04, 3	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     818:	e3 e3       	ldi	r30, 0x33	; 51
     81a:	f4 e0       	ldi	r31, 0x04	; 4
     81c:	80 81       	ld	r24, Z
     81e:	88 60       	ori	r24, 0x08	; 8
     820:	80 83       	st	Z, r24
	    // <id> pad_pull_config
	    // <PORT_PULL_OFF"> Off
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_UP);

	CLKCTRL_init();
     822:	96 df       	rcall	.-212    	; 0x750 <CLKCTRL_init>

	RTC_init(1);
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	0a d0       	rcall	.+20     	; 0x83c <RTC_init>
	
	VREF_0_init();
     828:	1e d0       	rcall	.+60     	; 0x866 <VREF_0_init>
	
	//USART_initialization();
	
	AC_0_initialization();
     82a:	c6 df       	rcall	.-116    	; 0x7b8 <AC_0_initialization>
	
	WDT_0_init();
     82c:	24 d0       	rcall	.+72     	; 0x876 <WDT_0_init>

	CPUINT_init();
     82e:	a5 df       	rcall	.-182    	; 0x77a <CPUINT_init>

	SLPCTRL_init();
     830:	15 d0       	rcall	.+42     	; 0x85c <SLPCTRL_init>

	BOD_init();
     832:	8c cf       	rjmp	.-232    	; 0x74c <BOD_init>

00000834 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     834:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     836:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     838:	40 83       	st	Z, r20
	ret                             // Return to caller
     83a:	08 95       	ret

0000083c <RTC_init>:
int8_t RTC_init(uint8_t mode)
{
	//while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
	//}
	
	while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
     83c:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__TEXT_REGION_LENGTH__+0x700151>
     840:	81 11       	cpse	r24, r1
     842:	fc cf       	rjmp	.-8      	; 0x83c <RTC_init>
	//| 1 << RTC_RTCEN_bp     /* Enable: enabled */
	//| 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	// RTC.PER = 0xffff; /* Period: 0xffff */

	RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz divided by 32 */
     844:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__TEXT_REGION_LENGTH__+0x700147>
	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	//RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
	//| 0 << RTC_OVF_bp; /* Overflow Interrupt enable: disabled */

	 RTC.PITCTRLA = RTC_PERIOD_CYC1024_gc /* Off */
     848:	89 e4       	ldi	r24, 0x49	; 73
     84a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x700150>
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	 RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */
     84e:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__TEXT_REGION_LENGTH__+0x700155>

	 RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__TEXT_REGION_LENGTH__+0x700152>

	return 0;
}
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	08 95       	ret

0000085c <SLPCTRL_init>:
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{

	SLPCTRL.CTRLA = 1 << SLPCTRL_SEN_bp       /* Sleep enable: enabled */
     85c:	83 e0       	ldi	r24, 0x03	; 3
     85e:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	                | SLPCTRL_SMODE_STDBY_gc; /* Power-down Mode */

	return 0;
}
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret

00000866 <VREF_0_init>:
 * \return Initialization status.
 */
int8_t VREF_0_init()
{

	VREF_CTRLA = VREF_ADC0REFSEL_0V55_gc   /* Voltage reference at 0.55V */
     866:	84 e0       	ldi	r24, 0x04	; 4
     868:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
	             | VREF_DAC0REFSEL_1V5_gc; /* Voltage reference at 1.5V */

	VREF_CTRLB = 0 << VREF_ADC0REFEN_bp    /* ADC0 reference enable: disabled */
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
	             | 1 << VREF_DAC0REFEN_bp; /* DAC0/AC0 reference enable: enabled */

	return 0;
}
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	08 95       	ret

00000876 <WDT_0_init>:
     876:	48 e0       	ldi	r20, 0x08	; 8
     878:	68 ed       	ldi	r22, 0xD8	; 216
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	91 e0       	ldi	r25, 0x01	; 1
     87e:	da df       	rcall	.-76     	; 0x834 <protected_write_io>
	ccp_write_io((void *)&(WDT.CTRLA),
	             WDT_PERIOD_1KCLK_gc /* 128 cycles (128) */
	                 | WDT_WINDOW_OFF_gc /* Window mode off */);

	return 0;
}
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	08 95       	ret

00000884 <check_for_aks_block>:
     884:	cf 92       	push	r12
     886:	df 92       	push	r13
     888:	ff 92       	push	r15
     88a:	0f 93       	push	r16
     88c:	1f 93       	push	r17
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	ec 01       	movw	r28, r24
     894:	ae 81       	ldd	r26, Y+6	; 0x06
     896:	bf 81       	ldd	r27, Y+7	; 0x07
     898:	eb 01       	movw	r28, r22
     89a:	cc 0f       	add	r28, r28
     89c:	dd 1f       	adc	r29, r29
     89e:	c6 0f       	add	r28, r22
     8a0:	d7 1f       	adc	r29, r23
     8a2:	ca 0f       	add	r28, r26
     8a4:	db 1f       	adc	r29, r27
     8a6:	fa 80       	ldd	r15, Y+2	; 0x02
     8a8:	fc 01       	movw	r30, r24
     8aa:	44 81       	ldd	r20, Z+4	; 0x04
     8ac:	55 81       	ldd	r21, Z+5	; 0x05
     8ae:	e6 e0       	ldi	r30, 0x06	; 6
     8b0:	e6 9f       	mul	r30, r22
     8b2:	90 01       	movw	r18, r0
     8b4:	e7 9f       	mul	r30, r23
     8b6:	30 0d       	add	r19, r0
     8b8:	11 24       	eor	r1, r1
     8ba:	8a 01       	movw	r16, r20
     8bc:	02 0f       	add	r16, r18
     8be:	13 1f       	adc	r17, r19
     8c0:	f8 01       	movw	r30, r16
     8c2:	22 81       	ldd	r18, Z+2	; 0x02
     8c4:	33 81       	ldd	r19, Z+3	; 0x03
     8c6:	f9 01       	movw	r30, r18
     8c8:	21 81       	ldd	r18, Z+1	; 0x01
     8ca:	32 81       	ldd	r19, Z+2	; 0x02
     8cc:	f8 01       	movw	r30, r16
     8ce:	04 81       	ldd	r16, Z+4	; 0x04
     8d0:	15 81       	ldd	r17, Z+5	; 0x05
     8d2:	20 1b       	sub	r18, r16
     8d4:	31 0b       	sbc	r19, r17
     8d6:	e8 81       	ld	r30, Y
     8d8:	2e 1b       	sub	r18, r30
     8da:	31 09       	sbc	r19, r1
     8dc:	ec 01       	movw	r28, r24
     8de:	ea 81       	ldd	r30, Y+2	; 0x02
     8e0:	fb 81       	ldd	r31, Y+3	; 0x03
     8e2:	00 81       	ld	r16, Z
     8e4:	11 81       	ldd	r17, Z+1	; 0x01
     8e6:	fa 01       	movw	r30, r20
     8e8:	40 e0       	ldi	r20, 0x00	; 0
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	40 17       	cp	r20, r16
     8ee:	51 07       	cpc	r21, r17
     8f0:	39 f1       	breq	.+78     	; 0x940 <check_for_aks_block+0xbc>
     8f2:	46 17       	cp	r20, r22
     8f4:	57 07       	cpc	r21, r23
     8f6:	f9 f0       	breq	.+62     	; 0x936 <check_for_aks_block+0xb2>
     8f8:	12 96       	adiw	r26, 0x02	; 2
     8fa:	8c 91       	ld	r24, X
     8fc:	12 97       	sbiw	r26, 0x02	; 2
     8fe:	f8 12       	cpse	r15, r24
     900:	1a c0       	rjmp	.+52     	; 0x936 <check_for_aks_block+0xb2>
     902:	80 81       	ld	r24, Z
     904:	85 58       	subi	r24, 0x85	; 133
     906:	82 30       	cpi	r24, 0x02	; 2
     908:	e8 f0       	brcs	.+58     	; 0x944 <check_for_aks_block+0xc0>
     90a:	c4 80       	ldd	r12, Z+4	; 0x04
     90c:	d5 80       	ldd	r13, Z+5	; 0x05
     90e:	82 81       	ldd	r24, Z+2	; 0x02
     910:	93 81       	ldd	r25, Z+3	; 0x03
     912:	ec 01       	movw	r28, r24
     914:	89 81       	ldd	r24, Y+1	; 0x01
     916:	9a 81       	ldd	r25, Y+2	; 0x02
     918:	c8 16       	cp	r12, r24
     91a:	d9 06       	cpc	r13, r25
     91c:	60 f4       	brcc	.+24     	; 0x936 <check_for_aks_block+0xb2>
     91e:	8c 19       	sub	r24, r12
     920:	9d 09       	sbc	r25, r13
     922:	cc 91       	ld	r28, X
     924:	d0 e0       	ldi	r29, 0x00	; 0
     926:	c8 17       	cp	r28, r24
     928:	d9 07       	cpc	r29, r25
     92a:	28 f4       	brcc	.+10     	; 0x936 <check_for_aks_block+0xb2>
     92c:	8c 1b       	sub	r24, r28
     92e:	9d 0b       	sbc	r25, r29
     930:	28 17       	cp	r18, r24
     932:	39 07       	cpc	r19, r25
     934:	38 f0       	brcs	.+14     	; 0x944 <check_for_aks_block+0xc0>
     936:	4f 5f       	subi	r20, 0xFF	; 255
     938:	5f 4f       	sbci	r21, 0xFF	; 255
     93a:	13 96       	adiw	r26, 0x03	; 3
     93c:	36 96       	adiw	r30, 0x06	; 6
     93e:	d6 cf       	rjmp	.-84     	; 0x8ec <check_for_aks_block+0x68>
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	01 c0       	rjmp	.+2      	; 0x946 <check_for_aks_block+0xc2>
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	0f 91       	pop	r16
     94e:	ff 90       	pop	r15
     950:	df 90       	pop	r13
     952:	cf 90       	pop	r12
     954:	08 95       	ret

00000956 <qtm_update_qtlib_timer>:
     956:	20 91 5f 3e 	lds	r18, 0x3E5F	; 0x803e5f <qtm_local_ms_timecount>
     95a:	30 91 60 3e 	lds	r19, 0x3E60	; 0x803e60 <qtm_local_ms_timecount+0x1>
     95e:	82 0f       	add	r24, r18
     960:	93 1f       	adc	r25, r19
     962:	80 93 5f 3e 	sts	0x3E5F, r24	; 0x803e5f <qtm_local_ms_timecount>
     966:	90 93 60 3e 	sts	0x3E60, r25	; 0x803e60 <qtm_local_ms_timecount+0x1>
     96a:	08 95       	ret

0000096c <qtm_init_sensor_key>:
     96c:	00 97       	sbiw	r24, 0x00	; 0
     96e:	d9 f0       	breq	.+54     	; 0x9a6 <qtm_init_sensor_key+0x3a>
     970:	41 15       	cp	r20, r1
     972:	51 05       	cpc	r21, r1
     974:	c1 f0       	breq	.+48     	; 0x9a6 <qtm_init_sensor_key+0x3a>
     976:	26 e0       	ldi	r18, 0x06	; 6
     978:	62 9f       	mul	r22, r18
     97a:	b0 01       	movw	r22, r0
     97c:	11 24       	eor	r1, r1
     97e:	dc 01       	movw	r26, r24
     980:	14 96       	adiw	r26, 0x04	; 4
     982:	ed 91       	ld	r30, X+
     984:	fc 91       	ld	r31, X
     986:	15 97       	sbiw	r26, 0x05	; 5
     988:	e6 0f       	add	r30, r22
     98a:	f7 1f       	adc	r31, r23
     98c:	21 e0       	ldi	r18, 0x01	; 1
     98e:	20 83       	st	Z, r18
     990:	14 96       	adiw	r26, 0x04	; 4
     992:	8d 91       	ld	r24, X+
     994:	9c 91       	ld	r25, X
     996:	15 97       	sbiw	r26, 0x05	; 5
     998:	fc 01       	movw	r30, r24
     99a:	e6 0f       	add	r30, r22
     99c:	f7 1f       	adc	r31, r23
     99e:	42 83       	std	Z+2, r20	; 0x02
     9a0:	53 83       	std	Z+3, r21	; 0x03
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	08 95       	ret
     9a6:	8b e0       	ldi	r24, 0x0B	; 11
     9a8:	08 95       	ret

000009aa <qtm_key_sensors_process>:
     9aa:	2f 92       	push	r2
     9ac:	3f 92       	push	r3
     9ae:	4f 92       	push	r4
     9b0:	5f 92       	push	r5
     9b2:	6f 92       	push	r6
     9b4:	7f 92       	push	r7
     9b6:	8f 92       	push	r8
     9b8:	9f 92       	push	r9
     9ba:	af 92       	push	r10
     9bc:	bf 92       	push	r11
     9be:	cf 92       	push	r12
     9c0:	df 92       	push	r13
     9c2:	ef 92       	push	r14
     9c4:	ff 92       	push	r15
     9c6:	0f 93       	push	r16
     9c8:	1f 93       	push	r17
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	00 97       	sbiw	r24, 0x00	; 0
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <qtm_key_sensors_process+0x2a>
     9d2:	7b c3       	rjmp	.+1782   	; 0x10ca <qtm_key_sensors_process+0x720>
     9d4:	ec 01       	movw	r28, r24
     9d6:	a1 2c       	mov	r10, r1
     9d8:	b1 2c       	mov	r11, r1
     9da:	81 2c       	mov	r8, r1
     9dc:	91 2c       	mov	r9, r1
     9de:	21 2c       	mov	r2, r1
     9e0:	d1 2c       	mov	r13, r1
     9e2:	33 e0       	ldi	r19, 0x03	; 3
     9e4:	c3 2e       	mov	r12, r19
     9e6:	45 e8       	ldi	r20, 0x85	; 133
     9e8:	64 2e       	mov	r6, r20
     9ea:	56 e8       	ldi	r21, 0x86	; 134
     9ec:	75 2e       	mov	r7, r21
     9ee:	67 e0       	ldi	r22, 0x07	; 7
     9f0:	36 2e       	mov	r3, r22
     9f2:	72 e0       	ldi	r23, 0x02	; 2
     9f4:	47 2e       	mov	r4, r23
     9f6:	e8 e0       	ldi	r30, 0x08	; 8
     9f8:	5e 2e       	mov	r5, r30
     9fa:	ea 81       	ldd	r30, Y+2	; 0x02
     9fc:	fb 81       	ldd	r31, Y+3	; 0x03
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	88 16       	cp	r8, r24
     a04:	99 06       	cpc	r9, r25
     a06:	08 f0       	brcs	.+2      	; 0xa0a <qtm_key_sensors_process+0x60>
     a08:	a3 c1       	rjmp	.+838    	; 0xd50 <qtm_key_sensors_process+0x3a6>
     a0a:	75 01       	movw	r14, r10
     a0c:	ee 0c       	add	r14, r14
     a0e:	ff 1c       	adc	r15, r15
     a10:	0c 81       	ldd	r16, Y+4	; 0x04
     a12:	1d 81       	ldd	r17, Y+5	; 0x05
     a14:	0e 0d       	add	r16, r14
     a16:	1f 1d       	adc	r17, r15
     a18:	d8 01       	movw	r26, r16
     a1a:	8c 91       	ld	r24, X
     a1c:	84 30       	cpi	r24, 0x04	; 4
     a1e:	09 f4       	brne	.+2      	; 0xa22 <qtm_key_sensors_process+0x78>
     a20:	a1 c0       	rjmp	.+322    	; 0xb64 <qtm_key_sensors_process+0x1ba>
     a22:	38 f4       	brcc	.+14     	; 0xa32 <qtm_key_sensors_process+0x88>
     a24:	82 30       	cpi	r24, 0x02	; 2
     a26:	01 f1       	breq	.+64     	; 0xa68 <qtm_key_sensors_process+0xbe>
     a28:	08 f0       	brcs	.+2      	; 0xa2c <qtm_key_sensors_process+0x82>
     a2a:	49 c0       	rjmp	.+146    	; 0xabe <qtm_key_sensors_process+0x114>
     a2c:	81 30       	cpi	r24, 0x01	; 1
     a2e:	59 f0       	breq	.+22     	; 0xa46 <qtm_key_sensors_process+0x9c>
     a30:	88 c1       	rjmp	.+784    	; 0xd42 <qtm_key_sensors_process+0x398>
     a32:	85 38       	cpi	r24, 0x85	; 133
     a34:	09 f4       	brne	.+2      	; 0xa38 <qtm_key_sensors_process+0x8e>
     a36:	c0 c0       	rjmp	.+384    	; 0xbb8 <qtm_key_sensors_process+0x20e>
     a38:	86 38       	cpi	r24, 0x86	; 134
     a3a:	09 f4       	brne	.+2      	; 0xa3e <qtm_key_sensors_process+0x94>
     a3c:	f4 c0       	rjmp	.+488    	; 0xc26 <qtm_key_sensors_process+0x27c>
     a3e:	87 30       	cpi	r24, 0x07	; 7
     a40:	09 f0       	breq	.+2      	; 0xa44 <qtm_key_sensors_process+0x9a>
     a42:	7f c1       	rjmp	.+766    	; 0xd42 <qtm_key_sensors_process+0x398>
     a44:	35 c1       	rjmp	.+618    	; 0xcb0 <qtm_key_sensors_process+0x306>
     a46:	d8 01       	movw	r26, r16
     a48:	12 96       	adiw	r26, 0x02	; 2
     a4a:	ed 91       	ld	r30, X+
     a4c:	fc 91       	ld	r31, X
     a4e:	13 97       	sbiw	r26, 0x03	; 3
     a50:	80 81       	ld	r24, Z
     a52:	8e 71       	andi	r24, 0x1E	; 30
     a54:	09 f0       	breq	.+2      	; 0xa58 <qtm_key_sensors_process+0xae>
     a56:	67 c1       	rjmp	.+718    	; 0xd26 <qtm_key_sensors_process+0x37c>
     a58:	4c 92       	st	X, r4
     a5a:	8c 81       	ldd	r24, Y+4	; 0x04
     a5c:	9d 81       	ldd	r25, Y+5	; 0x05
     a5e:	fc 01       	movw	r30, r24
     a60:	ee 0d       	add	r30, r14
     a62:	ff 1d       	adc	r31, r15
     a64:	51 82       	std	Z+1, r5	; 0x01
     a66:	5f c1       	rjmp	.+702    	; 0xd26 <qtm_key_sensors_process+0x37c>
     a68:	f8 01       	movw	r30, r16
     a6a:	21 81       	ldd	r18, Z+1	; 0x01
     a6c:	22 23       	and	r18, r18
     a6e:	29 f1       	breq	.+74     	; 0xaba <qtm_key_sensors_process+0x110>
     a70:	02 80       	ldd	r0, Z+2	; 0x02
     a72:	f3 81       	ldd	r31, Z+3	; 0x03
     a74:	e0 2d       	mov	r30, r0
     a76:	25 30       	cpi	r18, 0x05	; 5
     a78:	20 f0       	brcs	.+8      	; 0xa82 <qtm_key_sensors_process+0xd8>
     a7a:	81 81       	ldd	r24, Z+1	; 0x01
     a7c:	92 81       	ldd	r25, Z+2	; 0x02
     a7e:	d8 01       	movw	r26, r16
     a80:	0e c0       	rjmp	.+28     	; 0xa9e <qtm_key_sensors_process+0xf4>
     a82:	d8 01       	movw	r26, r16
     a84:	14 96       	adiw	r26, 0x04	; 4
     a86:	8d 91       	ld	r24, X+
     a88:	9c 91       	ld	r25, X
     a8a:	15 97       	sbiw	r26, 0x05	; 5
     a8c:	41 81       	ldd	r20, Z+1	; 0x01
     a8e:	52 81       	ldd	r21, Z+2	; 0x02
     a90:	84 17       	cp	r24, r20
     a92:	95 07       	cpc	r25, r21
     a94:	69 f0       	breq	.+26     	; 0xab0 <qtm_key_sensors_process+0x106>
     a96:	48 17       	cp	r20, r24
     a98:	59 07       	cpc	r21, r25
     a9a:	30 f4       	brcc	.+12     	; 0xaa8 <qtm_key_sensors_process+0xfe>
     a9c:	01 97       	sbiw	r24, 0x01	; 1
     a9e:	14 96       	adiw	r26, 0x04	; 4
     aa0:	8d 93       	st	X+, r24
     aa2:	9c 93       	st	X, r25
     aa4:	15 97       	sbiw	r26, 0x05	; 5
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <qtm_key_sensors_process+0x106>
     aa8:	01 96       	adiw	r24, 0x01	; 1
     aaa:	f8 01       	movw	r30, r16
     aac:	84 83       	std	Z+4, r24	; 0x04
     aae:	95 83       	std	Z+5, r25	; 0x05
     ab0:	21 50       	subi	r18, 0x01	; 1
     ab2:	d8 01       	movw	r26, r16
     ab4:	11 96       	adiw	r26, 0x01	; 1
     ab6:	2c 93       	st	X, r18
     ab8:	36 c1       	rjmp	.+620    	; 0xd26 <qtm_key_sensors_process+0x37c>
     aba:	f8 01       	movw	r30, r16
     abc:	2f c1       	rjmp	.+606    	; 0xd1c <qtm_key_sensors_process+0x372>
     abe:	d8 01       	movw	r26, r16
     ac0:	14 96       	adiw	r26, 0x04	; 4
     ac2:	2d 91       	ld	r18, X+
     ac4:	3c 91       	ld	r19, X
     ac6:	15 97       	sbiw	r26, 0x05	; 5
     ac8:	12 96       	adiw	r26, 0x02	; 2
     aca:	8d 91       	ld	r24, X+
     acc:	9c 91       	ld	r25, X
     ace:	13 97       	sbiw	r26, 0x03	; 3
     ad0:	dc 01       	movw	r26, r24
     ad2:	11 96       	adiw	r26, 0x01	; 1
     ad4:	4d 91       	ld	r20, X+
     ad6:	5c 91       	ld	r21, X
     ad8:	12 97       	sbiw	r26, 0x02	; 2
     ada:	24 17       	cp	r18, r20
     adc:	35 07       	cpc	r19, r21
     ade:	09 f4       	brne	.+2      	; 0xae2 <qtm_key_sensors_process+0x138>
     ae0:	30 c1       	rjmp	.+608    	; 0xd42 <qtm_key_sensors_process+0x398>
     ae2:	8e 81       	ldd	r24, Y+6	; 0x06
     ae4:	9f 81       	ldd	r25, Y+7	; 0x07
     ae6:	42 17       	cp	r20, r18
     ae8:	53 07       	cpc	r21, r19
     aea:	e0 f4       	brcc	.+56     	; 0xb24 <qtm_key_sensors_process+0x17a>
     aec:	24 1b       	sub	r18, r20
     aee:	35 0b       	sbc	r19, r21
     af0:	dc 01       	movw	r26, r24
     af2:	aa 0d       	add	r26, r10
     af4:	bb 1d       	adc	r27, r11
     af6:	8c 91       	ld	r24, X
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	05 80       	ldd	r0, Z+5	; 0x05
     afc:	02 c0       	rjmp	.+4      	; 0xb02 <qtm_key_sensors_process+0x158>
     afe:	95 95       	asr	r25
     b00:	87 95       	ror	r24
     b02:	0a 94       	dec	r0
     b04:	e2 f7       	brpl	.-8      	; 0xafe <qtm_key_sensors_process+0x154>
     b06:	99 27       	eor	r25, r25
     b08:	28 17       	cp	r18, r24
     b0a:	39 07       	cpc	r19, r25
     b0c:	08 f4       	brcc	.+2      	; 0xb10 <qtm_key_sensors_process+0x166>
     b0e:	19 c1       	rjmp	.+562    	; 0xd42 <qtm_key_sensors_process+0x398>
     b10:	84 81       	ldd	r24, Z+4	; 0x04
     b12:	88 23       	and	r24, r24
     b14:	09 f4       	brne	.+2      	; 0xb18 <qtm_key_sensors_process+0x16e>
     b16:	15 c1       	rjmp	.+554    	; 0xd42 <qtm_key_sensors_process+0x398>
     b18:	f8 01       	movw	r30, r16
     b1a:	30 82       	st	Z, r3
     b1c:	ea 81       	ldd	r30, Y+2	; 0x02
     b1e:	fb 81       	ldd	r31, Y+3	; 0x03
     b20:	24 81       	ldd	r18, Z+4	; 0x04
     b22:	19 c0       	rjmp	.+50     	; 0xb56 <qtm_key_sensors_process+0x1ac>
     b24:	fc 01       	movw	r30, r24
     b26:	ea 0d       	add	r30, r10
     b28:	fb 1d       	adc	r31, r11
     b2a:	42 1b       	sub	r20, r18
     b2c:	53 0b       	sbc	r21, r19
     b2e:	80 81       	ld	r24, Z
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	48 17       	cp	r20, r24
     b34:	59 07       	cpc	r21, r25
     b36:	08 f4       	brcc	.+2      	; 0xb3a <qtm_key_sensors_process+0x190>
     b38:	04 c1       	rjmp	.+520    	; 0xd42 <qtm_key_sensors_process+0x398>
     b3a:	82 81       	ldd	r24, Z+2	; 0x02
     b3c:	88 23       	and	r24, r24
     b3e:	29 f0       	breq	.+10     	; 0xb4a <qtm_key_sensors_process+0x1a0>
     b40:	b4 01       	movw	r22, r8
     b42:	ce 01       	movw	r24, r28
     b44:	9f de       	rcall	.-706    	; 0x884 <check_for_aks_block>
     b46:	81 11       	cpse	r24, r1
     b48:	fc c0       	rjmp	.+504    	; 0xd42 <qtm_key_sensors_process+0x398>
     b4a:	e4 e0       	ldi	r30, 0x04	; 4
     b4c:	d8 01       	movw	r26, r16
     b4e:	ec 93       	st	X, r30
     b50:	ea 81       	ldd	r30, Y+2	; 0x02
     b52:	fb 81       	ldd	r31, Y+3	; 0x03
     b54:	22 81       	ldd	r18, Z+2	; 0x02
     b56:	8c 81       	ldd	r24, Y+4	; 0x04
     b58:	9d 81       	ldd	r25, Y+5	; 0x05
     b5a:	fc 01       	movw	r30, r24
     b5c:	ee 0d       	add	r30, r14
     b5e:	ff 1d       	adc	r31, r15
     b60:	21 83       	std	Z+1, r18	; 0x01
     b62:	e1 c0       	rjmp	.+450    	; 0xd26 <qtm_key_sensors_process+0x37c>
     b64:	d8 01       	movw	r26, r16
     b66:	14 96       	adiw	r26, 0x04	; 4
     b68:	2d 91       	ld	r18, X+
     b6a:	3c 91       	ld	r19, X
     b6c:	15 97       	sbiw	r26, 0x05	; 5
     b6e:	12 96       	adiw	r26, 0x02	; 2
     b70:	ed 91       	ld	r30, X+
     b72:	fc 91       	ld	r31, X
     b74:	13 97       	sbiw	r26, 0x03	; 3
     b76:	81 81       	ldd	r24, Z+1	; 0x01
     b78:	92 81       	ldd	r25, Z+2	; 0x02
     b7a:	82 17       	cp	r24, r18
     b7c:	93 07       	cpc	r25, r19
     b7e:	08 f4       	brcc	.+2      	; 0xb82 <qtm_key_sensors_process+0x1d8>
     b80:	d6 c0       	rjmp	.+428    	; 0xd2e <qtm_key_sensors_process+0x384>
     b82:	ee 81       	ldd	r30, Y+6	; 0x06
     b84:	ff 81       	ldd	r31, Y+7	; 0x07
     b86:	ea 0d       	add	r30, r10
     b88:	fb 1d       	adc	r31, r11
     b8a:	82 1b       	sub	r24, r18
     b8c:	93 0b       	sbc	r25, r19
     b8e:	20 81       	ld	r18, Z
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	28 17       	cp	r18, r24
     b94:	39 07       	cpc	r19, r25
     b96:	08 f0       	brcs	.+2      	; 0xb9a <qtm_key_sensors_process+0x1f0>
     b98:	ae c0       	rjmp	.+348    	; 0xcf6 <qtm_key_sensors_process+0x34c>
     b9a:	82 81       	ldd	r24, Z+2	; 0x02
     b9c:	88 23       	and	r24, r24
     b9e:	29 f0       	breq	.+10     	; 0xbaa <qtm_key_sensors_process+0x200>
     ba0:	b4 01       	movw	r22, r8
     ba2:	ce 01       	movw	r24, r28
     ba4:	6f de       	rcall	.-802    	; 0x884 <check_for_aks_block>
     ba6:	81 11       	cpse	r24, r1
     ba8:	cc c0       	rjmp	.+408    	; 0xd42 <qtm_key_sensors_process+0x398>
     baa:	f8 01       	movw	r30, r16
     bac:	81 81       	ldd	r24, Z+1	; 0x01
     bae:	88 23       	and	r24, r24
     bb0:	09 f4       	brne	.+2      	; 0xbb4 <qtm_key_sensors_process+0x20a>
     bb2:	67 c0       	rjmp	.+206    	; 0xc82 <qtm_key_sensors_process+0x2d8>
     bb4:	81 50       	subi	r24, 0x01	; 1
     bb6:	b6 c0       	rjmp	.+364    	; 0xd24 <qtm_key_sensors_process+0x37a>
     bb8:	a8 81       	ld	r26, Y
     bba:	b9 81       	ldd	r27, Y+1	; 0x01
     bbc:	80 85       	ldd	r24, Z+8	; 0x08
     bbe:	13 96       	adiw	r26, 0x03	; 3
     bc0:	8c 93       	st	X, r24
     bc2:	ec 81       	ldd	r30, Y+4	; 0x04
     bc4:	fd 81       	ldd	r31, Y+5	; 0x05
     bc6:	ee 0d       	add	r30, r14
     bc8:	ff 1d       	adc	r31, r15
     bca:	44 81       	ldd	r20, Z+4	; 0x04
     bcc:	55 81       	ldd	r21, Z+5	; 0x05
     bce:	a2 81       	ldd	r26, Z+2	; 0x02
     bd0:	b3 81       	ldd	r27, Z+3	; 0x03
     bd2:	11 96       	adiw	r26, 0x01	; 1
     bd4:	8d 91       	ld	r24, X+
     bd6:	9c 91       	ld	r25, X
     bd8:	12 97       	sbiw	r26, 0x02	; 2
     bda:	84 17       	cp	r24, r20
     bdc:	95 07       	cpc	r25, r21
     bde:	c0 f0       	brcs	.+48     	; 0xc10 <qtm_key_sensors_process+0x266>
     be0:	ae 81       	ldd	r26, Y+6	; 0x06
     be2:	bf 81       	ldd	r27, Y+7	; 0x07
     be4:	aa 0d       	add	r26, r10
     be6:	bb 1d       	adc	r27, r11
     be8:	6c 91       	ld	r22, X
     bea:	26 2f       	mov	r18, r22
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	11 96       	adiw	r26, 0x01	; 1
     bf0:	7c 91       	ld	r23, X
     bf2:	7f 5f       	subi	r23, 0xFF	; 255
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <qtm_key_sensors_process+0x250>
     bf6:	35 95       	asr	r19
     bf8:	27 95       	ror	r18
     bfa:	7a 95       	dec	r23
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <qtm_key_sensors_process+0x24c>
     bfe:	84 1b       	sub	r24, r20
     c00:	95 0b       	sbc	r25, r21
     c02:	62 1b       	sub	r22, r18
     c04:	26 2f       	mov	r18, r22
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	28 17       	cp	r18, r24
     c0a:	39 07       	cpc	r19, r25
     c0c:	08 f4       	brcc	.+2      	; 0xc10 <qtm_key_sensors_process+0x266>
     c0e:	97 c0       	rjmp	.+302    	; 0xd3e <qtm_key_sensors_process+0x394>
     c10:	70 82       	st	Z, r7
     c12:	ea 81       	ldd	r30, Y+2	; 0x02
     c14:	fb 81       	ldd	r31, Y+3	; 0x03
     c16:	22 81       	ldd	r18, Z+2	; 0x02
     c18:	8c 81       	ldd	r24, Y+4	; 0x04
     c1a:	9d 81       	ldd	r25, Y+5	; 0x05
     c1c:	fc 01       	movw	r30, r24
     c1e:	ee 0d       	add	r30, r14
     c20:	ff 1d       	adc	r31, r15
     c22:	21 83       	std	Z+1, r18	; 0x01
     c24:	42 c0       	rjmp	.+132    	; 0xcaa <qtm_key_sensors_process+0x300>
     c26:	d8 01       	movw	r26, r16
     c28:	14 96       	adiw	r26, 0x04	; 4
     c2a:	6d 91       	ld	r22, X+
     c2c:	7c 91       	ld	r23, X
     c2e:	15 97       	sbiw	r26, 0x05	; 5
     c30:	12 96       	adiw	r26, 0x02	; 2
     c32:	ed 91       	ld	r30, X+
     c34:	fc 91       	ld	r31, X
     c36:	13 97       	sbiw	r26, 0x03	; 3
     c38:	21 81       	ldd	r18, Z+1	; 0x01
     c3a:	32 81       	ldd	r19, Z+2	; 0x02
     c3c:	26 17       	cp	r18, r22
     c3e:	37 07       	cpc	r19, r23
     c40:	58 f4       	brcc	.+22     	; 0xc58 <qtm_key_sensors_process+0x2ae>
     c42:	11 96       	adiw	r26, 0x01	; 1
     c44:	8c 91       	ld	r24, X
     c46:	11 97       	sbiw	r26, 0x01	; 1
     c48:	81 11       	cpse	r24, r1
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <qtm_key_sensors_process+0x2a6>
     c4c:	cc 92       	st	X, r12
     c4e:	77 c0       	rjmp	.+238    	; 0xd3e <qtm_key_sensors_process+0x394>
     c50:	81 50       	subi	r24, 0x01	; 1
     c52:	f8 01       	movw	r30, r16
     c54:	81 83       	std	Z+1, r24	; 0x01
     c56:	73 c0       	rjmp	.+230    	; 0xd3e <qtm_key_sensors_process+0x394>
     c58:	ee 81       	ldd	r30, Y+6	; 0x06
     c5a:	ff 81       	ldd	r31, Y+7	; 0x07
     c5c:	ea 0d       	add	r30, r10
     c5e:	fb 1d       	adc	r31, r11
     c60:	80 81       	ld	r24, Z
     c62:	48 2f       	mov	r20, r24
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	91 81       	ldd	r25, Z+1	; 0x01
     c68:	9f 5f       	subi	r25, 0xFF	; 255
     c6a:	02 c0       	rjmp	.+4      	; 0xc70 <qtm_key_sensors_process+0x2c6>
     c6c:	55 95       	asr	r21
     c6e:	47 95       	ror	r20
     c70:	9a 95       	dec	r25
     c72:	e2 f7       	brpl	.-8      	; 0xc6c <qtm_key_sensors_process+0x2c2>
     c74:	26 1b       	sub	r18, r22
     c76:	37 0b       	sbc	r19, r23
     c78:	84 1b       	sub	r24, r20
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	82 17       	cp	r24, r18
     c7e:	93 07       	cpc	r25, r19
     c80:	60 f4       	brcc	.+24     	; 0xc9a <qtm_key_sensors_process+0x2f0>
     c82:	d8 01       	movw	r26, r16
     c84:	6c 92       	st	X, r6
     c86:	ea 81       	ldd	r30, Y+2	; 0x02
     c88:	fb 81       	ldd	r31, Y+3	; 0x03
     c8a:	23 81       	ldd	r18, Z+3	; 0x03
     c8c:	8c 81       	ldd	r24, Y+4	; 0x04
     c8e:	9d 81       	ldd	r25, Y+5	; 0x05
     c90:	fc 01       	movw	r30, r24
     c92:	ee 0d       	add	r30, r14
     c94:	ff 1d       	adc	r31, r15
     c96:	21 83       	std	Z+1, r18	; 0x01
     c98:	52 c0       	rjmp	.+164    	; 0xd3e <qtm_key_sensors_process+0x394>
     c9a:	f8 01       	movw	r30, r16
     c9c:	81 81       	ldd	r24, Z+1	; 0x01
     c9e:	81 11       	cpse	r24, r1
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <qtm_key_sensors_process+0x2fc>
     ca2:	c0 82       	st	Z, r12
     ca4:	4c c0       	rjmp	.+152    	; 0xd3e <qtm_key_sensors_process+0x394>
     ca6:	81 50       	subi	r24, 0x01	; 1
     ca8:	81 83       	std	Z+1, r24	; 0x01
     caa:	22 24       	eor	r2, r2
     cac:	23 94       	inc	r2
     cae:	3b c0       	rjmp	.+118    	; 0xd26 <qtm_key_sensors_process+0x37c>
     cb0:	d8 01       	movw	r26, r16
     cb2:	14 96       	adiw	r26, 0x04	; 4
     cb4:	2d 91       	ld	r18, X+
     cb6:	3c 91       	ld	r19, X
     cb8:	15 97       	sbiw	r26, 0x05	; 5
     cba:	12 96       	adiw	r26, 0x02	; 2
     cbc:	8d 91       	ld	r24, X+
     cbe:	9c 91       	ld	r25, X
     cc0:	13 97       	sbiw	r26, 0x03	; 3
     cc2:	dc 01       	movw	r26, r24
     cc4:	11 96       	adiw	r26, 0x01	; 1
     cc6:	8d 91       	ld	r24, X+
     cc8:	9c 91       	ld	r25, X
     cca:	12 97       	sbiw	r26, 0x02	; 2
     ccc:	82 17       	cp	r24, r18
     cce:	93 07       	cpc	r25, r19
     cd0:	68 f5       	brcc	.+90     	; 0xd2c <qtm_key_sensors_process+0x382>
     cd2:	28 1b       	sub	r18, r24
     cd4:	39 0b       	sbc	r19, r25
     cd6:	ae 81       	ldd	r26, Y+6	; 0x06
     cd8:	bf 81       	ldd	r27, Y+7	; 0x07
     cda:	aa 0d       	add	r26, r10
     cdc:	bb 1d       	adc	r27, r11
     cde:	8c 91       	ld	r24, X
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	05 80       	ldd	r0, Z+5	; 0x05
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <qtm_key_sensors_process+0x340>
     ce6:	95 95       	asr	r25
     ce8:	87 95       	ror	r24
     cea:	0a 94       	dec	r0
     cec:	e2 f7       	brpl	.-8      	; 0xce6 <qtm_key_sensors_process+0x33c>
     cee:	99 27       	eor	r25, r25
     cf0:	28 17       	cp	r18, r24
     cf2:	39 07       	cpc	r19, r25
     cf4:	18 f4       	brcc	.+6      	; 0xcfc <qtm_key_sensors_process+0x352>
     cf6:	f8 01       	movw	r30, r16
     cf8:	c0 82       	st	Z, r12
     cfa:	1a c0       	rjmp	.+52     	; 0xd30 <qtm_key_sensors_process+0x386>
     cfc:	d8 01       	movw	r26, r16
     cfe:	11 96       	adiw	r26, 0x01	; 1
     d00:	8c 91       	ld	r24, X
     d02:	11 97       	sbiw	r26, 0x01	; 1
     d04:	81 11       	cpse	r24, r1
     d06:	0c c0       	rjmp	.+24     	; 0xd20 <qtm_key_sensors_process+0x376>
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	8c 93       	st	X, r24
     d0c:	8c 81       	ldd	r24, Y+4	; 0x04
     d0e:	9d 81       	ldd	r25, Y+5	; 0x05
     d10:	fc 01       	movw	r30, r24
     d12:	ee 0d       	add	r30, r14
     d14:	ff 1d       	adc	r31, r15
     d16:	02 80       	ldd	r0, Z+2	; 0x02
     d18:	f3 81       	ldd	r31, Z+3	; 0x03
     d1a:	e0 2d       	mov	r30, r0
     d1c:	c0 82       	st	Z, r12
     d1e:	11 c0       	rjmp	.+34     	; 0xd42 <qtm_key_sensors_process+0x398>
     d20:	81 50       	subi	r24, 0x01	; 1
     d22:	f8 01       	movw	r30, r16
     d24:	81 83       	std	Z+1, r24	; 0x01
     d26:	dd 24       	eor	r13, r13
     d28:	d3 94       	inc	r13
     d2a:	0b c0       	rjmp	.+22     	; 0xd42 <qtm_key_sensors_process+0x398>
     d2c:	d8 01       	movw	r26, r16
     d2e:	cc 92       	st	X, r12
     d30:	8c 81       	ldd	r24, Y+4	; 0x04
     d32:	9d 81       	ldd	r25, Y+5	; 0x05
     d34:	fc 01       	movw	r30, r24
     d36:	ee 0d       	add	r30, r14
     d38:	ff 1d       	adc	r31, r15
     d3a:	11 82       	std	Z+1, r1	; 0x01
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <qtm_key_sensors_process+0x398>
     d3e:	22 24       	eor	r2, r2
     d40:	23 94       	inc	r2
     d42:	bf ef       	ldi	r27, 0xFF	; 255
     d44:	8b 1a       	sub	r8, r27
     d46:	9b 0a       	sbc	r9, r27
     d48:	e3 e0       	ldi	r30, 0x03	; 3
     d4a:	ae 0e       	add	r10, r30
     d4c:	b1 1c       	adc	r11, r1
     d4e:	55 ce       	rjmp	.-854    	; 0x9fa <qtm_key_sensors_process+0x50>
     d50:	e8 81       	ld	r30, Y
     d52:	f9 81       	ldd	r31, Y+1	; 0x01
     d54:	80 81       	ld	r24, Z
     d56:	87 ff       	sbrs	r24, 7
     d58:	23 c0       	rjmp	.+70     	; 0xda0 <qtm_key_sensors_process+0x3f6>
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	ea 81       	ldd	r30, Y+2	; 0x02
     d64:	fb 81       	ldd	r31, Y+3	; 0x03
     d66:	80 81       	ld	r24, Z
     d68:	91 81       	ldd	r25, Z+1	; 0x01
     d6a:	28 17       	cp	r18, r24
     d6c:	39 07       	cpc	r19, r25
     d6e:	98 f4       	brcc	.+38     	; 0xd96 <qtm_key_sensors_process+0x3ec>
     d70:	ec 81       	ldd	r30, Y+4	; 0x04
     d72:	fd 81       	ldd	r31, Y+5	; 0x05
     d74:	e4 0f       	add	r30, r20
     d76:	f5 1f       	adc	r31, r21
     d78:	a2 81       	ldd	r26, Z+2	; 0x02
     d7a:	b3 81       	ldd	r27, Z+3	; 0x03
     d7c:	8c 91       	ld	r24, X
     d7e:	80 fd       	sbrc	r24, 0
     d80:	05 c0       	rjmp	.+10     	; 0xd8c <qtm_key_sensors_process+0x3e2>
     d82:	90 81       	ld	r25, Z
     d84:	97 7f       	andi	r25, 0xF7	; 247
     d86:	11 f0       	breq	.+4      	; 0xd8c <qtm_key_sensors_process+0x3e2>
     d88:	81 60       	ori	r24, 0x01	; 1
     d8a:	8c 93       	st	X, r24
     d8c:	2f 5f       	subi	r18, 0xFF	; 255
     d8e:	3f 4f       	sbci	r19, 0xFF	; 255
     d90:	4a 5f       	subi	r20, 0xFA	; 250
     d92:	5f 4f       	sbci	r21, 0xFF	; 255
     d94:	e6 cf       	rjmp	.-52     	; 0xd62 <qtm_key_sensors_process+0x3b8>
     d96:	e8 81       	ld	r30, Y
     d98:	f9 81       	ldd	r31, Y+1	; 0x01
     d9a:	80 81       	ld	r24, Z
     d9c:	8f 77       	andi	r24, 0x7F	; 127
     d9e:	80 83       	st	Z, r24
     da0:	d1 10       	cpse	r13, r1
     da2:	07 c0       	rjmp	.+14     	; 0xdb2 <qtm_key_sensors_process+0x408>
     da4:	e8 81       	ld	r30, Y
     da6:	f9 81       	ldd	r31, Y+1	; 0x01
     da8:	21 10       	cpse	r2, r1
     daa:	6f c0       	rjmp	.+222    	; 0xe8a <qtm_key_sensors_process+0x4e0>
     dac:	80 81       	ld	r24, Z
     dae:	8e 7f       	andi	r24, 0xFE	; 254
     db0:	6e c0       	rjmp	.+220    	; 0xe8e <qtm_key_sensors_process+0x4e4>
     db2:	ea 81       	ldd	r30, Y+2	; 0x02
     db4:	fb 81       	ldd	r31, Y+3	; 0x03
     db6:	81 85       	ldd	r24, Z+9	; 0x09
     db8:	88 23       	and	r24, r24
     dba:	a1 f3       	breq	.-24     	; 0xda4 <qtm_key_sensors_process+0x3fa>
     dbc:	e8 81       	ld	r30, Y
     dbe:	f9 81       	ldd	r31, Y+1	; 0x01
     dc0:	80 81       	ld	r24, Z
     dc2:	80 68       	ori	r24, 0x80	; 128
     dc4:	80 83       	st	Z, r24
     dc6:	ea 81       	ldd	r30, Y+2	; 0x02
     dc8:	fb 81       	ldd	r31, Y+3	; 0x03
     dca:	81 85       	ldd	r24, Z+9	; 0x09
     dcc:	81 30       	cpi	r24, 0x01	; 1
     dce:	51 f7       	brne	.-44     	; 0xda4 <qtm_key_sensors_process+0x3fa>
     dd0:	40 e0       	ldi	r20, 0x00	; 0
     dd2:	50 e0       	ldi	r21, 0x00	; 0
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	96 e0       	ldi	r25, 0x06	; 6
     dda:	d9 2e       	mov	r13, r25
     ddc:	ea 81       	ldd	r30, Y+2	; 0x02
     dde:	fb 81       	ldd	r31, Y+3	; 0x03
     de0:	60 81       	ld	r22, Z
     de2:	71 81       	ldd	r23, Z+1	; 0x01
     de4:	26 17       	cp	r18, r22
     de6:	37 07       	cpc	r19, r23
     de8:	e8 f6       	brcc	.-70     	; 0xda4 <qtm_key_sensors_process+0x3fa>
     dea:	0c 81       	ldd	r16, Y+4	; 0x04
     dec:	1d 81       	ldd	r17, Y+5	; 0x05
     dee:	fa 01       	movw	r30, r20
     df0:	ee 0f       	add	r30, r30
     df2:	ff 1f       	adc	r31, r31
     df4:	e0 0f       	add	r30, r16
     df6:	f1 1f       	adc	r31, r17
     df8:	80 81       	ld	r24, Z
     dfa:	98 2f       	mov	r25, r24
     dfc:	97 7f       	andi	r25, 0xF7	; 247
     dfe:	a1 f1       	breq	.+104    	; 0xe68 <qtm_key_sensors_process+0x4be>
     e00:	85 38       	cpi	r24, 0x85	; 133
     e02:	11 f0       	breq	.+4      	; 0xe08 <qtm_key_sensors_process+0x45e>
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	b1 f5       	brne	.+108    	; 0xe74 <qtm_key_sensors_process+0x4ca>
     e08:	ee 80       	ldd	r14, Y+6	; 0x06
     e0a:	ff 80       	ldd	r15, Y+7	; 0x07
     e0c:	d7 01       	movw	r26, r14
     e0e:	a4 0f       	add	r26, r20
     e10:	b5 1f       	adc	r27, r21
     e12:	12 96       	adiw	r26, 0x02	; 2
     e14:	bc 90       	ld	r11, X
     e16:	bb 20       	and	r11, r11
     e18:	39 f1       	breq	.+78     	; 0xe68 <qtm_key_sensors_process+0x4be>
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	c1 2c       	mov	r12, r1
     e20:	86 17       	cp	r24, r22
     e22:	97 07       	cpc	r25, r23
     e24:	f8 f4       	brcc	.+62     	; 0xe64 <qtm_key_sensors_process+0x4ba>
     e26:	28 17       	cp	r18, r24
     e28:	39 07       	cpc	r19, r25
     e2a:	d1 f0       	breq	.+52     	; 0xe60 <qtm_key_sensors_process+0x4b6>
     e2c:	d8 9e       	mul	r13, r24
     e2e:	d0 01       	movw	r26, r0
     e30:	d9 9e       	mul	r13, r25
     e32:	b0 0d       	add	r27, r0
     e34:	11 24       	eor	r1, r1
     e36:	a0 0f       	add	r26, r16
     e38:	b1 1f       	adc	r27, r17
     e3a:	ac 91       	ld	r26, X
     e3c:	a4 30       	cpi	r26, 0x04	; 4
     e3e:	11 f0       	breq	.+4      	; 0xe44 <qtm_key_sensors_process+0x49a>
     e40:	a6 38       	cpi	r26, 0x86	; 134
     e42:	71 f4       	brne	.+28     	; 0xe60 <qtm_key_sensors_process+0x4b6>
     e44:	dc 01       	movw	r26, r24
     e46:	aa 0f       	add	r26, r26
     e48:	bb 1f       	adc	r27, r27
     e4a:	a8 0f       	add	r26, r24
     e4c:	b9 1f       	adc	r27, r25
     e4e:	ae 0d       	add	r26, r14
     e50:	bf 1d       	adc	r27, r15
     e52:	12 96       	adiw	r26, 0x02	; 2
     e54:	ac 91       	ld	r26, X
     e56:	ba 12       	cpse	r11, r26
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <qtm_key_sensors_process+0x4b6>
     e5a:	cb 01       	movw	r24, r22
     e5c:	cc 24       	eor	r12, r12
     e5e:	c3 94       	inc	r12
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	de cf       	rjmp	.-68     	; 0xe20 <qtm_key_sensors_process+0x476>
     e64:	c1 10       	cpse	r12, r1
     e66:	06 c0       	rjmp	.+12     	; 0xe74 <qtm_key_sensors_process+0x4ca>
     e68:	02 80       	ldd	r0, Z+2	; 0x02
     e6a:	f3 81       	ldd	r31, Z+3	; 0x03
     e6c:	e0 2d       	mov	r30, r0
     e6e:	80 81       	ld	r24, Z
     e70:	8e 7f       	andi	r24, 0xFE	; 254
     e72:	05 c0       	rjmp	.+10     	; 0xe7e <qtm_key_sensors_process+0x4d4>
     e74:	02 80       	ldd	r0, Z+2	; 0x02
     e76:	f3 81       	ldd	r31, Z+3	; 0x03
     e78:	e0 2d       	mov	r30, r0
     e7a:	80 81       	ld	r24, Z
     e7c:	81 60       	ori	r24, 0x01	; 1
     e7e:	80 83       	st	Z, r24
     e80:	2f 5f       	subi	r18, 0xFF	; 255
     e82:	3f 4f       	sbci	r19, 0xFF	; 255
     e84:	4d 5f       	subi	r20, 0xFD	; 253
     e86:	5f 4f       	sbci	r21, 0xFF	; 255
     e88:	a9 cf       	rjmp	.-174    	; 0xddc <qtm_key_sensors_process+0x432>
     e8a:	80 81       	ld	r24, Z
     e8c:	81 60       	ori	r24, 0x01	; 1
     e8e:	80 83       	st	Z, r24
     e90:	80 91 5f 3e 	lds	r24, 0x3E5F	; 0x803e5f <qtm_local_ms_timecount>
     e94:	90 91 60 3e 	lds	r25, 0x3E60	; 0x803e60 <qtm_local_ms_timecount+0x1>
     e98:	e8 81       	ld	r30, Y
     e9a:	f9 81       	ldd	r31, Y+1	; 0x01
     e9c:	21 81       	ldd	r18, Z+1	; 0x01
     e9e:	32 81       	ldd	r19, Z+2	; 0x02
     ea0:	a9 01       	movw	r20, r18
     ea2:	48 53       	subi	r20, 0x38	; 56
     ea4:	5f 4f       	sbci	r21, 0xFF	; 255
     ea6:	48 17       	cp	r20, r24
     ea8:	59 07       	cpc	r21, r25
     eaa:	38 f4       	brcc	.+14     	; 0xeba <qtm_key_sensors_process+0x510>
     eac:	82 1b       	sub	r24, r18
     eae:	93 0b       	sbc	r25, r19
     eb0:	aa 24       	eor	r10, r10
     eb2:	a3 94       	inc	r10
     eb4:	a3 e0       	ldi	r26, 0x03	; 3
     eb6:	ba 2e       	mov	r11, r26
     eb8:	44 c0       	rjmp	.+136    	; 0xf42 <qtm_key_sensors_process+0x598>
     eba:	82 17       	cp	r24, r18
     ebc:	93 07       	cpc	r25, r19
     ebe:	10 f0       	brcs	.+4      	; 0xec4 <qtm_key_sensors_process+0x51a>
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	04 c1       	rjmp	.+520    	; 0x10cc <qtm_key_sensors_process+0x722>
     ec4:	82 1b       	sub	r24, r18
     ec6:	93 0b       	sbc	r25, r19
     ec8:	01 97       	sbiw	r24, 0x01	; 1
     eca:	89 3c       	cpi	r24, 0xC9	; 201
     ecc:	91 05       	cpc	r25, r1
     ece:	c0 f3       	brcs	.-16     	; 0xec0 <qtm_key_sensors_process+0x516>
     ed0:	ef cf       	rjmp	.-34     	; 0xeb0 <qtm_key_sensors_process+0x506>
     ed2:	88 5c       	subi	r24, 0xC8	; 200
     ed4:	91 09       	sbc	r25, r1
     ed6:	e8 81       	ld	r30, Y
     ed8:	f9 81       	ldd	r31, Y+1	; 0x01
     eda:	21 81       	ldd	r18, Z+1	; 0x01
     edc:	32 81       	ldd	r19, Z+2	; 0x02
     ede:	28 53       	subi	r18, 0x38	; 56
     ee0:	3f 4f       	sbci	r19, 0xFF	; 255
     ee2:	21 83       	std	Z+1, r18	; 0x01
     ee4:	32 83       	std	Z+2, r19	; 0x02
     ee6:	23 81       	ldd	r18, Z+3	; 0x03
     ee8:	21 11       	cpse	r18, r1
     eea:	96 c0       	rjmp	.+300    	; 0x1018 <qtm_key_sensors_process+0x66e>
     eec:	24 81       	ldd	r18, Z+4	; 0x04
     eee:	22 23       	and	r18, r18
     ef0:	11 f0       	breq	.+4      	; 0xef6 <qtm_key_sensors_process+0x54c>
     ef2:	21 50       	subi	r18, 0x01	; 1
     ef4:	24 83       	std	Z+4, r18	; 0x04
     ef6:	e8 81       	ld	r30, Y
     ef8:	f9 81       	ldd	r31, Y+1	; 0x01
     efa:	25 81       	ldd	r18, Z+5	; 0x05
     efc:	22 23       	and	r18, r18
     efe:	11 f0       	breq	.+4      	; 0xf04 <qtm_key_sensors_process+0x55a>
     f00:	21 50       	subi	r18, 0x01	; 1
     f02:	25 83       	std	Z+5, r18	; 0x05
     f04:	8a 80       	ldd	r8, Y+2	; 0x02
     f06:	9b 80       	ldd	r9, Y+3	; 0x03
     f08:	d4 01       	movw	r26, r8
     f0a:	16 96       	adiw	r26, 0x06	; 6
     f0c:	2c 91       	ld	r18, X
     f0e:	16 97       	sbiw	r26, 0x06	; 6
     f10:	21 11       	cpse	r18, r1
     f12:	1b c0       	rjmp	.+54     	; 0xf4a <qtm_key_sensors_process+0x5a0>
     f14:	8a 80       	ldd	r8, Y+2	; 0x02
     f16:	9b 80       	ldd	r9, Y+3	; 0x03
     f18:	f4 01       	movw	r30, r8
     f1a:	27 81       	ldd	r18, Z+7	; 0x07
     f1c:	21 11       	cpse	r18, r1
     f1e:	48 c0       	rjmp	.+144    	; 0xfb0 <qtm_key_sensors_process+0x606>
     f20:	ea 81       	ldd	r30, Y+2	; 0x02
     f22:	fb 81       	ldd	r31, Y+3	; 0x03
     f24:	23 81       	ldd	r18, Z+3	; 0x03
     f26:	22 23       	and	r18, r18
     f28:	61 f0       	breq	.+24     	; 0xf42 <qtm_key_sensors_process+0x598>
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	a0 e0       	ldi	r26, 0x00	; 0
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	ea 81       	ldd	r30, Y+2	; 0x02
     f34:	fb 81       	ldd	r31, Y+3	; 0x03
     f36:	40 81       	ld	r20, Z
     f38:	51 81       	ldd	r21, Z+1	; 0x01
     f3a:	a4 17       	cp	r26, r20
     f3c:	b5 07       	cpc	r27, r21
     f3e:	08 f4       	brcc	.+2      	; 0xf42 <qtm_key_sensors_process+0x598>
     f40:	6e c0       	rjmp	.+220    	; 0x101e <qtm_key_sensors_process+0x674>
     f42:	89 3c       	cpi	r24, 0xC9	; 201
     f44:	91 05       	cpc	r25, r1
     f46:	28 f6       	brcc	.-118    	; 0xed2 <qtm_key_sensors_process+0x528>
     f48:	bb cf       	rjmp	.-138    	; 0xec0 <qtm_key_sensors_process+0x516>
     f4a:	08 81       	ld	r16, Y
     f4c:	19 81       	ldd	r17, Y+1	; 0x01
     f4e:	f8 01       	movw	r30, r16
     f50:	24 81       	ldd	r18, Z+4	; 0x04
     f52:	21 11       	cpse	r18, r1
     f54:	df cf       	rjmp	.-66     	; 0xf14 <qtm_key_sensors_process+0x56a>
     f56:	ed 90       	ld	r14, X+
     f58:	fc 90       	ld	r15, X
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	40 e0       	ldi	r20, 0x00	; 0
     f60:	50 e0       	ldi	r21, 0x00	; 0
     f62:	4e 15       	cp	r20, r14
     f64:	5f 05       	cpc	r21, r15
     f66:	f1 f0       	breq	.+60     	; 0xfa4 <qtm_key_sensors_process+0x5fa>
     f68:	ec 81       	ldd	r30, Y+4	; 0x04
     f6a:	fd 81       	ldd	r31, Y+5	; 0x05
     f6c:	e6 0f       	add	r30, r22
     f6e:	f7 1f       	adc	r31, r23
     f70:	20 81       	ld	r18, Z
     f72:	23 30       	cpi	r18, 0x03	; 3
     f74:	11 f0       	breq	.+4      	; 0xf7a <qtm_key_sensors_process+0x5d0>
     f76:	28 30       	cpi	r18, 0x08	; 8
     f78:	81 f4       	brne	.+32     	; 0xf9a <qtm_key_sensors_process+0x5f0>
     f7a:	24 81       	ldd	r18, Z+4	; 0x04
     f7c:	35 81       	ldd	r19, Z+5	; 0x05
     f7e:	c2 80       	ldd	r12, Z+2	; 0x02
     f80:	d3 80       	ldd	r13, Z+3	; 0x03
     f82:	d6 01       	movw	r26, r12
     f84:	11 96       	adiw	r26, 0x01	; 1
     f86:	cd 90       	ld	r12, X+
     f88:	dc 90       	ld	r13, X
     f8a:	12 97       	sbiw	r26, 0x02	; 2
     f8c:	2c 15       	cp	r18, r12
     f8e:	3d 05       	cpc	r19, r13
     f90:	20 f4       	brcc	.+8      	; 0xf9a <qtm_key_sensors_process+0x5f0>
     f92:	2f 5f       	subi	r18, 0xFF	; 255
     f94:	3f 4f       	sbci	r19, 0xFF	; 255
     f96:	24 83       	std	Z+4, r18	; 0x04
     f98:	35 83       	std	Z+5, r19	; 0x05
     f9a:	4f 5f       	subi	r20, 0xFF	; 255
     f9c:	5f 4f       	sbci	r21, 0xFF	; 255
     f9e:	6a 5f       	subi	r22, 0xFA	; 250
     fa0:	7f 4f       	sbci	r23, 0xFF	; 255
     fa2:	df cf       	rjmp	.-66     	; 0xf62 <qtm_key_sensors_process+0x5b8>
     fa4:	f4 01       	movw	r30, r8
     fa6:	26 81       	ldd	r18, Z+6	; 0x06
     fa8:	d8 01       	movw	r26, r16
     faa:	14 96       	adiw	r26, 0x04	; 4
     fac:	2c 93       	st	X, r18
     fae:	b2 cf       	rjmp	.-156    	; 0xf14 <qtm_key_sensors_process+0x56a>
     fb0:	08 81       	ld	r16, Y
     fb2:	19 81       	ldd	r17, Y+1	; 0x01
     fb4:	d8 01       	movw	r26, r16
     fb6:	15 96       	adiw	r26, 0x05	; 5
     fb8:	2c 91       	ld	r18, X
     fba:	21 11       	cpse	r18, r1
     fbc:	b1 cf       	rjmp	.-158    	; 0xf20 <qtm_key_sensors_process+0x576>
     fbe:	e0 80       	ld	r14, Z
     fc0:	f1 80       	ldd	r15, Z+1	; 0x01
     fc2:	60 e0       	ldi	r22, 0x00	; 0
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	50 e0       	ldi	r21, 0x00	; 0
     fca:	4e 15       	cp	r20, r14
     fcc:	5f 05       	cpc	r21, r15
     fce:	f1 f0       	breq	.+60     	; 0x100c <qtm_key_sensors_process+0x662>
     fd0:	ec 81       	ldd	r30, Y+4	; 0x04
     fd2:	fd 81       	ldd	r31, Y+5	; 0x05
     fd4:	e6 0f       	add	r30, r22
     fd6:	f7 1f       	adc	r31, r23
     fd8:	20 81       	ld	r18, Z
     fda:	23 30       	cpi	r18, 0x03	; 3
     fdc:	11 f0       	breq	.+4      	; 0xfe2 <qtm_key_sensors_process+0x638>
     fde:	28 30       	cpi	r18, 0x08	; 8
     fe0:	81 f4       	brne	.+32     	; 0x1002 <qtm_key_sensors_process+0x658>
     fe2:	24 81       	ldd	r18, Z+4	; 0x04
     fe4:	35 81       	ldd	r19, Z+5	; 0x05
     fe6:	c2 80       	ldd	r12, Z+2	; 0x02
     fe8:	d3 80       	ldd	r13, Z+3	; 0x03
     fea:	d6 01       	movw	r26, r12
     fec:	11 96       	adiw	r26, 0x01	; 1
     fee:	cd 90       	ld	r12, X+
     ff0:	dc 90       	ld	r13, X
     ff2:	12 97       	sbiw	r26, 0x02	; 2
     ff4:	c2 16       	cp	r12, r18
     ff6:	d3 06       	cpc	r13, r19
     ff8:	20 f4       	brcc	.+8      	; 0x1002 <qtm_key_sensors_process+0x658>
     ffa:	21 50       	subi	r18, 0x01	; 1
     ffc:	31 09       	sbc	r19, r1
     ffe:	24 83       	std	Z+4, r18	; 0x04
    1000:	35 83       	std	Z+5, r19	; 0x05
    1002:	4f 5f       	subi	r20, 0xFF	; 255
    1004:	5f 4f       	sbci	r21, 0xFF	; 255
    1006:	6a 5f       	subi	r22, 0xFA	; 250
    1008:	7f 4f       	sbci	r23, 0xFF	; 255
    100a:	df cf       	rjmp	.-66     	; 0xfca <qtm_key_sensors_process+0x620>
    100c:	f4 01       	movw	r30, r8
    100e:	27 81       	ldd	r18, Z+7	; 0x07
    1010:	d8 01       	movw	r26, r16
    1012:	15 96       	adiw	r26, 0x05	; 5
    1014:	2c 93       	st	X, r18
    1016:	84 cf       	rjmp	.-248    	; 0xf20 <qtm_key_sensors_process+0x576>
    1018:	21 50       	subi	r18, 0x01	; 1
    101a:	23 83       	std	Z+3, r18	; 0x03
    101c:	81 cf       	rjmp	.-254    	; 0xf20 <qtm_key_sensors_process+0x576>
    101e:	a9 01       	movw	r20, r18
    1020:	44 0f       	add	r20, r20
    1022:	55 1f       	adc	r21, r21
    1024:	ec 81       	ldd	r30, Y+4	; 0x04
    1026:	fd 81       	ldd	r31, Y+5	; 0x05
    1028:	e4 0f       	add	r30, r20
    102a:	f5 1f       	adc	r31, r21
    102c:	60 81       	ld	r22, Z
    102e:	65 38       	cpi	r22, 0x85	; 133
    1030:	09 f0       	breq	.+2      	; 0x1034 <qtm_key_sensors_process+0x68a>
    1032:	47 c0       	rjmp	.+142    	; 0x10c2 <qtm_key_sensors_process+0x718>
    1034:	61 81       	ldd	r22, Z+1	; 0x01
    1036:	66 23       	and	r22, r22
    1038:	19 f0       	breq	.+6      	; 0x1040 <qtm_key_sensors_process+0x696>
    103a:	61 50       	subi	r22, 0x01	; 1
    103c:	61 83       	std	Z+1, r22	; 0x01
    103e:	41 c0       	rjmp	.+130    	; 0x10c2 <qtm_key_sensors_process+0x718>
    1040:	a0 82       	st	Z, r10
    1042:	6c 81       	ldd	r22, Y+4	; 0x04
    1044:	7d 81       	ldd	r23, Y+5	; 0x05
    1046:	fb 01       	movw	r30, r22
    1048:	e4 0f       	add	r30, r20
    104a:	f5 1f       	adc	r31, r21
    104c:	02 80       	ldd	r0, Z+2	; 0x02
    104e:	f3 81       	ldd	r31, Z+3	; 0x03
    1050:	e0 2d       	mov	r30, r0
    1052:	b0 82       	st	Z, r11
    1054:	ee 81       	ldd	r30, Y+6	; 0x06
    1056:	ff 81       	ldd	r31, Y+7	; 0x07
    1058:	e2 0f       	add	r30, r18
    105a:	f3 1f       	adc	r31, r19
    105c:	d2 80       	ldd	r13, Z+2	; 0x02
    105e:	dd 20       	and	r13, r13
    1060:	81 f1       	breq	.+96     	; 0x10c2 <qtm_key_sensors_process+0x718>
    1062:	40 e0       	ldi	r20, 0x00	; 0
    1064:	50 e0       	ldi	r21, 0x00	; 0
    1066:	00 e0       	ldi	r16, 0x00	; 0
    1068:	10 e0       	ldi	r17, 0x00	; 0
    106a:	ea 81       	ldd	r30, Y+2	; 0x02
    106c:	fb 81       	ldd	r31, Y+3	; 0x03
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	06 17       	cp	r16, r22
    1074:	17 07       	cpc	r17, r23
    1076:	28 f5       	brcc	.+74     	; 0x10c2 <qtm_key_sensors_process+0x718>
    1078:	ee 81       	ldd	r30, Y+6	; 0x06
    107a:	ff 81       	ldd	r31, Y+7	; 0x07
    107c:	e4 0f       	add	r30, r20
    107e:	f5 1f       	adc	r31, r21
    1080:	62 81       	ldd	r22, Z+2	; 0x02
    1082:	d6 12       	cpse	r13, r22
    1084:	19 c0       	rjmp	.+50     	; 0x10b8 <qtm_key_sensors_process+0x70e>
    1086:	ba 01       	movw	r22, r20
    1088:	66 0f       	add	r22, r22
    108a:	77 1f       	adc	r23, r23
    108c:	ec 81       	ldd	r30, Y+4	; 0x04
    108e:	fd 81       	ldd	r31, Y+5	; 0x05
    1090:	4f 01       	movw	r8, r30
    1092:	86 0e       	add	r8, r22
    1094:	97 1e       	adc	r9, r23
    1096:	f4 01       	movw	r30, r8
    1098:	e2 80       	ldd	r14, Z+2	; 0x02
    109a:	f3 80       	ldd	r15, Z+3	; 0x03
    109c:	f7 01       	movw	r30, r14
    109e:	f0 80       	ld	r15, Z
    10a0:	f0 fe       	sbrs	r15, 0
    10a2:	0a c0       	rjmp	.+20     	; 0x10b8 <qtm_key_sensors_process+0x70e>
    10a4:	f4 01       	movw	r30, r8
    10a6:	a0 82       	st	Z, r10
    10a8:	ec 81       	ldd	r30, Y+4	; 0x04
    10aa:	fd 81       	ldd	r31, Y+5	; 0x05
    10ac:	e6 0f       	add	r30, r22
    10ae:	f7 1f       	adc	r31, r23
    10b0:	02 80       	ldd	r0, Z+2	; 0x02
    10b2:	f3 81       	ldd	r31, Z+3	; 0x03
    10b4:	e0 2d       	mov	r30, r0
    10b6:	b0 82       	st	Z, r11
    10b8:	0f 5f       	subi	r16, 0xFF	; 255
    10ba:	1f 4f       	sbci	r17, 0xFF	; 255
    10bc:	4d 5f       	subi	r20, 0xFD	; 253
    10be:	5f 4f       	sbci	r21, 0xFF	; 255
    10c0:	d4 cf       	rjmp	.-88     	; 0x106a <qtm_key_sensors_process+0x6c0>
    10c2:	11 96       	adiw	r26, 0x01	; 1
    10c4:	2d 5f       	subi	r18, 0xFD	; 253
    10c6:	3f 4f       	sbci	r19, 0xFF	; 255
    10c8:	34 cf       	rjmp	.-408    	; 0xf32 <qtm_key_sensors_process+0x588>
    10ca:	8b e0       	ldi	r24, 0x0B	; 11
    10cc:	df 91       	pop	r29
    10ce:	cf 91       	pop	r28
    10d0:	1f 91       	pop	r17
    10d2:	0f 91       	pop	r16
    10d4:	ff 90       	pop	r15
    10d6:	ef 90       	pop	r14
    10d8:	df 90       	pop	r13
    10da:	cf 90       	pop	r12
    10dc:	bf 90       	pop	r11
    10de:	af 90       	pop	r10
    10e0:	9f 90       	pop	r9
    10e2:	8f 90       	pop	r8
    10e4:	7f 90       	pop	r7
    10e6:	6f 90       	pop	r6
    10e8:	5f 90       	pop	r5
    10ea:	4f 90       	pop	r4
    10ec:	3f 90       	pop	r3
    10ee:	2f 90       	pop	r2
    10f0:	08 95       	ret

000010f2 <qtm_error_handler>:
    10f2:	95 e0       	ldi	r25, 0x05	; 5
    10f4:	90 93 63 3e 	sts	0x3E63, r25	; 0x803e63 <qtm_state>
    10f8:	e0 91 a1 3e 	lds	r30, 0x3EA1	; 0x803ea1 <qtm>
    10fc:	f0 91 a2 3e 	lds	r31, 0x3EA2	; 0x803ea2 <qtm+0x1>
    1100:	01 88       	ldd	r0, Z+17	; 0x11
    1102:	f2 89       	ldd	r31, Z+18	; 0x12
    1104:	e0 2d       	mov	r30, r0
    1106:	30 97       	sbiw	r30, 0x00	; 0
    1108:	09 f0       	breq	.+2      	; 0x110c <qtm_error_handler+0x1a>
    110a:	09 94       	ijmp
    110c:	ff cf       	rjmp	.-2      	; 0x110c <qtm_error_handler+0x1a>

0000110e <generic_callback_function>:
    110e:	e0 91 a1 3e 	lds	r30, 0x3EA1	; 0x803ea1 <qtm>
    1112:	f0 91 a2 3e 	lds	r31, 0x3EA2	; 0x803ea2 <qtm+0x1>
    1116:	03 88       	ldd	r0, Z+19	; 0x13
    1118:	f4 89       	ldd	r31, Z+20	; 0x14
    111a:	e0 2d       	mov	r30, r0
    111c:	30 97       	sbiw	r30, 0x00	; 0
    111e:	09 f0       	breq	.+2      	; 0x1122 <generic_callback_function+0x14>
    1120:	09 94       	ijmp
    1122:	80 e4       	ldi	r24, 0x40	; 64
    1124:	e6 cf       	rjmp	.-52     	; 0x10f2 <qtm_error_handler>

00001126 <qmt_get_binding_layer_ptr>:
    1126:	80 91 a1 3e 	lds	r24, 0x3EA1	; 0x803ea1 <qtm>
    112a:	90 91 a2 3e 	lds	r25, 0x3EA2	; 0x803ea2 <qtm+0x1>
    112e:	08 95       	ret

00001130 <qtm_binding_layer_init>:
    1130:	cf 93       	push	r28
    1132:	80 93 a1 3e 	sts	0x3EA1, r24	; 0x803ea1 <qtm>
    1136:	90 93 a2 3e 	sts	0x3EA2, r25	; 0x803ea2 <qtm+0x1>
    113a:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <qtm_state>
    113e:	85 30       	cpi	r24, 0x05	; 5
    1140:	39 f0       	breq	.+14     	; 0x1150 <qtm_binding_layer_init+0x20>
    1142:	82 30       	cpi	r24, 0x02	; 2
    1144:	28 f0       	brcs	.+10     	; 0x1150 <qtm_binding_layer_init+0x20>
    1146:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    114a:	88 23       	and	r24, r24
    114c:	71 f1       	breq	.+92     	; 0x11aa <qtm_binding_layer_init+0x7a>
    114e:	40 c0       	rjmp	.+128    	; 0x11d0 <qtm_binding_layer_init+0xa0>
    1150:	10 92 61 3e 	sts	0x3E61, r1	; 0x803e61 <errors>
    1154:	c0 e0       	ldi	r28, 0x00	; 0
    1156:	a0 91 a1 3e 	lds	r26, 0x3EA1	; 0x803ea1 <qtm>
    115a:	b0 91 a2 3e 	lds	r27, 0x3EA2	; 0x803ea2 <qtm+0x1>
    115e:	8c 2f       	mov	r24, r28
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	88 0f       	add	r24, r24
    1164:	99 1f       	adc	r25, r25
    1166:	11 96       	adiw	r26, 0x01	; 1
    1168:	ed 91       	ld	r30, X+
    116a:	fc 91       	ld	r31, X
    116c:	12 97       	sbiw	r26, 0x02	; 2
    116e:	e8 0f       	add	r30, r24
    1170:	f9 1f       	adc	r31, r25
    1172:	01 90       	ld	r0, Z+
    1174:	f0 81       	ld	r31, Z
    1176:	e0 2d       	mov	r30, r0
    1178:	30 97       	sbiw	r30, 0x00	; 0
    117a:	29 f3       	breq	.-54     	; 0x1146 <qtm_binding_layer_init+0x16>
    117c:	17 96       	adiw	r26, 0x07	; 7
    117e:	2d 91       	ld	r18, X+
    1180:	3c 91       	ld	r19, X
    1182:	18 97       	sbiw	r26, 0x08	; 8
    1184:	d9 01       	movw	r26, r18
    1186:	a8 0f       	add	r26, r24
    1188:	b9 1f       	adc	r27, r25
    118a:	8d 91       	ld	r24, X+
    118c:	9c 91       	ld	r25, X
    118e:	09 95       	icall
    1190:	88 23       	and	r24, r24
    1192:	29 f0       	breq	.+10     	; 0x119e <qtm_binding_layer_init+0x6e>
    1194:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    1198:	8f 5f       	subi	r24, 0xFF	; 255
    119a:	80 93 61 3e 	sts	0x3E61, r24	; 0x803e61 <errors>
    119e:	cf 5f       	subi	r28, 0xFF	; 255
    11a0:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    11a4:	88 23       	and	r24, r24
    11a6:	b9 f2       	breq	.-82     	; 0x1156 <qtm_binding_layer_init+0x26>
    11a8:	ce cf       	rjmp	.-100    	; 0x1146 <qtm_binding_layer_init+0x16>
    11aa:	82 e0       	ldi	r24, 0x02	; 2
    11ac:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    11b0:	e0 91 a1 3e 	lds	r30, 0x3EA1	; 0x803ea1 <qtm>
    11b4:	f0 91 a2 3e 	lds	r31, 0x3EA2	; 0x803ea2 <qtm+0x1>
    11b8:	07 84       	ldd	r0, Z+15	; 0x0f
    11ba:	f0 89       	ldd	r31, Z+16	; 0x10
    11bc:	e0 2d       	mov	r30, r0
    11be:	30 97       	sbiw	r30, 0x00	; 0
    11c0:	11 f0       	breq	.+4      	; 0x11c6 <qtm_binding_layer_init+0x96>
    11c2:	09 95       	icall
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <qtm_binding_layer_init+0xa6>
    11c6:	85 e0       	ldi	r24, 0x05	; 5
    11c8:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	01 c0       	rjmp	.+2      	; 0x11d2 <qtm_binding_layer_init+0xa2>
    11d0:	8f 5f       	subi	r24, 0xFF	; 255
    11d2:	80 93 61 3e 	sts	0x3E61, r24	; 0x803e61 <errors>
    11d6:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    11da:	88 23       	and	r24, r24
    11dc:	29 f0       	breq	.+10     	; 0x11e8 <qtm_binding_layer_init+0xb8>
    11de:	10 92 61 3e 	sts	0x3E61, r1	; 0x803e61 <errors>
    11e2:	80 e8       	ldi	r24, 0x80	; 128
    11e4:	cf 91       	pop	r28
    11e6:	85 cf       	rjmp	.-246    	; 0x10f2 <qtm_error_handler>
    11e8:	cf 91       	pop	r28
    11ea:	08 95       	ret

000011ec <qtm_lib_start_acquisition>:
    11ec:	1f 93       	push	r17
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	18 2f       	mov	r17, r24
    11f4:	a0 91 a1 3e 	lds	r26, 0x3EA1	; 0x803ea1 <qtm>
    11f8:	b0 91 a2 3e 	lds	r27, 0x3EA2	; 0x803ea2 <qtm+0x1>
    11fc:	15 96       	adiw	r26, 0x05	; 5
    11fe:	2d 91       	ld	r18, X+
    1200:	3c 91       	ld	r19, X
    1202:	16 97       	sbiw	r26, 0x06	; 6
    1204:	d0 e0       	ldi	r29, 0x00	; 0
    1206:	f9 01       	movw	r30, r18
    1208:	ed 0f       	add	r30, r29
    120a:	f1 1d       	adc	r31, r1
    120c:	ed 0f       	add	r30, r29
    120e:	f1 1d       	adc	r31, r1
    1210:	80 81       	ld	r24, Z
    1212:	91 81       	ldd	r25, Z+1	; 0x01
    1214:	89 2b       	or	r24, r25
    1216:	11 f0       	breq	.+4      	; 0x121c <qtm_lib_start_acquisition+0x30>
    1218:	df 5f       	subi	r29, 0xFF	; 255
    121a:	f5 cf       	rjmp	.-22     	; 0x1206 <qtm_lib_start_acquisition+0x1a>
    121c:	53 96       	adiw	r26, 0x13	; 19
    121e:	8d 91       	ld	r24, X+
    1220:	9c 91       	ld	r25, X
    1222:	54 97       	sbiw	r26, 0x14	; 20
    1224:	89 2b       	or	r24, r25
    1226:	49 f1       	breq	.+82     	; 0x127a <qtm_lib_start_acquisition+0x8e>
    1228:	81 2f       	mov	r24, r17
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	88 0f       	add	r24, r24
    122e:	99 1f       	adc	r25, r25
    1230:	f9 01       	movw	r30, r18
    1232:	e8 0f       	add	r30, r24
    1234:	f9 1f       	adc	r31, r25
    1236:	01 90       	ld	r0, Z+
    1238:	f0 81       	ld	r31, Z
    123a:	e0 2d       	mov	r30, r0
    123c:	30 97       	sbiw	r30, 0x00	; 0
    123e:	e9 f0       	breq	.+58     	; 0x127a <qtm_lib_start_acquisition+0x8e>
    1240:	1b 96       	adiw	r26, 0x0b	; 11
    1242:	2d 91       	ld	r18, X+
    1244:	3c 91       	ld	r19, X
    1246:	1c 97       	sbiw	r26, 0x0c	; 12
    1248:	d9 01       	movw	r26, r18
    124a:	a8 0f       	add	r26, r24
    124c:	b9 1f       	adc	r27, r25
    124e:	8d 91       	ld	r24, X+
    1250:	9c 91       	ld	r25, X
    1252:	00 97       	sbiw	r24, 0x00	; 0
    1254:	91 f0       	breq	.+36     	; 0x127a <qtm_lib_start_acquisition+0x8e>
    1256:	67 e8       	ldi	r22, 0x87	; 135
    1258:	78 e0       	ldi	r23, 0x08	; 8
    125a:	09 95       	icall
    125c:	c8 2f       	mov	r28, r24
    125e:	81 11       	cpse	r24, r1
    1260:	06 c0       	rjmp	.+12     	; 0x126e <qtm_lib_start_acquisition+0x82>
    1262:	83 e0       	ldi	r24, 0x03	; 3
    1264:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    1268:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <current_process_id>
    126c:	03 c0       	rjmp	.+6      	; 0x1274 <qtm_lib_start_acquisition+0x88>
    126e:	82 e0       	ldi	r24, 0x02	; 2
    1270:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    1274:	1d 17       	cp	r17, r29
    1276:	20 f0       	brcs	.+8      	; 0x1280 <qtm_lib_start_acquisition+0x94>
    1278:	01 c0       	rjmp	.+2      	; 0x127c <qtm_lib_start_acquisition+0x90>
    127a:	c2 e0       	ldi	r28, 0x02	; 2
    127c:	82 e8       	ldi	r24, 0x82	; 130
    127e:	39 df       	rcall	.-398    	; 0x10f2 <qtm_error_handler>
    1280:	8c 2f       	mov	r24, r28
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	1f 91       	pop	r17
    1288:	08 95       	ret

0000128a <qtm_lib_acq_process>:
    128a:	e0 91 a1 3e 	lds	r30, 0x3EA1	; 0x803ea1 <qtm>
    128e:	f0 91 a2 3e 	lds	r31, 0x3EA2	; 0x803ea2 <qtm+0x1>
    1292:	05 84       	ldd	r0, Z+13	; 0x0d
    1294:	f6 85       	ldd	r31, Z+14	; 0x0e
    1296:	e0 2d       	mov	r30, r0
    1298:	09 94       	ijmp

0000129a <qtm_lib_post_process>:
    129a:	1f 93       	push	r17
    129c:	cf 93       	push	r28
    129e:	df 93       	push	r29
    12a0:	1f 92       	push	r1
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	19 82       	std	Y+1, r1	; 0x01
    12a8:	e0 91 a1 3e 	lds	r30, 0x3EA1	; 0x803ea1 <qtm>
    12ac:	f0 91 a2 3e 	lds	r31, 0x3EA2	; 0x803ea2 <qtm+0x1>
    12b0:	05 88       	ldd	r0, Z+21	; 0x15
    12b2:	f6 89       	ldd	r31, Z+22	; 0x16
    12b4:	e0 2d       	mov	r30, r0
    12b6:	30 97       	sbiw	r30, 0x00	; 0
    12b8:	49 f0       	breq	.+18     	; 0x12cc <qtm_lib_post_process+0x32>
    12ba:	82 e0       	ldi	r24, 0x02	; 2
    12bc:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    12c0:	ce 01       	movw	r24, r28
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	09 95       	icall
    12c6:	83 e0       	ldi	r24, 0x03	; 3
    12c8:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    12cc:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    12d0:	81 11       	cpse	r24, r1
    12d2:	2c c0       	rjmp	.+88     	; 0x132c <qtm_lib_post_process+0x92>
    12d4:	19 81       	ldd	r17, Y+1	; 0x01
    12d6:	11 11       	cpse	r17, r1
    12d8:	29 c0       	rjmp	.+82     	; 0x132c <qtm_lib_post_process+0x92>
    12da:	84 e0       	ldi	r24, 0x04	; 4
    12dc:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    12e0:	a0 91 a1 3e 	lds	r26, 0x3EA1	; 0x803ea1 <qtm>
    12e4:	b0 91 a2 3e 	lds	r27, 0x3EA2	; 0x803ea2 <qtm+0x1>
    12e8:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <current_process_id>
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	88 0f       	add	r24, r24
    12f0:	99 1f       	adc	r25, r25
    12f2:	13 96       	adiw	r26, 0x03	; 3
    12f4:	ed 91       	ld	r30, X+
    12f6:	fc 91       	ld	r31, X
    12f8:	14 97       	sbiw	r26, 0x04	; 4
    12fa:	e8 0f       	add	r30, r24
    12fc:	f9 1f       	adc	r31, r25
    12fe:	01 90       	ld	r0, Z+
    1300:	f0 81       	ld	r31, Z
    1302:	e0 2d       	mov	r30, r0
    1304:	19 96       	adiw	r26, 0x09	; 9
    1306:	2d 91       	ld	r18, X+
    1308:	3c 91       	ld	r19, X
    130a:	1a 97       	sbiw	r26, 0x0a	; 10
    130c:	30 97       	sbiw	r30, 0x00	; 0
    130e:	81 f0       	breq	.+32     	; 0x1330 <qtm_lib_post_process+0x96>
    1310:	d9 01       	movw	r26, r18
    1312:	a8 0f       	add	r26, r24
    1314:	b9 1f       	adc	r27, r25
    1316:	8d 91       	ld	r24, X+
    1318:	9c 91       	ld	r25, X
    131a:	09 95       	icall
    131c:	81 11       	cpse	r24, r1
    131e:	3d c0       	rjmp	.+122    	; 0x139a <qtm_lib_post_process+0x100>
    1320:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <current_process_id>
    1324:	8f 5f       	subi	r24, 0xFF	; 255
    1326:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <current_process_id>
    132a:	da cf       	rjmp	.-76     	; 0x12e0 <qtm_lib_post_process+0x46>
    132c:	10 e0       	ldi	r17, 0x00	; 0
    132e:	3c c0       	rjmp	.+120    	; 0x13a8 <qtm_lib_post_process+0x10e>
    1330:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <current_process_id>
    1334:	f9 01       	movw	r30, r18
    1336:	e1 0f       	add	r30, r17
    1338:	f1 1d       	adc	r31, r1
    133a:	e1 0f       	add	r30, r17
    133c:	f1 1d       	adc	r31, r1
    133e:	01 90       	ld	r0, Z+
    1340:	f0 81       	ld	r31, Z
    1342:	e0 2d       	mov	r30, r0
    1344:	30 97       	sbiw	r30, 0x00	; 0
    1346:	59 f0       	breq	.+22     	; 0x135e <qtm_lib_post_process+0xc4>
    1348:	01 90       	ld	r0, Z+
    134a:	f0 81       	ld	r31, Z
    134c:	e0 2d       	mov	r30, r0
    134e:	80 81       	ld	r24, Z
    1350:	87 ff       	sbrs	r24, 7
    1352:	03 c0       	rjmp	.+6      	; 0x135a <qtm_lib_post_process+0xc0>
    1354:	9c 91       	ld	r25, X
    1356:	94 60       	ori	r25, 0x04	; 4
    1358:	9c 93       	st	X, r25
    135a:	1f 5f       	subi	r17, 0xFF	; 255
    135c:	eb cf       	rjmp	.-42     	; 0x1334 <qtm_lib_post_process+0x9a>
    135e:	10 93 62 3e 	sts	0x3E62, r17	; 0x803e62 <current_process_id>
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <qtm_state>
    1368:	57 96       	adiw	r26, 0x17	; 23
    136a:	ed 91       	ld	r30, X+
    136c:	fc 91       	ld	r31, X
    136e:	58 97       	sbiw	r26, 0x18	; 24
    1370:	30 97       	sbiw	r30, 0x00	; 0
    1372:	11 f0       	breq	.+4      	; 0x1378 <qtm_lib_post_process+0xde>
    1374:	09 95       	icall
    1376:	05 c0       	rjmp	.+10     	; 0x1382 <qtm_lib_post_process+0xe8>
    1378:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    137c:	8f 5f       	subi	r24, 0xFF	; 255
    137e:	80 93 61 3e 	sts	0x3E61, r24	; 0x803e61 <errors>
    1382:	10 e0       	ldi	r17, 0x00	; 0
    1384:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    1388:	88 23       	and	r24, r24
    138a:	71 f0       	breq	.+28     	; 0x13a8 <qtm_lib_post_process+0x10e>
    138c:	10 92 61 3e 	sts	0x3E61, r1	; 0x803e61 <errors>
    1390:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <current_process_id>
    1394:	80 64       	ori	r24, 0x40	; 64
    1396:	ad de       	rcall	.-678    	; 0x10f2 <qtm_error_handler>
    1398:	07 c0       	rjmp	.+14     	; 0x13a8 <qtm_lib_post_process+0x10e>
    139a:	80 91 61 3e 	lds	r24, 0x3E61	; 0x803e61 <errors>
    139e:	8f 5f       	subi	r24, 0xFF	; 255
    13a0:	80 93 61 3e 	sts	0x3E61, r24	; 0x803e61 <errors>
    13a4:	13 e0       	ldi	r17, 0x03	; 3
    13a6:	ee cf       	rjmp	.-36     	; 0x1384 <qtm_lib_post_process+0xea>
    13a8:	81 2f       	mov	r24, r17
    13aa:	0f 90       	pop	r0
    13ac:	df 91       	pop	r29
    13ae:	cf 91       	pop	r28
    13b0:	1f 91       	pop	r17
    13b2:	08 95       	ret

000013b4 <select_next_channel_to_measure>:
    13b4:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <current_measure_channel>
    13b8:	90 91 68 3e 	lds	r25, 0x3E68	; 0x803e68 <current_measure_channel+0x1>
    13bc:	a0 91 a3 3e 	lds	r26, 0x3EA3	; 0x803ea3 <qtm_acquisition_control_working_set_ptr>
    13c0:	b0 91 a4 3e 	lds	r27, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr+0x1>
    13c4:	ed 91       	ld	r30, X+
    13c6:	fc 91       	ld	r31, X
    13c8:	11 97       	sbiw	r26, 0x01	; 1
    13ca:	40 81       	ld	r20, Z
    13cc:	51 81       	ldd	r21, Z+1	; 0x01
    13ce:	25 e0       	ldi	r18, 0x05	; 5
    13d0:	28 9f       	mul	r18, r24
    13d2:	b0 01       	movw	r22, r0
    13d4:	29 9f       	mul	r18, r25
    13d6:	70 0d       	add	r23, r0
    13d8:	11 24       	eor	r1, r1
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	84 17       	cp	r24, r20
    13e0:	95 07       	cpc	r25, r21
    13e2:	a8 f4       	brcc	.+42     	; 0x140e <select_next_channel_to_measure+0x5a>
    13e4:	14 96       	adiw	r26, 0x04	; 4
    13e6:	ed 91       	ld	r30, X+
    13e8:	fc 91       	ld	r31, X
    13ea:	15 97       	sbiw	r26, 0x05	; 5
    13ec:	e2 0f       	add	r30, r18
    13ee:	f3 1f       	adc	r31, r19
    13f0:	e6 0f       	add	r30, r22
    13f2:	f7 1f       	adc	r31, r23
    13f4:	e0 81       	ld	r30, Z
    13f6:	2b 5f       	subi	r18, 0xFB	; 251
    13f8:	3f 4f       	sbci	r19, 0xFF	; 255
    13fa:	e0 fd       	sbrc	r30, 0
    13fc:	02 c0       	rjmp	.+4      	; 0x1402 <select_next_channel_to_measure+0x4e>
    13fe:	01 96       	adiw	r24, 0x01	; 1
    1400:	ee cf       	rjmp	.-36     	; 0x13de <select_next_channel_to_measure+0x2a>
    1402:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <current_measure_channel>
    1406:	90 93 68 3e 	sts	0x3E68, r25	; 0x803e68 <current_measure_channel+0x1>
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	08 95       	ret
    140e:	10 92 67 3e 	sts	0x3E67, r1	; 0x803e67 <current_measure_channel>
    1412:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel+0x1>
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	08 95       	ret

0000141a <qtm_measure_node>:
    141a:	bc 01       	movw	r22, r24
    141c:	e0 91 a3 3e 	lds	r30, 0x3EA3	; 0x803ea3 <qtm_acquisition_control_working_set_ptr>
    1420:	f0 91 a4 3e 	lds	r31, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr+0x1>
    1424:	86 e0       	ldi	r24, 0x06	; 6
    1426:	86 9f       	mul	r24, r22
    1428:	90 01       	movw	r18, r0
    142a:	87 9f       	mul	r24, r23
    142c:	30 0d       	add	r19, r0
    142e:	11 24       	eor	r1, r1
    1430:	a2 81       	ldd	r26, Z+2	; 0x02
    1432:	b3 81       	ldd	r27, Z+3	; 0x03
    1434:	a2 0f       	add	r26, r18
    1436:	b3 1f       	adc	r27, r19
    1438:	11 96       	adiw	r26, 0x01	; 1
    143a:	8c 91       	ld	r24, X
    143c:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    1440:	a2 81       	ldd	r26, Z+2	; 0x02
    1442:	b3 81       	ldd	r27, Z+3	; 0x03
    1444:	a2 0f       	add	r26, r18
    1446:	b3 1f       	adc	r27, r19
    1448:	8c 91       	ld	r24, X
    144a:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    144e:	95 e0       	ldi	r25, 0x05	; 5
    1450:	96 9f       	mul	r25, r22
    1452:	a0 01       	movw	r20, r0
    1454:	97 9f       	mul	r25, r23
    1456:	50 0d       	add	r21, r0
    1458:	11 24       	eor	r1, r1
    145a:	a4 81       	ldd	r26, Z+4	; 0x04
    145c:	b5 81       	ldd	r27, Z+5	; 0x05
    145e:	a4 0f       	add	r26, r20
    1460:	b5 1f       	adc	r27, r21
    1462:	13 96       	adiw	r26, 0x03	; 3
    1464:	8c 91       	ld	r24, X
    1466:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    146a:	a4 81       	ldd	r26, Z+4	; 0x04
    146c:	b5 81       	ldd	r27, Z+5	; 0x05
    146e:	a4 0f       	add	r26, r20
    1470:	b5 1f       	adc	r27, r21
    1472:	14 96       	adiw	r26, 0x04	; 4
    1474:	8c 91       	ld	r24, X
    1476:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    147a:	a4 81       	ldd	r26, Z+4	; 0x04
    147c:	b5 81       	ldd	r27, Z+5	; 0x05
    147e:	a4 0f       	add	r26, r20
    1480:	b5 1f       	adc	r27, r21
    1482:	8c 91       	ld	r24, X
    1484:	81 fd       	sbrc	r24, 1
    1486:	9c 93       	st	X, r25
    1488:	84 81       	ldd	r24, Z+4	; 0x04
    148a:	95 81       	ldd	r25, Z+5	; 0x05
    148c:	dc 01       	movw	r26, r24
    148e:	a4 0f       	add	r26, r20
    1490:	b5 1f       	adc	r27, r21
    1492:	8c 91       	ld	r24, X
    1494:	8c 71       	andi	r24, 0x1C	; 28
    1496:	69 f4       	brne	.+26     	; 0x14b2 <qtm_measure_node+0x98>
    1498:	a2 81       	ldd	r26, Z+2	; 0x02
    149a:	b3 81       	ldd	r27, Z+3	; 0x03
    149c:	a2 0f       	add	r26, r18
    149e:	b3 1f       	adc	r27, r19
    14a0:	14 96       	adiw	r26, 0x04	; 4
    14a2:	ac 91       	ld	r26, X
    14a4:	a2 95       	swap	r26
    14a6:	af 70       	andi	r26, 0x0F	; 15
    14a8:	b0 e0       	ldi	r27, 0x00	; 0
    14aa:	a8 53       	subi	r26, 0x38	; 56
    14ac:	b5 46       	sbci	r27, 0x65	; 101
    14ae:	8c 91       	ld	r24, X
    14b0:	01 c0       	rjmp	.+2      	; 0x14b4 <qtm_measure_node+0x9a>
    14b2:	8f e3       	ldi	r24, 0x3F	; 63
    14b4:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    14b8:	a2 81       	ldd	r26, Z+2	; 0x02
    14ba:	b3 81       	ldd	r27, Z+3	; 0x03
    14bc:	a2 0f       	add	r26, r18
    14be:	b3 1f       	adc	r27, r19
    14c0:	12 96       	adiw	r26, 0x02	; 2
    14c2:	8c 91       	ld	r24, X
    14c4:	8b 31       	cpi	r24, 0x1B	; 27
    14c6:	10 f4       	brcc	.+4      	; 0x14cc <qtm_measure_node+0xb2>
    14c8:	8c 5f       	subi	r24, 0xFC	; 252
    14ca:	01 c0       	rjmp	.+2      	; 0x14ce <qtm_measure_node+0xb4>
    14cc:	8f e1       	ldi	r24, 0x1F	; 31
    14ce:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    14d2:	a2 81       	ldd	r26, Z+2	; 0x02
    14d4:	b3 81       	ldd	r27, Z+3	; 0x03
    14d6:	a2 0f       	add	r26, r18
    14d8:	b3 1f       	adc	r27, r19
    14da:	15 96       	adiw	r26, 0x05	; 5
    14dc:	8c 91       	ld	r24, X
    14de:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    14e2:	a2 81       	ldd	r26, Z+2	; 0x02
    14e4:	b3 81       	ldd	r27, Z+3	; 0x03
    14e6:	a2 0f       	add	r26, r18
    14e8:	b3 1f       	adc	r27, r19
    14ea:	13 96       	adiw	r26, 0x03	; 3
    14ec:	8c 91       	ld	r24, X
    14ee:	82 95       	swap	r24
    14f0:	8f 70       	andi	r24, 0x0F	; 15
    14f2:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    14f6:	82 81       	ldd	r24, Z+2	; 0x02
    14f8:	93 81       	ldd	r25, Z+3	; 0x03
    14fa:	fc 01       	movw	r30, r24
    14fc:	e2 0f       	add	r30, r18
    14fe:	f3 1f       	adc	r31, r19
    1500:	83 81       	ldd	r24, Z+3	; 0x03
    1502:	8f 70       	andi	r24, 0x0F	; 15
    1504:	80 61       	ori	r24, 0x10	; 16
    1506:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    150a:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    150e:	83 60       	ori	r24, 0x03	; 3
    1510:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1514:	81 e8       	ldi	r24, 0x81	; 129
    1516:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    1520:	08 95       	ret

00001522 <qtm_acquisition_process>:
    1522:	3f 92       	push	r3
    1524:	4f 92       	push	r4
    1526:	5f 92       	push	r5
    1528:	6f 92       	push	r6
    152a:	7f 92       	push	r7
    152c:	8f 92       	push	r8
    152e:	9f 92       	push	r9
    1530:	af 92       	push	r10
    1532:	bf 92       	push	r11
    1534:	cf 92       	push	r12
    1536:	df 92       	push	r13
    1538:	ef 92       	push	r14
    153a:	ff 92       	push	r15
    153c:	0f 93       	push	r16
    153e:	1f 93       	push	r17
    1540:	cf 93       	push	r28
    1542:	df 93       	push	r29
    1544:	80 91 66 3e 	lds	r24, 0x3E66	; 0x803e66 <touch_seq_lib_state>
    1548:	88 23       	and	r24, r24
    154a:	09 f4       	brne	.+2      	; 0x154e <qtm_acquisition_process+0x2c>
    154c:	48 c1       	rjmp	.+656    	; 0x17de <qtm_acquisition_process+0x2bc>
    154e:	a0 91 a3 3e 	lds	r26, 0x3EA3	; 0x803ea3 <qtm_acquisition_control_working_set_ptr>
    1552:	b0 91 a4 3e 	lds	r27, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr+0x1>
    1556:	c0 90 a5 3e 	lds	r12, 0x3EA5	; 0x803ea5 <qtm_raw_data_measurements_ptr>
    155a:	d0 90 a6 3e 	lds	r13, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr+0x1>
    155e:	00 e0       	ldi	r16, 0x00	; 0
    1560:	10 e0       	ldi	r17, 0x00	; 0
    1562:	60 e0       	ldi	r22, 0x00	; 0
    1564:	70 e0       	ldi	r23, 0x00	; 0
    1566:	e1 2c       	mov	r14, r1
    1568:	f1 2c       	mov	r15, r1
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	33 24       	eor	r3, r3
    156e:	33 94       	inc	r3
    1570:	d1 e8       	ldi	r29, 0x81	; 129
    1572:	4d 2e       	mov	r4, r29
    1574:	88 24       	eor	r8, r8
    1576:	8a 94       	dec	r8
    1578:	99 24       	eor	r9, r9
    157a:	93 94       	inc	r9
    157c:	6d 90       	ld	r6, X+
    157e:	7c 90       	ld	r7, X
    1580:	11 97       	sbiw	r26, 0x01	; 1
    1582:	f3 01       	movw	r30, r6
    1584:	20 81       	ld	r18, Z
    1586:	31 81       	ldd	r19, Z+1	; 0x01
    1588:	e2 16       	cp	r14, r18
    158a:	f3 06       	cpc	r15, r19
    158c:	08 f0       	brcs	.+2      	; 0x1590 <qtm_acquisition_process+0x6e>
    158e:	23 c1       	rjmp	.+582    	; 0x17d6 <qtm_acquisition_process+0x2b4>
    1590:	e6 01       	movw	r28, r12
    1592:	29 91       	ld	r18, Y+
    1594:	39 91       	ld	r19, Y+
    1596:	6e 01       	movw	r12, r28
    1598:	14 96       	adiw	r26, 0x04	; 4
    159a:	ed 91       	ld	r30, X+
    159c:	fc 91       	ld	r31, X
    159e:	15 97       	sbiw	r26, 0x05	; 5
    15a0:	e6 0f       	add	r30, r22
    15a2:	f7 1f       	adc	r31, r23
    15a4:	40 81       	ld	r20, Z
    15a6:	4c 71       	andi	r20, 0x1C	; 28
    15a8:	50 e0       	ldi	r21, 0x00	; 0
    15aa:	56 95       	lsr	r21
    15ac:	47 95       	ror	r20
    15ae:	56 95       	lsr	r21
    15b0:	47 95       	ror	r20
    15b2:	41 15       	cp	r20, r1
    15b4:	51 05       	cpc	r21, r1
    15b6:	21 f0       	breq	.+8      	; 0x15c0 <qtm_acquisition_process+0x9e>
    15b8:	41 30       	cpi	r20, 0x01	; 1
    15ba:	51 05       	cpc	r21, r1
    15bc:	b9 f0       	breq	.+46     	; 0x15ec <qtm_acquisition_process+0xca>
    15be:	02 c1       	rjmp	.+516    	; 0x17c4 <qtm_acquisition_process+0x2a2>
    15c0:	12 96       	adiw	r26, 0x02	; 2
    15c2:	cd 91       	ld	r28, X+
    15c4:	dc 91       	ld	r29, X
    15c6:	13 97       	sbiw	r26, 0x03	; 3
    15c8:	c0 0f       	add	r28, r16
    15ca:	d1 1f       	adc	r29, r17
    15cc:	4c 81       	ldd	r20, Y+4	; 0x04
    15ce:	4f 70       	andi	r20, 0x0F	; 15
    15d0:	9d 81       	ldd	r25, Y+5	; 0x05
    15d2:	49 17       	cp	r20, r25
    15d4:	10 f4       	brcc	.+4      	; 0x15da <qtm_acquisition_process+0xb8>
    15d6:	94 1b       	sub	r25, r20
    15d8:	01 c0       	rjmp	.+2      	; 0x15dc <qtm_acquisition_process+0xba>
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <qtm_acquisition_process+0xc0>
    15de:	36 95       	lsr	r19
    15e0:	27 95       	ror	r18
    15e2:	9a 95       	dec	r25
    15e4:	e2 f7       	brpl	.-8      	; 0x15de <qtm_acquisition_process+0xbc>
    15e6:	21 83       	std	Z+1, r18	; 0x01
    15e8:	32 83       	std	Z+2, r19	; 0x02
    15ea:	ed c0       	rjmp	.+474    	; 0x17c6 <qtm_acquisition_process+0x2a4>
    15ec:	12 96       	adiw	r26, 0x02	; 2
    15ee:	4d 91       	ld	r20, X+
    15f0:	5c 91       	ld	r21, X
    15f2:	13 97       	sbiw	r26, 0x03	; 3
    15f4:	40 0f       	add	r20, r16
    15f6:	51 1f       	adc	r21, r17
    15f8:	ea 01       	movw	r28, r20
    15fa:	0d 80       	ldd	r0, Y+5	; 0x05
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <qtm_acquisition_process+0xe0>
    15fe:	36 95       	lsr	r19
    1600:	27 95       	ror	r18
    1602:	0a 94       	dec	r0
    1604:	e2 f7       	brpl	.-8      	; 0x15fe <qtm_acquisition_process+0xdc>
    1606:	21 83       	std	Z+1, r18	; 0x01
    1608:	32 83       	std	Z+2, r19	; 0x02
    160a:	a3 80       	ldd	r10, Z+3	; 0x03
    160c:	b4 80       	ldd	r11, Z+4	; 0x04
    160e:	21 15       	cp	r18, r1
    1610:	d2 e0       	ldi	r29, 0x02	; 2
    1612:	3d 07       	cpc	r19, r29
    1614:	20 f0       	brcs	.+8      	; 0x161e <qtm_acquisition_process+0xfc>
    1616:	2f 5f       	subi	r18, 0xFF	; 255
    1618:	31 40       	sbci	r19, 0x01	; 1
    161a:	91 e0       	ldi	r25, 0x01	; 1
    161c:	05 c0       	rjmp	.+10     	; 0x1628 <qtm_acquisition_process+0x106>
    161e:	a4 01       	movw	r20, r8
    1620:	42 1b       	sub	r20, r18
    1622:	53 0b       	sbc	r21, r19
    1624:	9a 01       	movw	r18, r20
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	e3 01       	movw	r28, r6
    162a:	5a 80       	ldd	r5, Y+2	; 0x02
    162c:	d0 e4       	ldi	r29, 0x40	; 64
    162e:	5d 12       	cpse	r5, r29
    1630:	05 c0       	rjmp	.+10     	; 0x163c <qtm_acquisition_process+0x11a>
    1632:	36 95       	lsr	r19
    1634:	27 95       	ror	r18
    1636:	99 23       	and	r25, r25
    1638:	19 f0       	breq	.+6      	; 0x1640 <qtm_acquisition_process+0x11e>
    163a:	09 c0       	rjmp	.+18     	; 0x164e <qtm_acquisition_process+0x12c>
    163c:	99 23       	and	r25, r25
    163e:	39 f0       	breq	.+14     	; 0x164e <qtm_acquisition_process+0x12c>
    1640:	4f ef       	ldi	r20, 0xFF	; 255
    1642:	a4 16       	cp	r10, r20
    1644:	b4 06       	cpc	r11, r20
    1646:	31 f4       	brne	.+12     	; 0x1654 <qtm_acquisition_process+0x132>
    1648:	40 82       	st	Z, r4
    164a:	8e e0       	ldi	r24, 0x0E	; 14
    164c:	07 c0       	rjmp	.+14     	; 0x165c <qtm_acquisition_process+0x13a>
    164e:	77 24       	eor	r7, r7
    1650:	73 94       	inc	r7
    1652:	01 c0       	rjmp	.+2      	; 0x1656 <qtm_acquisition_process+0x134>
    1654:	71 2c       	mov	r7, r1
    1656:	2a 30       	cpi	r18, 0x0A	; 10
    1658:	31 05       	cpc	r19, r1
    165a:	90 f4       	brcc	.+36     	; 0x1680 <qtm_acquisition_process+0x15e>
    165c:	14 96       	adiw	r26, 0x04	; 4
    165e:	ed 91       	ld	r30, X+
    1660:	fc 91       	ld	r31, X
    1662:	15 97       	sbiw	r26, 0x05	; 5
    1664:	e6 0f       	add	r30, r22
    1666:	f7 1f       	adc	r31, r23
    1668:	90 81       	ld	r25, Z
    166a:	97 ff       	sbrs	r25, 7
    166c:	30 82       	st	Z, r3
    166e:	14 96       	adiw	r26, 0x04	; 4
    1670:	ed 91       	ld	r30, X+
    1672:	fc 91       	ld	r31, X
    1674:	15 97       	sbiw	r26, 0x05	; 5
    1676:	e6 0f       	add	r30, r22
    1678:	f7 1f       	adc	r31, r23
    167a:	a3 82       	std	Z+3, r10	; 0x03
    167c:	b4 82       	std	Z+4, r11	; 0x04
    167e:	a3 c0       	rjmp	.+326    	; 0x17c6 <qtm_acquisition_process+0x2a4>
    1680:	e5 01       	movw	r28, r10
    1682:	cd 2f       	mov	r28, r29
    1684:	dd 27       	eor	r29, r29
    1686:	c2 95       	swap	r28
    1688:	cf 70       	andi	r28, 0x0F	; 15
    168a:	9c 2f       	mov	r25, r28
    168c:	a5 01       	movw	r20, r10
    168e:	44 27       	eor	r20, r20
    1690:	5f 70       	andi	r21, 0x0F	; 15
    1692:	65 2e       	mov	r6, r21
    1694:	a5 01       	movw	r20, r10
    1696:	40 7f       	andi	r20, 0xF0	; 240
    1698:	55 27       	eor	r21, r21
    169a:	52 95       	swap	r21
    169c:	42 95       	swap	r20
    169e:	4f 70       	andi	r20, 0x0F	; 15
    16a0:	45 27       	eor	r20, r21
    16a2:	5f 70       	andi	r21, 0x0F	; 15
    16a4:	45 27       	eor	r20, r21
    16a6:	5a 2d       	mov	r21, r10
    16a8:	5f 70       	andi	r21, 0x0F	; 15
    16aa:	a5 2e       	mov	r10, r21
    16ac:	c4 30       	cpi	r28, 0x04	; 4
    16ae:	30 f0       	brcs	.+12     	; 0x16bc <qtm_acquisition_process+0x19a>
    16b0:	93 70       	andi	r25, 0x03	; 3
    16b2:	d6 95       	lsr	r29
    16b4:	c7 95       	ror	r28
    16b6:	d6 95       	lsr	r29
    16b8:	c7 95       	ror	r28
    16ba:	9c 0f       	add	r25, r28
    16bc:	71 10       	cpse	r7, r1
    16be:	3c c0       	rjmp	.+120    	; 0x1738 <qtm_acquisition_process+0x216>
    16c0:	50 e8       	ldi	r21, 0x80	; 128
    16c2:	55 0d       	add	r21, r5
    16c4:	52 30       	cpi	r21, 0x02	; 2
    16c6:	10 f4       	brcc	.+4      	; 0x16cc <qtm_acquisition_process+0x1aa>
    16c8:	56 e0       	ldi	r21, 0x06	; 6
    16ca:	07 c0       	rjmp	.+14     	; 0x16da <qtm_acquisition_process+0x1b8>
    16cc:	53 e0       	ldi	r21, 0x03	; 3
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <qtm_acquisition_process+0x1b8>
    16d0:	95 17       	cp	r25, r21
    16d2:	68 f4       	brcc	.+26     	; 0x16ee <qtm_acquisition_process+0x1cc>
    16d4:	9f 5f       	subi	r25, 0xFF	; 255
    16d6:	2f 5c       	subi	r18, 0xCF	; 207
    16d8:	31 09       	sbc	r19, r1
    16da:	20 3d       	cpi	r18, 0xD0	; 208
    16dc:	31 05       	cpc	r19, r1
    16de:	c0 f7       	brcc	.-16     	; 0x16d0 <qtm_acquisition_process+0x1ae>
    16e0:	06 c0       	rjmp	.+12     	; 0x16ee <qtm_acquisition_process+0x1cc>
    16e2:	cf e0       	ldi	r28, 0x0F	; 15
    16e4:	6c 16       	cp	r6, r28
    16e6:	49 f0       	breq	.+18     	; 0x16fa <qtm_acquisition_process+0x1d8>
    16e8:	63 94       	inc	r6
    16ea:	25 51       	subi	r18, 0x15	; 21
    16ec:	31 09       	sbc	r19, r1
    16ee:	26 31       	cpi	r18, 0x16	; 22
    16f0:	31 05       	cpc	r19, r1
    16f2:	b8 f7       	brcc	.-18     	; 0x16e2 <qtm_acquisition_process+0x1c0>
    16f4:	df e0       	ldi	r29, 0x0F	; 15
    16f6:	6d 12       	cpse	r6, r29
    16f8:	0e c0       	rjmp	.+28     	; 0x1716 <qtm_acquisition_process+0x1f4>
    16fa:	95 17       	cp	r25, r21
    16fc:	20 f4       	brcc	.+8      	; 0x1706 <qtm_acquisition_process+0x1e4>
    16fe:	9f 5f       	subi	r25, 0xFF	; 255
    1700:	d5 e0       	ldi	r29, 0x05	; 5
    1702:	6d 2e       	mov	r6, r29
    1704:	08 c0       	rjmp	.+16     	; 0x1716 <qtm_acquisition_process+0x1f4>
    1706:	cf e0       	ldi	r28, 0x0F	; 15
    1708:	6c 2e       	mov	r6, r28
    170a:	05 c0       	rjmp	.+10     	; 0x1716 <qtm_acquisition_process+0x1f4>
    170c:	4f 30       	cpi	r20, 0x0F	; 15
    170e:	49 f0       	breq	.+18     	; 0x1722 <qtm_acquisition_process+0x200>
    1710:	4f 5f       	subi	r20, 0xFF	; 255
    1712:	22 50       	subi	r18, 0x02	; 2
    1714:	31 09       	sbc	r19, r1
    1716:	23 30       	cpi	r18, 0x03	; 3
    1718:	31 05       	cpc	r19, r1
    171a:	c0 f7       	brcc	.-16     	; 0x170c <qtm_acquisition_process+0x1ea>
    171c:	4f 30       	cpi	r20, 0x0F	; 15
    171e:	09 f0       	breq	.+2      	; 0x1722 <qtm_acquisition_process+0x200>
    1720:	65 c0       	rjmp	.+202    	; 0x17ec <qtm_acquisition_process+0x2ca>
    1722:	4f e0       	ldi	r20, 0x0F	; 15
    1724:	64 16       	cp	r6, r20
    1726:	81 f1       	breq	.+96     	; 0x1788 <qtm_acquisition_process+0x266>
    1728:	63 94       	inc	r6
    172a:	45 e0       	ldi	r20, 0x05	; 5
    172c:	5f c0       	rjmp	.+190    	; 0x17ec <qtm_acquisition_process+0x2ca>
    172e:	99 23       	and	r25, r25
    1730:	61 f0       	breq	.+24     	; 0x174a <qtm_acquisition_process+0x228>
    1732:	91 50       	subi	r25, 0x01	; 1
    1734:	2f 5c       	subi	r18, 0xCF	; 207
    1736:	31 09       	sbc	r19, r1
    1738:	20 3d       	cpi	r18, 0xD0	; 208
    173a:	31 05       	cpc	r19, r1
    173c:	c0 f7       	brcc	.-16     	; 0x172e <qtm_acquisition_process+0x20c>
    173e:	05 c0       	rjmp	.+10     	; 0x174a <qtm_acquisition_process+0x228>
    1740:	66 20       	and	r6, r6
    1742:	41 f0       	breq	.+16     	; 0x1754 <qtm_acquisition_process+0x232>
    1744:	6a 94       	dec	r6
    1746:	25 51       	subi	r18, 0x15	; 21
    1748:	31 09       	sbc	r19, r1
    174a:	26 31       	cpi	r18, 0x16	; 22
    174c:	31 05       	cpc	r19, r1
    174e:	c0 f7       	brcc	.-16     	; 0x1740 <qtm_acquisition_process+0x21e>
    1750:	61 10       	cpse	r6, r1
    1752:	0d c0       	rjmp	.+26     	; 0x176e <qtm_acquisition_process+0x24c>
    1754:	99 23       	and	r25, r25
    1756:	21 f0       	breq	.+8      	; 0x1760 <qtm_acquisition_process+0x23e>
    1758:	91 50       	subi	r25, 0x01	; 1
    175a:	5a e0       	ldi	r21, 0x0A	; 10
    175c:	65 2e       	mov	r6, r21
    175e:	07 c0       	rjmp	.+14     	; 0x176e <qtm_acquisition_process+0x24c>
    1760:	61 2c       	mov	r6, r1
    1762:	05 c0       	rjmp	.+10     	; 0x176e <qtm_acquisition_process+0x24c>
    1764:	44 23       	and	r20, r20
    1766:	41 f0       	breq	.+16     	; 0x1778 <qtm_acquisition_process+0x256>
    1768:	41 50       	subi	r20, 0x01	; 1
    176a:	22 50       	subi	r18, 0x02	; 2
    176c:	31 09       	sbc	r19, r1
    176e:	23 30       	cpi	r18, 0x03	; 3
    1770:	31 05       	cpc	r19, r1
    1772:	c0 f7       	brcc	.-16     	; 0x1764 <qtm_acquisition_process+0x242>
    1774:	41 11       	cpse	r20, r1
    1776:	10 c0       	rjmp	.+32     	; 0x1798 <qtm_acquisition_process+0x276>
    1778:	66 20       	and	r6, r6
    177a:	e9 f1       	breq	.+122    	; 0x17f6 <qtm_acquisition_process+0x2d4>
    177c:	6a 94       	dec	r6
    177e:	4a e0       	ldi	r20, 0x0A	; 10
    1780:	23 30       	cpi	r18, 0x03	; 3
    1782:	31 05       	cpc	r19, r1
    1784:	c8 f6       	brcc	.-78     	; 0x1738 <qtm_acquisition_process+0x216>
    1786:	08 c0       	rjmp	.+16     	; 0x1798 <qtm_acquisition_process+0x276>
    1788:	59 13       	cpse	r21, r25
    178a:	2f c0       	rjmp	.+94     	; 0x17ea <qtm_acquisition_process+0x2c8>
    178c:	23 30       	cpi	r18, 0x03	; 3
    178e:	31 05       	cpc	r19, r1
    1790:	40 f1       	brcs	.+80     	; 0x17e2 <qtm_acquisition_process+0x2c0>
    1792:	4f e0       	ldi	r20, 0x0F	; 15
    1794:	a4 2e       	mov	r10, r20
    1796:	4f e0       	ldi	r20, 0x0F	; 15
    1798:	94 30       	cpi	r25, 0x04	; 4
    179a:	18 f0       	brcs	.+6      	; 0x17a2 <qtm_acquisition_process+0x280>
    179c:	99 0f       	add	r25, r25
    179e:	99 0f       	add	r25, r25
    17a0:	99 50       	subi	r25, 0x09	; 9
    17a2:	c0 e1       	ldi	r28, 0x10	; 16
    17a4:	4c 9f       	mul	r20, r28
    17a6:	a0 01       	movw	r20, r0
    17a8:	11 24       	eor	r1, r1
    17aa:	56 29       	or	r21, r6
    17ac:	4a 29       	or	r20, r10
    17ae:	c9 2f       	mov	r28, r25
    17b0:	d0 e0       	ldi	r29, 0x00	; 0
    17b2:	dc 2f       	mov	r29, r28
    17b4:	cc 27       	eor	r28, r28
    17b6:	d2 95       	swap	r29
    17b8:	d0 7f       	andi	r29, 0xF0	; 240
    17ba:	4c 2b       	or	r20, r28
    17bc:	5d 2b       	or	r21, r29
    17be:	43 83       	std	Z+3, r20	; 0x03
    17c0:	54 83       	std	Z+4, r21	; 0x04
    17c2:	01 c0       	rjmp	.+2      	; 0x17c6 <qtm_acquisition_process+0x2a4>
    17c4:	ff cf       	rjmp	.-2      	; 0x17c4 <qtm_acquisition_process+0x2a2>
    17c6:	df ef       	ldi	r29, 0xFF	; 255
    17c8:	ed 1a       	sub	r14, r29
    17ca:	fd 0a       	sbc	r15, r29
    17cc:	6b 5f       	subi	r22, 0xFB	; 251
    17ce:	7f 4f       	sbci	r23, 0xFF	; 255
    17d0:	0a 5f       	subi	r16, 0xFA	; 250
    17d2:	1f 4f       	sbci	r17, 0xFF	; 255
    17d4:	d3 ce       	rjmp	.-602    	; 0x157c <qtm_acquisition_process+0x5a>
    17d6:	92 e0       	ldi	r25, 0x02	; 2
    17d8:	90 93 66 3e 	sts	0x3E66, r25	; 0x803e66 <touch_seq_lib_state>
    17dc:	0e c0       	rjmp	.+28     	; 0x17fa <qtm_acquisition_process+0x2d8>
    17de:	83 e0       	ldi	r24, 0x03	; 3
    17e0:	0c c0       	rjmp	.+24     	; 0x17fa <qtm_acquisition_process+0x2d8>
    17e2:	4f e0       	ldi	r20, 0x0F	; 15
    17e4:	2f e0       	ldi	r18, 0x0F	; 15
    17e6:	a2 2e       	mov	r10, r18
    17e8:	d7 cf       	rjmp	.-82     	; 0x1798 <qtm_acquisition_process+0x276>
    17ea:	4f e0       	ldi	r20, 0x0F	; 15
    17ec:	23 30       	cpi	r18, 0x03	; 3
    17ee:	31 05       	cpc	r19, r1
    17f0:	08 f0       	brcs	.+2      	; 0x17f4 <qtm_acquisition_process+0x2d2>
    17f2:	73 cf       	rjmp	.-282    	; 0x16da <qtm_acquisition_process+0x1b8>
    17f4:	d1 cf       	rjmp	.-94     	; 0x1798 <qtm_acquisition_process+0x276>
    17f6:	40 e0       	ldi	r20, 0x00	; 0
    17f8:	cf cf       	rjmp	.-98     	; 0x1798 <qtm_acquisition_process+0x276>
    17fa:	df 91       	pop	r29
    17fc:	cf 91       	pop	r28
    17fe:	1f 91       	pop	r17
    1800:	0f 91       	pop	r16
    1802:	ff 90       	pop	r15
    1804:	ef 90       	pop	r14
    1806:	df 90       	pop	r13
    1808:	cf 90       	pop	r12
    180a:	bf 90       	pop	r11
    180c:	af 90       	pop	r10
    180e:	9f 90       	pop	r9
    1810:	8f 90       	pop	r8
    1812:	7f 90       	pop	r7
    1814:	6f 90       	pop	r6
    1816:	5f 90       	pop	r5
    1818:	4f 90       	pop	r4
    181a:	3f 90       	pop	r3
    181c:	08 95       	ret

0000181e <qtm_ptc_init_acquisition_module>:
    181e:	cf 93       	push	r28
    1820:	dc 01       	movw	r26, r24
    1822:	89 2b       	or	r24, r25
    1824:	79 f1       	breq	.+94     	; 0x1884 <qtm_ptc_init_acquisition_module+0x66>
    1826:	ed 91       	ld	r30, X+
    1828:	fc 91       	ld	r31, X
    182a:	11 97       	sbiw	r26, 0x01	; 1
    182c:	60 81       	ld	r22, Z
    182e:	71 81       	ldd	r23, Z+1	; 0x01
    1830:	40 e0       	ldi	r20, 0x00	; 0
    1832:	50 e0       	ldi	r21, 0x00	; 0
    1834:	20 e0       	ldi	r18, 0x00	; 0
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	26 17       	cp	r18, r22
    183c:	37 07       	cpc	r19, r23
    183e:	79 f0       	breq	.+30     	; 0x185e <qtm_ptc_init_acquisition_module+0x40>
    1840:	12 96       	adiw	r26, 0x02	; 2
    1842:	ed 91       	ld	r30, X+
    1844:	fc 91       	ld	r31, X
    1846:	13 97       	sbiw	r26, 0x03	; 3
    1848:	e4 0f       	add	r30, r20
    184a:	f5 1f       	adc	r31, r21
    184c:	c0 81       	ld	r28, Z
    184e:	81 81       	ldd	r24, Z+1	; 0x01
    1850:	8c 2b       	or	r24, r28
    1852:	98 2b       	or	r25, r24
    1854:	2f 5f       	subi	r18, 0xFF	; 255
    1856:	3f 4f       	sbci	r19, 0xFF	; 255
    1858:	4a 5f       	subi	r20, 0xFA	; 250
    185a:	5f 4f       	sbci	r21, 0xFF	; 255
    185c:	ee cf       	rjmp	.-36     	; 0x183a <qtm_ptc_init_acquisition_module+0x1c>
    185e:	99 23       	and	r25, r25
    1860:	99 f0       	breq	.+38     	; 0x1888 <qtm_ptc_init_acquisition_module+0x6a>
    1862:	80 91 66 3e 	lds	r24, 0x3E66	; 0x803e66 <touch_seq_lib_state>
    1866:	81 11       	cpse	r24, r1
    1868:	06 c0       	rjmp	.+12     	; 0x1876 <qtm_ptc_init_acquisition_module+0x58>
    186a:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	80 93 66 3e 	sts	0x3E66, r24	; 0x803e66 <touch_seq_lib_state>
    1874:	05 c0       	rjmp	.+10     	; 0x1880 <qtm_ptc_init_acquisition_module+0x62>
    1876:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    187a:	98 2b       	or	r25, r24
    187c:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1880:	80 e0       	ldi	r24, 0x00	; 0
    1882:	03 c0       	rjmp	.+6      	; 0x188a <qtm_ptc_init_acquisition_module+0x6c>
    1884:	8b e0       	ldi	r24, 0x0B	; 11
    1886:	01 c0       	rjmp	.+2      	; 0x188a <qtm_ptc_init_acquisition_module+0x6c>
    1888:	82 e0       	ldi	r24, 0x02	; 2
    188a:	cf 91       	pop	r28
    188c:	08 95       	ret

0000188e <qtm_ptc_qtlib_assign_signal_memory>:
    188e:	00 97       	sbiw	r24, 0x00	; 0
    1890:	31 f0       	breq	.+12     	; 0x189e <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1892:	80 93 a5 3e 	sts	0x3EA5, r24	; 0x803ea5 <qtm_raw_data_measurements_ptr>
    1896:	90 93 a6 3e 	sts	0x3EA6, r25	; 0x803ea6 <qtm_raw_data_measurements_ptr+0x1>
    189a:	80 e0       	ldi	r24, 0x00	; 0
    189c:	08 95       	ret
    189e:	8b e0       	ldi	r24, 0x0B	; 11
    18a0:	08 95       	ret

000018a2 <qtm_ptc_start_measurement_seq>:
    18a2:	61 15       	cp	r22, r1
    18a4:	71 05       	cpc	r23, r1
    18a6:	91 f1       	breq	.+100    	; 0x190c <qtm_ptc_start_measurement_seq+0x6a>
    18a8:	00 97       	sbiw	r24, 0x00	; 0
    18aa:	81 f1       	breq	.+96     	; 0x190c <qtm_ptc_start_measurement_seq+0x6a>
    18ac:	20 91 66 3e 	lds	r18, 0x3E66	; 0x803e66 <touch_seq_lib_state>
    18b0:	22 23       	and	r18, r18
    18b2:	71 f1       	breq	.+92     	; 0x1910 <qtm_ptc_start_measurement_seq+0x6e>
    18b4:	24 30       	cpi	r18, 0x04	; 4
    18b6:	71 f1       	breq	.+92     	; 0x1914 <qtm_ptc_start_measurement_seq+0x72>
    18b8:	80 93 a3 3e 	sts	0x3EA3, r24	; 0x803ea3 <qtm_acquisition_control_working_set_ptr>
    18bc:	90 93 a4 3e 	sts	0x3EA4, r25	; 0x803ea4 <qtm_acquisition_control_working_set_ptr+0x1>
    18c0:	60 93 64 3e 	sts	0x3E64, r22	; 0x803e64 <ptc_seq_measure_complete_pointer>
    18c4:	70 93 65 3e 	sts	0x3E65, r23	; 0x803e65 <ptc_seq_measure_complete_pointer+0x1>
    18c8:	20 ec       	ldi	r18, 0xC0	; 192
    18ca:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18ce:	dc 01       	movw	r26, r24
    18d0:	ed 91       	ld	r30, X+
    18d2:	fc 91       	ld	r31, X
    18d4:	22 81       	ldd	r18, Z+2	; 0x02
    18d6:	20 34       	cpi	r18, 0x40	; 64
    18d8:	21 f4       	brne	.+8      	; 0x18e2 <qtm_ptc_start_measurement_seq+0x40>
    18da:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18de:	20 62       	ori	r18, 0x20	; 32
    18e0:	05 c0       	rjmp	.+10     	; 0x18ec <qtm_ptc_start_measurement_seq+0x4a>
    18e2:	20 38       	cpi	r18, 0x80	; 128
    18e4:	41 f4       	brne	.+16     	; 0x18f6 <qtm_ptc_start_measurement_seq+0x54>
    18e6:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18ea:	28 62       	ori	r18, 0x28	; 40
    18ec:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18f0:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    18f4:	13 c0       	rjmp	.+38     	; 0x191c <qtm_ptc_start_measurement_seq+0x7a>
    18f6:	21 38       	cpi	r18, 0x81	; 129
    18f8:	79 f4       	brne	.+30     	; 0x1918 <qtm_ptc_start_measurement_seq+0x76>
    18fa:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18fe:	28 62       	ori	r18, 0x28	; 40
    1900:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1904:	26 e8       	ldi	r18, 0x86	; 134
    1906:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    190a:	08 c0       	rjmp	.+16     	; 0x191c <qtm_ptc_start_measurement_seq+0x7a>
    190c:	8b e0       	ldi	r24, 0x0B	; 11
    190e:	08 95       	ret
    1910:	83 e0       	ldi	r24, 0x03	; 3
    1912:	08 95       	ret
    1914:	81 e0       	ldi	r24, 0x01	; 1
    1916:	08 95       	ret
    1918:	82 e0       	ldi	r24, 0x02	; 2
    191a:	08 95       	ret
    191c:	dc 01       	movw	r26, r24
    191e:	ed 91       	ld	r30, X+
    1920:	fc 91       	ld	r31, X
    1922:	84 81       	ldd	r24, Z+4	; 0x04
    1924:	80 31       	cpi	r24, 0x10	; 16
    1926:	08 f0       	brcs	.+2      	; 0x192a <qtm_ptc_start_measurement_seq+0x88>
    1928:	80 e1       	ldi	r24, 0x10	; 16
    192a:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    192e:	81 e0       	ldi	r24, 0x01	; 1
    1930:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    1934:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    1938:	10 92 67 3e 	sts	0x3E67, r1	; 0x803e67 <current_measure_channel>
    193c:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel+0x1>
    1940:	39 dd       	rcall	.-1422   	; 0x13b4 <select_next_channel_to_measure>
    1942:	81 11       	cpse	r24, r1
    1944:	0a c0       	rjmp	.+20     	; 0x195a <qtm_ptc_start_measurement_seq+0xb8>
    1946:	84 e0       	ldi	r24, 0x04	; 4
    1948:	80 93 66 3e 	sts	0x3E66, r24	; 0x803e66 <touch_seq_lib_state>
    194c:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <current_measure_channel>
    1950:	90 91 68 3e 	lds	r25, 0x3E68	; 0x803e68 <current_measure_channel+0x1>
    1954:	62 dd       	rcall	.-1340   	; 0x141a <qtm_measure_node>
    1956:	80 e0       	ldi	r24, 0x00	; 0
    1958:	08 95       	ret
    195a:	82 e0       	ldi	r24, 0x02	; 2
    195c:	80 93 66 3e 	sts	0x3E66, r24	; 0x803e66 <touch_seq_lib_state>
    1960:	08 95       	ret

00001962 <qtm_enable_sensor_node>:
    1962:	00 97       	sbiw	r24, 0x00	; 0
    1964:	c9 f0       	breq	.+50     	; 0x1998 <qtm_enable_sensor_node+0x36>
    1966:	dc 01       	movw	r26, r24
    1968:	ed 91       	ld	r30, X+
    196a:	fc 91       	ld	r31, X
    196c:	11 97       	sbiw	r26, 0x01	; 1
    196e:	20 81       	ld	r18, Z
    1970:	31 81       	ldd	r19, Z+1	; 0x01
    1972:	26 17       	cp	r18, r22
    1974:	37 07       	cpc	r19, r23
    1976:	90 f0       	brcs	.+36     	; 0x199c <qtm_enable_sensor_node+0x3a>
    1978:	45 e0       	ldi	r20, 0x05	; 5
    197a:	46 9f       	mul	r20, r22
    197c:	90 01       	movw	r18, r0
    197e:	47 9f       	mul	r20, r23
    1980:	30 0d       	add	r19, r0
    1982:	11 24       	eor	r1, r1
    1984:	14 96       	adiw	r26, 0x04	; 4
    1986:	ed 91       	ld	r30, X+
    1988:	fc 91       	ld	r31, X
    198a:	15 97       	sbiw	r26, 0x05	; 5
    198c:	e2 0f       	add	r30, r18
    198e:	f3 1f       	adc	r31, r19
    1990:	81 e0       	ldi	r24, 0x01	; 1
    1992:	80 83       	st	Z, r24
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	08 95       	ret
    1998:	8b e0       	ldi	r24, 0x0B	; 11
    199a:	08 95       	ret
    199c:	82 e0       	ldi	r24, 0x02	; 2
    199e:	08 95       	ret

000019a0 <qtm_calibrate_sensor_node>:
    19a0:	fc 01       	movw	r30, r24
    19a2:	89 2b       	or	r24, r25
    19a4:	d1 f1       	breq	.+116    	; 0x1a1a <qtm_calibrate_sensor_node+0x7a>
    19a6:	a0 81       	ld	r26, Z
    19a8:	b1 81       	ldd	r27, Z+1	; 0x01
    19aa:	8d 91       	ld	r24, X+
    19ac:	9c 91       	ld	r25, X
    19ae:	11 97       	sbiw	r26, 0x01	; 1
    19b0:	86 17       	cp	r24, r22
    19b2:	97 07       	cpc	r25, r23
    19b4:	a0 f1       	brcs	.+104    	; 0x1a1e <qtm_calibrate_sensor_node+0x7e>
    19b6:	12 96       	adiw	r26, 0x02	; 2
    19b8:	9c 91       	ld	r25, X
    19ba:	04 80       	ldd	r0, Z+4	; 0x04
    19bc:	f5 81       	ldd	r31, Z+5	; 0x05
    19be:	e0 2d       	mov	r30, r0
    19c0:	90 34       	cpi	r25, 0x40	; 64
    19c2:	59 f4       	brne	.+22     	; 0x19da <qtm_calibrate_sensor_node+0x3a>
    19c4:	85 e0       	ldi	r24, 0x05	; 5
    19c6:	86 9f       	mul	r24, r22
    19c8:	d0 01       	movw	r26, r0
    19ca:	87 9f       	mul	r24, r23
    19cc:	b0 0d       	add	r27, r0
    19ce:	11 24       	eor	r1, r1
    19d0:	ae 0f       	add	r26, r30
    19d2:	bf 1f       	adc	r27, r31
    19d4:	84 e3       	ldi	r24, 0x34	; 52
    19d6:	92 e0       	ldi	r25, 0x02	; 2
    19d8:	0d c0       	rjmp	.+26     	; 0x19f4 <qtm_calibrate_sensor_node+0x54>
    19da:	90 58       	subi	r25, 0x80	; 128
    19dc:	92 30       	cpi	r25, 0x02	; 2
    19de:	80 f4       	brcc	.+32     	; 0x1a00 <qtm_calibrate_sensor_node+0x60>
    19e0:	85 e0       	ldi	r24, 0x05	; 5
    19e2:	86 9f       	mul	r24, r22
    19e4:	d0 01       	movw	r26, r0
    19e6:	87 9f       	mul	r24, r23
    19e8:	b0 0d       	add	r27, r0
    19ea:	11 24       	eor	r1, r1
    19ec:	ae 0f       	add	r26, r30
    19ee:	bf 1f       	adc	r27, r31
    19f0:	87 e6       	ldi	r24, 0x67	; 103
    19f2:	95 e0       	ldi	r25, 0x05	; 5
    19f4:	13 96       	adiw	r26, 0x03	; 3
    19f6:	8d 93       	st	X+, r24
    19f8:	9c 93       	st	X, r25
    19fa:	14 97       	sbiw	r26, 0x04	; 4
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	01 c0       	rjmp	.+2      	; 0x1a02 <qtm_calibrate_sensor_node+0x62>
    1a00:	82 e0       	ldi	r24, 0x02	; 2
    1a02:	95 e0       	ldi	r25, 0x05	; 5
    1a04:	96 9f       	mul	r25, r22
    1a06:	90 01       	movw	r18, r0
    1a08:	97 9f       	mul	r25, r23
    1a0a:	30 0d       	add	r19, r0
    1a0c:	11 24       	eor	r1, r1
    1a0e:	e2 0f       	add	r30, r18
    1a10:	f3 1f       	adc	r31, r19
    1a12:	90 81       	ld	r25, Z
    1a14:	92 60       	ori	r25, 0x02	; 2
    1a16:	90 83       	st	Z, r25
    1a18:	08 95       	ret
    1a1a:	8b e0       	ldi	r24, 0x0B	; 11
    1a1c:	08 95       	ret
    1a1e:	82 e0       	ldi	r24, 0x02	; 2
    1a20:	08 95       	ret

00001a22 <qtm_t81x_ptc_handler_eoc>:
    1a22:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1a26:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    1a2a:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    1a2e:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <current_measure_channel>
    1a32:	90 91 68 3e 	lds	r25, 0x3E68	; 0x803e68 <current_measure_channel+0x1>
    1a36:	9c 01       	movw	r18, r24
    1a38:	22 0f       	add	r18, r18
    1a3a:	33 1f       	adc	r19, r19
    1a3c:	e0 91 a5 3e 	lds	r30, 0x3EA5	; 0x803ea5 <qtm_raw_data_measurements_ptr>
    1a40:	f0 91 a6 3e 	lds	r31, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr+0x1>
    1a44:	e2 0f       	add	r30, r18
    1a46:	f3 1f       	adc	r31, r19
    1a48:	40 83       	st	Z, r20
    1a4a:	51 83       	std	Z+1, r21	; 0x01
    1a4c:	01 96       	adiw	r24, 0x01	; 1
    1a4e:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <current_measure_channel>
    1a52:	90 93 68 3e 	sts	0x3E68, r25	; 0x803e68 <current_measure_channel+0x1>
    1a56:	ae dc       	rcall	.-1700   	; 0x13b4 <select_next_channel_to_measure>
    1a58:	81 11       	cpse	r24, r1
    1a5a:	08 c0       	rjmp	.+16     	; 0x1a6c <qtm_t81x_ptc_handler_eoc+0x4a>
    1a5c:	84 e0       	ldi	r24, 0x04	; 4
    1a5e:	80 93 66 3e 	sts	0x3E66, r24	; 0x803e66 <touch_seq_lib_state>
    1a62:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <current_measure_channel>
    1a66:	90 91 68 3e 	lds	r25, 0x3E68	; 0x803e68 <current_measure_channel+0x1>
    1a6a:	d7 cc       	rjmp	.-1618   	; 0x141a <qtm_measure_node>
    1a6c:	e0 91 64 3e 	lds	r30, 0x3E64	; 0x803e64 <ptc_seq_measure_complete_pointer>
    1a70:	f0 91 65 3e 	lds	r31, 0x3E65	; 0x803e65 <ptc_seq_measure_complete_pointer+0x1>
    1a74:	09 94       	ijmp

00001a76 <__udivmodhi4>:
    1a76:	aa 1b       	sub	r26, r26
    1a78:	bb 1b       	sub	r27, r27
    1a7a:	51 e1       	ldi	r21, 0x11	; 17
    1a7c:	07 c0       	rjmp	.+14     	; 0x1a8c <__udivmodhi4_ep>

00001a7e <__udivmodhi4_loop>:
    1a7e:	aa 1f       	adc	r26, r26
    1a80:	bb 1f       	adc	r27, r27
    1a82:	a6 17       	cp	r26, r22
    1a84:	b7 07       	cpc	r27, r23
    1a86:	10 f0       	brcs	.+4      	; 0x1a8c <__udivmodhi4_ep>
    1a88:	a6 1b       	sub	r26, r22
    1a8a:	b7 0b       	sbc	r27, r23

00001a8c <__udivmodhi4_ep>:
    1a8c:	88 1f       	adc	r24, r24
    1a8e:	99 1f       	adc	r25, r25
    1a90:	5a 95       	dec	r21
    1a92:	a9 f7       	brne	.-22     	; 0x1a7e <__udivmodhi4_loop>
    1a94:	80 95       	com	r24
    1a96:	90 95       	com	r25
    1a98:	bc 01       	movw	r22, r24
    1a9a:	cd 01       	movw	r24, r26
    1a9c:	08 95       	ret

00001a9e <__divmodhi4>:
    1a9e:	97 fb       	bst	r25, 7
    1aa0:	07 2e       	mov	r0, r23
    1aa2:	16 f4       	brtc	.+4      	; 0x1aa8 <__divmodhi4+0xa>
    1aa4:	00 94       	com	r0
    1aa6:	06 d0       	rcall	.+12     	; 0x1ab4 <__divmodhi4_neg1>
    1aa8:	77 fd       	sbrc	r23, 7
    1aaa:	08 d0       	rcall	.+16     	; 0x1abc <__divmodhi4_neg2>
    1aac:	e4 df       	rcall	.-56     	; 0x1a76 <__udivmodhi4>
    1aae:	07 fc       	sbrc	r0, 7
    1ab0:	05 d0       	rcall	.+10     	; 0x1abc <__divmodhi4_neg2>
    1ab2:	3e f4       	brtc	.+14     	; 0x1ac2 <__divmodhi4_exit>

00001ab4 <__divmodhi4_neg1>:
    1ab4:	90 95       	com	r25
    1ab6:	81 95       	neg	r24
    1ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aba:	08 95       	ret

00001abc <__divmodhi4_neg2>:
    1abc:	70 95       	com	r23
    1abe:	61 95       	neg	r22
    1ac0:	7f 4f       	sbci	r23, 0xFF	; 255

00001ac2 <__divmodhi4_exit>:
    1ac2:	08 95       	ret

00001ac4 <_exit>:
    1ac4:	f8 94       	cli

00001ac6 <__stop_program>:
    1ac6:	ff cf       	rjmp	.-2      	; 0x1ac6 <__stop_program>
