
Attiny814Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00803e00  00001adc  00001b90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ad6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  00009ad6  00001ad6  00001b8a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000062  00803e46  00803e46  00001bd6  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001bd6  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c08  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002a8  00000000  00000000  00001c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005c37  00000000  00000000  00001ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000254b  00000000  00000000  00007b27  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001787  00000000  00000000  0000a072  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000488  00000000  00000000  0000b7fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002dd5  00000000  00000000  0000bc84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000e44  00000000  00000000  0000ea59  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001e8  00000000  00000000  0000f89d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	30 c0       	rjmp	.+96     	; 0x70 <__vector_7>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	4e c0       	rjmp	.+156    	; 0xbe <__vector_16>
      22:	69 c3       	rjmp	.+1746   	; 0x6f6 <__vector_17>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	cd bf       	out	0x3d, r28	; 61
      3c:	df e3       	ldi	r29, 0x3F	; 63
      3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
      40:	1e e3       	ldi	r17, 0x3E	; 62
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	be e3       	ldi	r27, 0x3E	; 62
      46:	ec ed       	ldi	r30, 0xDC	; 220
      48:	fa e1       	ldi	r31, 0x1A	; 26
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	a6 34       	cpi	r26, 0x46	; 70
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	2e e3       	ldi	r18, 0x3E	; 62
      58:	a6 e4       	ldi	r26, 0x46	; 70
      5a:	be e3       	ldi	r27, 0x3E	; 62
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a8 3a       	cpi	r26, 0xA8	; 168
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	12 d1       	rcall	.+548    	; 0x28c <main>
      68:	34 cd       	rjmp	.-1432   	; 0xfffffad2 <__eeprom_end+0xff7efad2>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      6c:	b6 d3       	rcall	.+1900   	; 0x7da <system_init>

	touch_init();
      6e:	ad c2       	rjmp	.+1370   	; 0x5ca <touch_init>

00000070 <__vector_7>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_PIT_vect)
{
      70:	1f 92       	push	r1
      72:	0f 92       	push	r0
      74:	0f b6       	in	r0, 0x3f	; 63
      76:	0f 92       	push	r0
      78:	11 24       	eor	r1, r1
      7a:	2f 93       	push	r18
      7c:	3f 93       	push	r19
      7e:	4f 93       	push	r20
      80:	5f 93       	push	r21
      82:	6f 93       	push	r22
      84:	7f 93       	push	r23
      86:	8f 93       	push	r24
      88:	9f 93       	push	r25
      8a:	af 93       	push	r26
      8c:	bf 93       	push	r27
      8e:	ef 93       	push	r30
      90:	ff 93       	push	r31
	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      92:	0d d3       	rcall	.+1562   	; 0x6ae <touch_timer_handler>
	RTC_CallBack();
      94:	88 d0       	rcall	.+272    	; 0x1a6 <RTC_CallBack>
	/* PIT interrupt flag has to be cleared manually */
	RTC.PITINTFLAGS = RTC_PI_bm;
      96:	81 e0       	ldi	r24, 0x01	; 1
      98:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
      9c:	ff 91       	pop	r31
      9e:	ef 91       	pop	r30
      a0:	bf 91       	pop	r27
      a2:	af 91       	pop	r26
      a4:	9f 91       	pop	r25
      a6:	8f 91       	pop	r24
      a8:	7f 91       	pop	r23
      aa:	6f 91       	pop	r22
      ac:	5f 91       	pop	r21
      ae:	4f 91       	pop	r20
      b0:	3f 91       	pop	r19
      b2:	2f 91       	pop	r18
      b4:	0f 90       	pop	r0
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	0f 90       	pop	r0
      ba:	1f 90       	pop	r1
      bc:	18 95       	reti

000000be <__vector_16>:

ISR(AC0_AC_vect)
{
      be:	1f 92       	push	r1
      c0:	0f 92       	push	r0
      c2:	0f b6       	in	r0, 0x3f	; 63
      c4:	0f 92       	push	r0
      c6:	11 24       	eor	r1, r1
      c8:	2f 93       	push	r18
      ca:	3f 93       	push	r19
      cc:	4f 93       	push	r20
      ce:	5f 93       	push	r21
      d0:	6f 93       	push	r22
      d2:	7f 93       	push	r23
      d4:	8f 93       	push	r24
      d6:	9f 93       	push	r25
      d8:	af 93       	push	r26
      da:	bf 93       	push	r27
      dc:	ef 93       	push	r30
      de:	ff 93       	push	r31
	uint8_t temp;
	/* Insert your AC interrupt handling code here */
	/* The interrupt flag has to be cleared manually */
	temp = AC0.STATUS;
      e0:	e0 e7       	ldi	r30, 0x70	; 112
      e2:	f6 e0       	ldi	r31, 0x06	; 6
      e4:	87 81       	ldd	r24, Z+7	; 0x07
	
	AC0.STATUS = AC_CMP_bm;
      e6:	81 e0       	ldi	r24, 0x01	; 1
      e8:	87 83       	std	Z+7, r24	; 0x07
	
	LowBattery();
      ea:	50 d0       	rcall	.+160    	; 0x18c <LowBattery>
}
      ec:	ff 91       	pop	r31
      ee:	ef 91       	pop	r30
      f0:	bf 91       	pop	r27
      f2:	af 91       	pop	r26
      f4:	9f 91       	pop	r25
      f6:	8f 91       	pop	r24
      f8:	7f 91       	pop	r23
      fa:	6f 91       	pop	r22
      fc:	5f 91       	pop	r21
      fe:	4f 91       	pop	r20
     100:	3f 91       	pop	r19
     102:	2f 91       	pop	r18
     104:	0f 90       	pop	r0
     106:	0f be       	out	0x3f, r0	; 63
     108:	0f 90       	pop	r0
     10a:	1f 90       	pop	r1
     10c:	18 95       	reti

0000010e <TOUCH_SetMeasureBusyFlag>:
	
	if (edgeDetectFreeze == 1)
		tempDelta = 0;
		
	return abs(tempDelta);
}
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	80 93 4f 3e 	sts	0x3E4F, r24	; 0x803e4f <measureBusyFlag>
     114:	08 95       	ret

00000116 <Radiotube_Handle>:
     116:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     11a:	81 30       	cpi	r24, 0x01	; 1
     11c:	81 f4       	brne	.+32     	; 0x13e <Radiotube_Handle+0x28>
     11e:	10 92 03 3e 	sts	0x3E03, r1	; 0x803e03 <RadiotubeState>
     122:	28 9a       	sbi	0x05, 0	; 5
     124:	2f e5       	ldi	r18, 0x5F	; 95
     126:	3a ee       	ldi	r19, 0xEA	; 234
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	21 50       	subi	r18, 0x01	; 1
     12c:	30 40       	sbci	r19, 0x00	; 0
     12e:	90 40       	sbci	r25, 0x00	; 0
     130:	e1 f7       	brne	.-8      	; 0x12a <Radiotube_Handle+0x14>
     132:	00 c0       	rjmp	.+0      	; 0x134 <Radiotube_Handle+0x1e>
     134:	00 00       	nop
     136:	28 98       	cbi	0x05, 0	; 5
     138:	80 93 56 3e 	sts	0x3E56, r24	; 0x803e56 <edgeDetectFreeze>
     13c:	08 95       	ret
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	80 93 03 3e 	sts	0x3E03, r24	; 0x803e03 <RadiotubeState>
     144:	29 9a       	sbi	0x05, 1	; 5
     146:	2f e5       	ldi	r18, 0x5F	; 95
     148:	3a ee       	ldi	r19, 0xEA	; 234
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	21 50       	subi	r18, 0x01	; 1
     14e:	30 40       	sbci	r19, 0x00	; 0
     150:	90 40       	sbci	r25, 0x00	; 0
     152:	e1 f7       	brne	.-8      	; 0x14c <Radiotube_Handle+0x36>
     154:	00 c0       	rjmp	.+0      	; 0x156 <Radiotube_Handle+0x40>
     156:	00 00       	nop
     158:	29 98       	cbi	0x05, 1	; 5
     15a:	80 93 56 3e 	sts	0x3E56, r24	; 0x803e56 <edgeDetectFreeze>
     15e:	10 92 57 3e 	sts	0x3E57, r1	; 0x803e57 <RadiotubeOnTime>
     162:	10 92 58 3e 	sts	0x3E58, r1	; 0x803e58 <RadiotubeOnTime+0x1>
     166:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <RadiotubeOnTime+0x2>
     16a:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <RadiotubeOnTime+0x3>
     16e:	08 95       	ret

00000170 <MCU_GoToSleep>:
     170:	e0 e5       	ldi	r30, 0x50	; 80
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	90 81       	ld	r25, Z
     176:	99 7f       	andi	r25, 0xF9	; 249
     178:	89 2b       	or	r24, r25
     17a:	80 83       	st	Z, r24
     17c:	80 81       	ld	r24, Z
     17e:	81 60       	ori	r24, 0x01	; 1
     180:	80 83       	st	Z, r24
     182:	88 95       	sleep
     184:	80 81       	ld	r24, Z
     186:	8e 7f       	andi	r24, 0xFE	; 254
     188:	80 83       	st	Z, r24
     18a:	08 95       	ret

0000018c <LowBattery>:
     18c:	28 9a       	sbi	0x05, 0	; 5
     18e:	2f e5       	ldi	r18, 0x5F	; 95
     190:	8a ee       	ldi	r24, 0xEA	; 234
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	21 50       	subi	r18, 0x01	; 1
     196:	80 40       	sbci	r24, 0x00	; 0
     198:	90 40       	sbci	r25, 0x00	; 0
     19a:	e1 f7       	brne	.-8      	; 0x194 <LowBattery+0x8>
     19c:	00 c0       	rjmp	.+0      	; 0x19e <LowBattery+0x12>
     19e:	00 00       	nop
     1a0:	28 98       	cbi	0x05, 0	; 5
     1a2:	a8 95       	wdr
     1a4:	fe cf       	rjmp	.-4      	; 0x1a2 <LowBattery+0x16>

000001a6 <RTC_CallBack>:
     1a6:	80 91 48 3e 	lds	r24, 0x3E48	; 0x803e48 <AC_TimeCnt>
     1aa:	90 91 49 3e 	lds	r25, 0x3E49	; 0x803e49 <AC_TimeCnt+0x1>
     1ae:	01 96       	adiw	r24, 0x01	; 1
     1b0:	8f 31       	cpi	r24, 0x1F	; 31
     1b2:	91 05       	cpc	r25, r1
     1b4:	28 f4       	brcc	.+10     	; 0x1c0 <RTC_CallBack+0x1a>
     1b6:	80 93 48 3e 	sts	0x3E48, r24	; 0x803e48 <AC_TimeCnt>
     1ba:	90 93 49 3e 	sts	0x3E49, r25	; 0x803e49 <AC_TimeCnt+0x1>
     1be:	18 c0       	rjmp	.+48     	; 0x1f0 <RTC_CallBack+0x4a>
     1c0:	10 92 48 3e 	sts	0x3E48, r1	; 0x803e48 <AC_TimeCnt>
     1c4:	10 92 49 3e 	sts	0x3E49, r1	; 0x803e49 <AC_TimeCnt+0x1>
     1c8:	0e 9a       	sbi	0x01, 6	; 1
     1ca:	87 e8       	ldi	r24, 0x87	; 135
     1cc:	93 e1       	ldi	r25, 0x13	; 19
     1ce:	01 97       	sbiw	r24, 0x01	; 1
     1d0:	f1 f7       	brne	.-4      	; 0x1ce <RTC_CallBack+0x28>
     1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <RTC_CallBack+0x2e>
     1d4:	00 00       	nop
     1d6:	b2 d2       	rcall	.+1380   	; 0x73c <AC_0_init>
     1d8:	87 e8       	ldi	r24, 0x87	; 135
     1da:	93 e1       	ldi	r25, 0x13	; 19
     1dc:	01 97       	sbiw	r24, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <RTC_CallBack+0x36>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <RTC_CallBack+0x3c>
     1e2:	00 00       	nop
     1e4:	80 91 77 06 	lds	r24, 0x0677	; 0x800677 <__TEXT_REGION_LENGTH__+0x700677>
     1e8:	84 ff       	sbrs	r24, 4
     1ea:	d0 df       	rcall	.-96     	; 0x18c <LowBattery>
     1ec:	b1 d2       	rcall	.+1378   	; 0x750 <AC_0_Disable>
     1ee:	0e 98       	cbi	0x01, 6	; 1
     1f0:	80 91 5d 3e 	lds	r24, 0x3E5D	; 0x803e5d <SensorState>
     1f4:	81 30       	cpi	r24, 0x01	; 1
     1f6:	49 f4       	brne	.+18     	; 0x20a <RTC_CallBack+0x64>
     1f8:	80 91 5b 3e 	lds	r24, 0x3E5B	; 0x803e5b <fingerOnCnt>
     1fc:	90 91 5c 3e 	lds	r25, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     200:	01 96       	adiw	r24, 0x01	; 1
     202:	80 93 5b 3e 	sts	0x3E5B, r24	; 0x803e5b <fingerOnCnt>
     206:	90 93 5c 3e 	sts	0x3E5C, r25	; 0x803e5c <fingerOnCnt+0x1>
     20a:	80 91 56 3e 	lds	r24, 0x3E56	; 0x803e56 <edgeDetectFreeze>
     20e:	81 30       	cpi	r24, 0x01	; 1
     210:	49 f4       	brne	.+18     	; 0x224 <RTC_CallBack+0x7e>
     212:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <edgeFreezeCnt>
     216:	90 91 55 3e 	lds	r25, 0x3E55	; 0x803e55 <edgeFreezeCnt+0x1>
     21a:	01 96       	adiw	r24, 0x01	; 1
     21c:	80 93 54 3e 	sts	0x3E54, r24	; 0x803e54 <edgeFreezeCnt>
     220:	90 93 55 3e 	sts	0x3E55, r25	; 0x803e55 <edgeFreezeCnt+0x1>
     224:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <edgeFreezeCnt>
     228:	90 91 55 3e 	lds	r25, 0x3E55	; 0x803e55 <edgeFreezeCnt+0x1>
     22c:	40 97       	sbiw	r24, 0x10	; 16
     22e:	30 f0       	brcs	.+12     	; 0x23c <RTC_CallBack+0x96>
     230:	10 92 54 3e 	sts	0x3E54, r1	; 0x803e54 <edgeFreezeCnt>
     234:	10 92 55 3e 	sts	0x3E55, r1	; 0x803e55 <edgeFreezeCnt+0x1>
     238:	10 92 56 3e 	sts	0x3E56, r1	; 0x803e56 <edgeDetectFreeze>
     23c:	80 91 03 3e 	lds	r24, 0x3E03	; 0x803e03 <RadiotubeState>
     240:	81 11       	cpse	r24, r1
     242:	23 c0       	rjmp	.+70     	; 0x28a <RTC_CallBack+0xe4>
     244:	80 91 57 3e 	lds	r24, 0x3E57	; 0x803e57 <RadiotubeOnTime>
     248:	90 91 58 3e 	lds	r25, 0x3E58	; 0x803e58 <RadiotubeOnTime+0x1>
     24c:	a0 91 59 3e 	lds	r26, 0x3E59	; 0x803e59 <RadiotubeOnTime+0x2>
     250:	b0 91 5a 3e 	lds	r27, 0x3E5A	; 0x803e5a <RadiotubeOnTime+0x3>
     254:	01 96       	adiw	r24, 0x01	; 1
     256:	a1 1d       	adc	r26, r1
     258:	b1 1d       	adc	r27, r1
     25a:	8a 3f       	cpi	r24, 0xFA	; 250
     25c:	25 e1       	ldi	r18, 0x15	; 21
     25e:	92 07       	cpc	r25, r18
     260:	a1 05       	cpc	r26, r1
     262:	b1 05       	cpc	r27, r1
     264:	48 f4       	brcc	.+18     	; 0x278 <RTC_CallBack+0xd2>
     266:	80 93 57 3e 	sts	0x3E57, r24	; 0x803e57 <RadiotubeOnTime>
     26a:	90 93 58 3e 	sts	0x3E58, r25	; 0x803e58 <RadiotubeOnTime+0x1>
     26e:	a0 93 59 3e 	sts	0x3E59, r26	; 0x803e59 <RadiotubeOnTime+0x2>
     272:	b0 93 5a 3e 	sts	0x3E5A, r27	; 0x803e5a <RadiotubeOnTime+0x3>
     276:	08 95       	ret
     278:	10 92 57 3e 	sts	0x3E57, r1	; 0x803e57 <RadiotubeOnTime>
     27c:	10 92 58 3e 	sts	0x3E58, r1	; 0x803e58 <RadiotubeOnTime+0x1>
     280:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <RadiotubeOnTime+0x2>
     284:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <RadiotubeOnTime+0x3>
     288:	46 cf       	rjmp	.-372    	; 0x116 <Radiotube_Handle>
     28a:	08 95       	ret

0000028c <main>:

int main(void)
{
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     28c:	ef de       	rcall	.-546    	; 0x6c <atmel_start_init>
	if (ignoreTime < 10)
	{
		ignoreTime++;
		return;
	}
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     28e:	19 e0       	ldi	r17, 0x09	; 9
     290:	ca e0       	ldi	r28, 0x0A	; 10
     292:	d0 e0       	ldi	r29, 0x00	; 0
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     294:	07 e0       	ldi	r16, 0x07	; 7
	//Radiotube_Test();
	
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
     296:	a8 95       	wdr
{
	uint8_t keyStatus = 0;
	uint8_t edgeStatus = EDGE_NONE;
	
	///* Does acquisition and post-processing */
	touch_process();
     298:	d8 d1       	rcall	.+944    	; 0x64a <touch_process>
	
	if (measurement_done_touch == 0)
     29a:	80 91 5f 3e 	lds	r24, 0x3E5F	; 0x803e5f <measurement_done_touch>
     29e:	88 23       	and	r24, r24
     2a0:	09 f4       	brne	.+2      	; 0x2a4 <main+0x18>
     2a2:	47 c1       	rjmp	.+654    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
	int16_t edgeGroupSum = 0;
	
	curDelta = get_sensor_node_signal(0);
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	0c d2       	rcall	.+1048   	; 0x6c2 <get_sensor_node_signal>
     2aa:	7c 01       	movw	r14, r24
	curDelta -= get_sensor_node_reference(0);
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	15 d2       	rcall	.+1066   	; 0x6dc <get_sensor_node_reference>
     2b2:	a7 01       	movw	r20, r14
     2b4:	48 1b       	sub	r20, r24
     2b6:	59 0b       	sbc	r21, r25
	
	tempDelta = curDelta - preFilteredDeltaValue;
     2b8:	20 91 50 3e 	lds	r18, 0x3E50	; 0x803e50 <preFilteredDeltaValue>
     2bc:	30 91 51 3e 	lds	r19, 0x3E51	; 0x803e51 <preFilteredDeltaValue+0x1>
     2c0:	7a 01       	movw	r14, r20
     2c2:	e2 1a       	sub	r14, r18
     2c4:	f3 0a       	sbc	r15, r19
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
     2c6:	b7 01       	movw	r22, r14
     2c8:	f7 fe       	sbrs	r15, 7
     2ca:	04 c0       	rjmp	.+8      	; 0x2d4 <main+0x48>
     2cc:	66 27       	eor	r22, r22
     2ce:	77 27       	eor	r23, r23
     2d0:	6e 19       	sub	r22, r14
     2d2:	7f 09       	sbc	r23, r15
     2d4:	a0 91 06 3e 	lds	r26, 0x3E06	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     2d8:	b0 91 07 3e 	lds	r27, 0x3E07	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
     2dc:	6a 17       	cp	r22, r26
     2de:	7b 07       	cpc	r23, r27
     2e0:	18 f1       	brcs	.+70     	; 0x328 <main+0x9c>
	{
		/* this is an strong edge */
		if(tempDelta > 0)
     2e2:	1e 14       	cp	r1, r14
     2e4:	1f 04       	cpc	r1, r15
     2e6:	14 f0       	brlt	.+4      	; 0x2ec <main+0x60>
			edgeStatus = EDGE_RISING;
		else 
			edgeStatus = EDGE_FALLING;
     2e8:	92 e0       	ldi	r25, 0x02	; 2
     2ea:	01 c0       	rjmp	.+2      	; 0x2ee <main+0x62>
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
	{
		/* this is an strong edge */
		if(tempDelta > 0)
			edgeStatus = EDGE_RISING;
     2ec:	91 e0       	ldi	r25, 0x01	; 1
		else 
			edgeStatus = EDGE_FALLING;
		
		filteredDeltaValue = curDelta;
     2ee:	40 93 52 3e 	sts	0x3E52, r20	; 0x803e52 <filteredDeltaValue>
     2f2:	50 93 53 3e 	sts	0x3E53, r21	; 0x803e53 <filteredDeltaValue+0x1>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     2f6:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     2fa:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup>
     2fe:	10 92 6b 3e 	sts	0x3E6B, r1	; 0x803e6b <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     302:	e0 91 4a 3e 	lds	r30, 0x3E4A	; 0x803e4a <TouchSignalGroupPtr>
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	8e 0f       	add	r24, r30
     30a:	80 93 4a 3e 	sts	0x3E4A, r24	; 0x803e4a <TouchSignalGroupPtr>
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ee 0f       	add	r30, r30
     312:	ff 1f       	adc	r31, r31
     314:	e5 5b       	subi	r30, 0xB5	; 181
     316:	f1 4c       	sbci	r31, 0xC1	; 193
     318:	60 83       	st	Z, r22
     31a:	71 83       	std	Z+1, r23	; 0x01
	if (TouchSignalGroupPtr >= 2)
     31c:	82 30       	cpi	r24, 0x02	; 2
     31e:	08 f4       	brcc	.+2      	; 0x322 <main+0x96>
     320:	82 c0       	rjmp	.+260    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		TouchSignalGroupPtr = 0;
     322:	10 92 4a 3e 	sts	0x3E4A, r1	; 0x803e4a <TouchSignalGroupPtr>
     326:	7f c0       	rjmp	.+254    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		
		filteredDeltaValue = curDelta;
		TOUCH_ClearEdgeGroup();
		TOUCH_TouchSignalCollect(abs(tempDelta));
	}
	else if (abs(tempDelta) >= WEAK_EDGE_THRESHOLD)
     328:	80 91 04 3e 	lds	r24, 0x3E04	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     32c:	90 91 05 3e 	lds	r25, 0x3E05	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
     330:	e0 91 46 3e 	lds	r30, 0x3E46	; 0x803e46 <__data_end>
     334:	68 17       	cp	r22, r24
     336:	79 07       	cpc	r23, r25
     338:	08 f4       	brcc	.+2      	; 0x33c <main+0xb0>
     33a:	56 c0       	rjmp	.+172    	; 0x3e8 <main+0x15c>
	{
		/* this is an weak edge */
		
		filteredDeltaValue = (preFilteredDeltaValue * 5 + curDelta * 5)/10;
     33c:	ca 01       	movw	r24, r20
     33e:	82 0f       	add	r24, r18
     340:	93 1f       	adc	r25, r19
     342:	97 fd       	sbrc	r25, 7
     344:	01 96       	adiw	r24, 0x01	; 1
     346:	95 95       	asr	r25
     348:	87 95       	ror	r24
     34a:	80 93 52 3e 	sts	0x3E52, r24	; 0x803e52 <filteredDeltaValue>
     34e:	90 93 53 3e 	sts	0x3E53, r25	; 0x803e53 <filteredDeltaValue+0x1>
		
		/* if the sum of continuous four edges exceed the 
			strong threshold, an effective status should
			be return.*/
		edgeGroup[edgeGroupPtr++] = tempDelta;
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	8e 0f       	add	r24, r30
     356:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	ee 0f       	add	r30, r30
     35e:	ff 1f       	adc	r31, r31
     360:	e6 59       	subi	r30, 0x96	; 150
     362:	f1 4c       	sbci	r31, 0xC1	; 193
     364:	e0 82       	st	Z, r14
     366:	f1 82       	std	Z+1, r15	; 0x01
		if (edgeGroupPtr >= 4)
     368:	84 30       	cpi	r24, 0x04	; 4
     36a:	10 f0       	brcs	.+4      	; 0x370 <main+0xe4>
			edgeGroupPtr = 0;
     36c:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
		
		for (i = 0; i < 4; i++)
			edgeGroupSum += edgeGroup[i];
     370:	20 91 6a 3e 	lds	r18, 0x3E6A	; 0x803e6a <edgeGroup>
     374:	30 91 6b 3e 	lds	r19, 0x3E6B	; 0x803e6b <edgeGroup+0x1>
     378:	80 91 6c 3e 	lds	r24, 0x3E6C	; 0x803e6c <edgeGroup+0x2>
     37c:	90 91 6d 3e 	lds	r25, 0x3E6D	; 0x803e6d <edgeGroup+0x3>
     380:	82 0f       	add	r24, r18
     382:	93 1f       	adc	r25, r19
     384:	20 91 6e 3e 	lds	r18, 0x3E6E	; 0x803e6e <edgeGroup+0x4>
     388:	30 91 6f 3e 	lds	r19, 0x3E6F	; 0x803e6f <edgeGroup+0x5>
     38c:	82 0f       	add	r24, r18
     38e:	93 1f       	adc	r25, r19
     390:	20 91 70 3e 	lds	r18, 0x3E70	; 0x803e70 <edgeGroup+0x6>
     394:	30 91 71 3e 	lds	r19, 0x3E71	; 0x803e71 <edgeGroup+0x7>
     398:	82 0f       	add	r24, r18
     39a:	93 1f       	adc	r25, r19
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
     39c:	9c 01       	movw	r18, r24
     39e:	97 ff       	sbrs	r25, 7
     3a0:	04 c0       	rjmp	.+8      	; 0x3aa <main+0x11e>
     3a2:	22 27       	eor	r18, r18
     3a4:	33 27       	eor	r19, r19
     3a6:	28 1b       	sub	r18, r24
     3a8:	39 0b       	sbc	r19, r25
     3aa:	2a 17       	cp	r18, r26
     3ac:	3b 07       	cpc	r19, r27
     3ae:	c0 f1       	brcs	.+112    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     3b0:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     3b4:	10 92 6a 3e 	sts	0x3E6A, r1	; 0x803e6a <edgeGroup>
     3b8:	10 92 6b 3e 	sts	0x3E6B, r1	; 0x803e6b <edgeGroup+0x1>

uint16_t AC_TimeCnt = 0;

static void TOUCH_TouchSignalCollect(uint16_t signal)
{
	TouchSignalGroup[TouchSignalGroupPtr++] = signal;
     3bc:	e0 91 4a 3e 	lds	r30, 0x3E4A	; 0x803e4a <TouchSignalGroupPtr>
     3c0:	41 e0       	ldi	r20, 0x01	; 1
     3c2:	4e 0f       	add	r20, r30
     3c4:	40 93 4a 3e 	sts	0x3E4A, r20	; 0x803e4a <TouchSignalGroupPtr>
     3c8:	f0 e0       	ldi	r31, 0x00	; 0
     3ca:	ee 0f       	add	r30, r30
     3cc:	ff 1f       	adc	r31, r31
     3ce:	e5 5b       	subi	r30, 0xB5	; 181
     3d0:	f1 4c       	sbci	r31, 0xC1	; 193
     3d2:	20 83       	st	Z, r18
     3d4:	31 83       	std	Z+1, r19	; 0x01
	if (TouchSignalGroupPtr >= 2)
     3d6:	42 30       	cpi	r20, 0x02	; 2
     3d8:	10 f0       	brcs	.+4      	; 0x3de <main+0x152>
		TouchSignalGroupPtr = 0;
     3da:	10 92 4a 3e 	sts	0x3E4A, r1	; 0x803e4a <TouchSignalGroupPtr>
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
     3de:	18 16       	cp	r1, r24
     3e0:	19 06       	cpc	r1, r25
     3e2:	04 f1       	brlt	.+64     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
				edgeStatus = EDGE_RISING; 
			else
				edgeStatus = EDGE_FALLING;
     3e4:	92 e0       	ldi	r25, 0x02	; 2
     3e6:	1f c0       	rjmp	.+62     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		}
	}
	else
	{
		/* this should be suppressed */
		filteredDeltaValue = (preFilteredDeltaValue * 9 + curDelta)/10;
     3e8:	12 9f       	mul	r17, r18
     3ea:	c0 01       	movw	r24, r0
     3ec:	13 9f       	mul	r17, r19
     3ee:	90 0d       	add	r25, r0
     3f0:	11 24       	eor	r1, r1
     3f2:	84 0f       	add	r24, r20
     3f4:	95 1f       	adc	r25, r21
     3f6:	be 01       	movw	r22, r28
     3f8:	59 db       	rcall	.-2382   	; 0xfffffaac <__eeprom_end+0xff7efaac>
     3fa:	60 93 52 3e 	sts	0x3E52, r22	; 0x803e52 <filteredDeltaValue>
     3fe:	70 93 53 3e 	sts	0x3E53, r23	; 0x803e53 <filteredDeltaValue+0x1>
		
		edgeGroup[edgeGroupPtr++] = 0;
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	8e 0f       	add	r24, r30
     406:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <__data_end>
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	ee 0f       	add	r30, r30
     40e:	ff 1f       	adc	r31, r31
     410:	e6 59       	subi	r30, 0x96	; 150
     412:	f1 4c       	sbci	r31, 0xC1	; 193
     414:	10 82       	st	Z, r1
     416:	11 82       	std	Z+1, r1	; 0x01
		if (edgeGroupPtr >= 4)
     418:	84 30       	cpi	r24, 0x04	; 4
     41a:	10 f0       	brcs	.+4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
			edgeGroupPtr = 0;
     41c:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <__data_end>

static uint8_t TOUCH_DeltaEdgeDetct(void)
{
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = EDGE_NONE,i;
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	01 c0       	rjmp	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			TOUCH_TouchSignalCollect(abs(edgeGroupSum));
			if (edgeGroupSum > 0)
				edgeStatus = EDGE_RISING; 
     424:	91 e0       	ldi	r25, 0x01	; 1
		edgeGroup[edgeGroupPtr++] = 0;
		if (edgeGroupPtr >= 4)
			edgeGroupPtr = 0;
	}
	
	preFilteredDeltaValue = filteredDeltaValue;
     426:	20 91 52 3e 	lds	r18, 0x3E52	; 0x803e52 <filteredDeltaValue>
     42a:	30 91 53 3e 	lds	r19, 0x3E53	; 0x803e53 <filteredDeltaValue+0x1>
     42e:	20 93 50 3e 	sts	0x3E50, r18	; 0x803e50 <preFilteredDeltaValue>
     432:	30 93 51 3e 	sts	0x3E51, r19	; 0x803e51 <preFilteredDeltaValue+0x1>
	if (measurement_done_touch == 0)
		return keyStatus;
		
	edgeStatus = TOUCH_DeltaEdgeDetct();
	
	if (edgeDetectFreeze == 1)
     436:	80 91 56 3e 	lds	r24, 0x3E56	; 0x803e56 <edgeDetectFreeze>
     43a:	81 30       	cpi	r24, 0x01	; 1
     43c:	09 f4       	brne	.+2      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     43e:	79 c0       	rjmp	.+242    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
		return keyStatus;

	switch(SensorState)
     440:	80 91 5d 3e 	lds	r24, 0x3E5D	; 0x803e5d <SensorState>
     444:	88 23       	and	r24, r24
     446:	19 f0       	breq	.+6      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     448:	81 30       	cpi	r24, 0x01	; 1
     44a:	39 f0       	breq	.+14     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     44c:	6a c0       	rjmp	.+212    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
	{
		case FINGER_ON_DETECT:
			if (edgeStatus == EDGE_RISING)
     44e:	91 30       	cpi	r25, 0x01	; 1
     450:	09 f0       	breq	.+2      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     452:	67 c0       	rjmp	.+206    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
				SensorState = FINGER_OFF_DETECT;
     454:	90 93 5d 3e 	sts	0x3E5D, r25	; 0x803e5d <SensorState>
     458:	64 c0       	rjmp	.+200    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
		break;
		
		case FINGER_OFF_DETECT:
			/* state will roll back if rising edge appears. */
			if (edgeStatus == EDGE_RISING)
     45a:	91 30       	cpi	r25, 0x01	; 1
     45c:	29 f4       	brne	.+10     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
				fingerOnCnt = 0;
     45e:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     462:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
     466:	5d c0       	rjmp	.+186    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
			/* the time duration of effective touch should between 70ms to 1000ms */
			else if (fingerOnCnt >= FINGER_ON_MAXIMUM_TIME_MS(1000))
     468:	20 91 5b 3e 	lds	r18, 0x3E5B	; 0x803e5b <fingerOnCnt>
     46c:	30 91 5c 3e 	lds	r19, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     470:	2f 31       	cpi	r18, 0x1F	; 31
     472:	31 05       	cpc	r19, r1
     474:	38 f0       	brcs	.+14     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
			{
				fingerOnCnt = 0;
     476:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     47a:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     47e:	10 92 5d 3e 	sts	0x3E5D, r1	; 0x803e5d <SensorState>
     482:	4f c0       	rjmp	.+158    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
			}
			else if (edgeStatus == EDGE_FALLING)
     484:	92 30       	cpi	r25, 0x02	; 2
     486:	09 f0       	breq	.+2      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     488:	4c c0       	rjmp	.+152    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
     48a:	80 91 5b 3e 	lds	r24, 0x3E5B	; 0x803e5b <fingerOnCnt>
     48e:	90 91 5c 3e 	lds	r25, 0x3E5C	; 0x803e5c <fingerOnCnt+0x1>
     492:	02 97       	sbiw	r24, 0x02	; 2
     494:	f0 f1       	brcs	.+124    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
}

uint8_t ignoreTime = 0;
static void TOUCH_TouchSignal(void)
{
	if (ignoreTime < 10)
     496:	80 91 47 3e 	lds	r24, 0x3E47	; 0x803e47 <ignoreTime>
     49a:	8a 30       	cpi	r24, 0x0A	; 10
     49c:	20 f4       	brcc	.+8      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
	{
		ignoreTime++;
     49e:	8f 5f       	subi	r24, 0xFF	; 255
     4a0:	80 93 47 3e 	sts	0x3E47, r24	; 0x803e47 <ignoreTime>
     4a4:	34 c0       	rjmp	.+104    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
		return;
	}
	TouchSignal = (TouchSignal * 9 + (TouchSignalGroup[0] + TouchSignalGroup[1]) / 2) / 10;
     4a6:	20 91 4b 3e 	lds	r18, 0x3E4B	; 0x803e4b <TouchSignalGroup>
     4aa:	30 91 4c 3e 	lds	r19, 0x3E4C	; 0x803e4c <TouchSignalGroup+0x1>
     4ae:	80 91 4d 3e 	lds	r24, 0x3E4D	; 0x803e4d <TouchSignalGroup+0x2>
     4b2:	90 91 4e 3e 	lds	r25, 0x3E4E	; 0x803e4e <TouchSignalGroup+0x3>
     4b6:	82 0f       	add	r24, r18
     4b8:	93 1f       	adc	r25, r19
     4ba:	96 95       	lsr	r25
     4bc:	87 95       	ror	r24
     4be:	40 91 00 3e 	lds	r20, 0x3E00	; 0x803e00 <TouchSignal>
     4c2:	50 91 01 3e 	lds	r21, 0x3E01	; 0x803e01 <TouchSignal+0x1>
     4c6:	14 9f       	mul	r17, r20
     4c8:	90 01       	movw	r18, r0
     4ca:	15 9f       	mul	r17, r21
     4cc:	30 0d       	add	r19, r0
     4ce:	11 24       	eor	r1, r1
     4d0:	82 0f       	add	r24, r18
     4d2:	93 1f       	adc	r25, r19
     4d4:	be 01       	movw	r22, r28
     4d6:	d6 da       	rcall	.-2644   	; 0xfffffa84 <__eeprom_end+0xff7efa84>
     4d8:	9b 01       	movw	r18, r22
     4da:	60 93 00 3e 	sts	0x3E00, r22	; 0x803e00 <TouchSignal>
     4de:	70 93 01 3e 	sts	0x3E01, r23	; 0x803e01 <TouchSignal+0x1>
	STRONG_EDGE_THRESHOLD = TouchSignal * 7 / 10;
     4e2:	06 9f       	mul	r16, r22
     4e4:	c0 01       	movw	r24, r0
     4e6:	07 9f       	mul	r16, r23
     4e8:	90 0d       	add	r25, r0
     4ea:	11 24       	eor	r1, r1
     4ec:	be 01       	movw	r22, r28
     4ee:	ca da       	rcall	.-2668   	; 0xfffffa84 <__eeprom_end+0xff7efa84>
     4f0:	60 93 06 3e 	sts	0x3E06, r22	; 0x803e06 <STRONG_EDGE_THRESHOLD>
     4f4:	70 93 07 3e 	sts	0x3E07, r23	; 0x803e07 <STRONG_EDGE_THRESHOLD+0x1>
	WEAK_EDGE_THRESHOLD = TouchSignal * 4 / 10;
     4f8:	c9 01       	movw	r24, r18
     4fa:	88 0f       	add	r24, r24
     4fc:	99 1f       	adc	r25, r25
     4fe:	88 0f       	add	r24, r24
     500:	99 1f       	adc	r25, r25
     502:	be 01       	movw	r22, r28
     504:	bf da       	rcall	.-2690   	; 0xfffffa84 <__eeprom_end+0xff7efa84>
     506:	60 93 04 3e 	sts	0x3E04, r22	; 0x803e04 <WEAK_EDGE_THRESHOLD>
     50a:	70 93 05 3e 	sts	0x3E05, r23	; 0x803e05 <WEAK_EDGE_THRESHOLD+0x1>
			}
			else if (edgeStatus == EDGE_FALLING)
			{
				if (fingerOnCnt >= FINGER_ON_MINIMUM_TIME_MS(70))
				{
					keyStatus = 1;
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	01 c0       	rjmp	.+2      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     512:	80 e0       	ldi	r24, 0x00	; 0
				{
					keyStatus = 1;
					TOUCH_TouchSignal();
				}
					
				fingerOnCnt = 0;
     514:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <fingerOnCnt>
     518:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     51c:	10 92 5d 3e 	sts	0x3E5D, r1	; 0x803e5d <SensorState>
     520:	01 c0       	rjmp	.+2      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     522:	80 e0       	ldi	r24, 0x00	; 0
			}
			break;
	}
	
	/* one cycle of measurement is done */
	measurement_done_touch = 0;
     524:	10 92 5f 3e 	sts	0x3E5F, r1	; 0x803e5f <measurement_done_touch>
	measureBusyFlag = 0;
     528:	10 92 4f 3e 	sts	0x3E4F, r1	; 0x803e4f <measureBusyFlag>
	/* Replace with your application code */
	while(1) 
	{
		wdt_reset();
		
		if(TOUCH_TouchDetect() == 1)
     52c:	81 30       	cpi	r24, 0x01	; 1
     52e:	09 f4       	brne	.+2      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
			Radiotube_Handle();
     530:	f2 dd       	rcall	.-1052   	; 0x116 <Radiotube_Handle>
		
		if (measureBusyFlag == 0)
     532:	80 91 4f 3e 	lds	r24, 0x3E4F	; 0x803e4f <measureBusyFlag>
     536:	81 11       	cpse	r24, r1
     538:	ae ce       	rjmp	.-676    	; 0x296 <main+0xa>
			MCU_GoToSleep(SLEEP_MODE_PWR_DOWN);
     53a:	84 e0       	ldi	r24, 0x04	; 4
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	18 de       	rcall	.-976    	; 0x170 <MCU_GoToSleep>
     540:	aa ce       	rjmp	.-684    	; 0x296 <main+0xa>

00000542 <qtm_measure_complete_callback>:
void calibrate_node(uint16_t sensor_node)
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
     542:	e3 e8       	ldi	r30, 0x83	; 131
     544:	fe e3       	ldi	r31, 0x3E	; 62
     546:	80 81       	ld	r24, Z
     548:	82 60       	ori	r24, 0x02	; 2
     54a:	80 83       	st	Z, r24
     54c:	08 95       	ret

0000054e <qtm_error_callback>:
     54e:	87 ff       	sbrs	r24, 7
     550:	02 c0       	rjmp	.+4      	; 0x556 <qtm_error_callback+0x8>
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	07 c0       	rjmp	.+14     	; 0x564 <qtm_error_callback+0x16>
     556:	86 fd       	sbrc	r24, 6
     558:	03 c0       	rjmp	.+6      	; 0x560 <qtm_error_callback+0x12>
     55a:	10 92 5e 3e 	sts	0x3E5E, r1	; 0x803e5e <module_error_code>
     55e:	08 95       	ret
     560:	8f 70       	andi	r24, 0x0F	; 15
     562:	8e 5f       	subi	r24, 0xFE	; 254
     564:	80 93 5e 3e 	sts	0x3E5E, r24	; 0x803e5e <module_error_code>
     568:	08 95       	ret

0000056a <init_complete_callback>:
     56a:	8f e7       	ldi	r24, 0x7F	; 127
     56c:	9e e3       	ldi	r25, 0x3E	; 62
     56e:	96 d9       	rcall	.-3284   	; 0xfffff89c <__eeprom_end+0xff7ef89c>
     570:	60 e0       	ldi	r22, 0x00	; 0
     572:	70 e0       	ldi	r23, 0x00	; 0
     574:	85 e3       	ldi	r24, 0x35	; 53
     576:	9e e3       	ldi	r25, 0x3E	; 62
     578:	fb d9       	rcall	.-3082   	; 0xfffff970 <__eeprom_end+0xff7ef970>
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	85 e3       	ldi	r24, 0x35	; 53
     580:	9e e3       	ldi	r25, 0x3E	; 62
     582:	15 da       	rcall	.-3030   	; 0xfffff9ae <__eeprom_end+0xff7ef9ae>
     584:	4a e7       	ldi	r20, 0x7A	; 122
     586:	5e e3       	ldi	r21, 0x3E	; 62
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	80 e2       	ldi	r24, 0x20	; 32
     58c:	9e e3       	ldi	r25, 0x3E	; 62
     58e:	f5 c1       	rjmp	.+1002   	; 0x97a <qtm_init_sensor_key>

00000590 <qtm_post_process_complete>:
     590:	e0 91 20 3e 	lds	r30, 0x3E20	; 0x803e20 <qtlib_key_set1>
     594:	f0 91 21 3e 	lds	r31, 0x3E21	; 0x803e21 <qtlib_key_set1+0x1>
     598:	80 81       	ld	r24, Z
     59a:	87 ff       	sbrs	r24, 7
     59c:	08 c0       	rjmp	.+16     	; 0x5ae <qtm_post_process_complete+0x1e>
     59e:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     5a2:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     5a6:	80 81       	ld	r24, Z
     5a8:	84 60       	ori	r24, 0x04	; 4
     5aa:	80 83       	st	Z, r24
     5ac:	08 95       	ret
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	80 93 5f 3e 	sts	0x3E5F, r24	; 0x803e5f <measurement_done_touch>
     5b4:	08 95       	ret

000005b6 <Timer_set_period>:
     5b6:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
     5ba:	92 fd       	sbrc	r25, 2
     5bc:	fc cf       	rjmp	.-8      	; 0x5b6 <Timer_set_period>
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     5c4:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     5c8:	08 95       	ret

000005ca <touch_init>:
     5ca:	80 e2       	ldi	r24, 0x20	; 32
     5cc:	f4 df       	rcall	.-24     	; 0x5b6 <Timer_set_period>
     5ce:	e4 e1       	ldi	r30, 0x14	; 20
     5d0:	f4 e0       	ldi	r31, 0x04	; 4
     5d2:	80 81       	ld	r24, Z
     5d4:	87 7f       	andi	r24, 0xF7	; 247
     5d6:	80 83       	st	Z, r24
     5d8:	e3 e8       	ldi	r30, 0x83	; 131
     5da:	fe e3       	ldi	r31, 0x3E	; 62
     5dc:	10 82       	st	Z, r1
     5de:	8c e1       	ldi	r24, 0x1C	; 28
     5e0:	9e e3       	ldi	r25, 0x3E	; 62
     5e2:	81 83       	std	Z+1, r24	; 0x01
     5e4:	92 83       	std	Z+2, r25	; 0x02
     5e6:	88 e1       	ldi	r24, 0x18	; 24
     5e8:	9e e3       	ldi	r25, 0x3E	; 62
     5ea:	83 83       	std	Z+3, r24	; 0x03
     5ec:	94 83       	std	Z+4, r25	; 0x04
     5ee:	80 e1       	ldi	r24, 0x10	; 16
     5f0:	9e e3       	ldi	r25, 0x3E	; 62
     5f2:	85 83       	std	Z+5, r24	; 0x05
     5f4:	96 83       	std	Z+6, r25	; 0x06
     5f6:	84 e1       	ldi	r24, 0x14	; 20
     5f8:	9e e3       	ldi	r25, 0x3E	; 62
     5fa:	87 83       	std	Z+7, r24	; 0x07
     5fc:	90 87       	std	Z+8, r25	; 0x08
     5fe:	88 e0       	ldi	r24, 0x08	; 8
     600:	9e e3       	ldi	r25, 0x3E	; 62
     602:	81 87       	std	Z+9, r24	; 0x09
     604:	92 87       	std	Z+10, r25	; 0x0a
     606:	8c e0       	ldi	r24, 0x0C	; 12
     608:	9e e3       	ldi	r25, 0x3E	; 62
     60a:	83 87       	std	Z+11, r24	; 0x0b
     60c:	94 87       	std	Z+12, r25	; 0x0c
     60e:	88 e9       	ldi	r24, 0x98	; 152
     610:	9a e0       	ldi	r25, 0x0A	; 10
     612:	85 87       	std	Z+13, r24	; 0x0d
     614:	96 87       	std	Z+14, r25	; 0x0e
     616:	85 eb       	ldi	r24, 0xB5	; 181
     618:	92 e0       	ldi	r25, 0x02	; 2
     61a:	87 87       	std	Z+15, r24	; 0x0f
     61c:	90 8b       	std	Z+16, r25	; 0x10
     61e:	87 ea       	ldi	r24, 0xA7	; 167
     620:	92 e0       	ldi	r25, 0x02	; 2
     622:	81 8b       	std	Z+17, r24	; 0x11
     624:	92 8b       	std	Z+18, r25	; 0x12
     626:	81 ea       	ldi	r24, 0xA1	; 161
     628:	92 e0       	ldi	r25, 0x02	; 2
     62a:	83 8b       	std	Z+19, r24	; 0x13
     62c:	94 8b       	std	Z+20, r25	; 0x14
     62e:	15 8a       	std	Z+21, r1	; 0x15
     630:	16 8a       	std	Z+22, r1	; 0x16
     632:	88 ec       	ldi	r24, 0xC8	; 200
     634:	92 e0       	ldi	r25, 0x02	; 2
     636:	87 8b       	std	Z+23, r24	; 0x17
     638:	90 8f       	std	Z+24, r25	; 0x18
     63a:	cf 01       	movw	r24, r30
     63c:	80 d5       	rcall	.+2816   	; 0x113e <qtm_binding_layer_init>
     63e:	7a d5       	rcall	.+2804   	; 0x1134 <qmt_get_binding_layer_ptr>
     640:	80 93 81 3e 	sts	0x3E81, r24	; 0x803e81 <p_qtm_control>
     644:	90 93 82 3e 	sts	0x3E82, r25	; 0x803e82 <p_qtm_control+0x1>
     648:	08 95       	ret

0000064a <touch_process>:
     64a:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     64e:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     652:	80 81       	ld	r24, Z
     654:	80 ff       	sbrs	r24, 0
     656:	0b c0       	rjmp	.+22     	; 0x66e <touch_process+0x24>
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	cf d5       	rcall	.+2974   	; 0x11fa <qtm_lib_start_acquisition>
     65c:	81 11       	cpse	r24, r1
     65e:	07 c0       	rjmp	.+14     	; 0x66e <touch_process+0x24>
     660:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     664:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     668:	80 81       	ld	r24, Z
     66a:	8e 7f       	andi	r24, 0xFE	; 254
     66c:	80 83       	st	Z, r24
     66e:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     672:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     676:	80 81       	ld	r24, Z
     678:	81 ff       	sbrs	r24, 1
     67a:	0e c0       	rjmp	.+28     	; 0x698 <touch_process+0x4e>
     67c:	0d d6       	rcall	.+3098   	; 0x1298 <qtm_lib_acq_process>
     67e:	81 11       	cpse	r24, r1
     680:	02 c0       	rjmp	.+4      	; 0x686 <touch_process+0x3c>
     682:	12 d6       	rcall	.+3108   	; 0x12a8 <qtm_lib_post_process>
     684:	02 c0       	rjmp	.+4      	; 0x68a <touch_process+0x40>
     686:	80 e8       	ldi	r24, 0x80	; 128
     688:	62 df       	rcall	.-316    	; 0x54e <qtm_error_callback>
     68a:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     68e:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     692:	80 81       	ld	r24, Z
     694:	8d 7f       	andi	r24, 0xFD	; 253
     696:	80 83       	st	Z, r24
     698:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <p_qtm_control>
     69c:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <p_qtm_control+0x1>
     6a0:	80 81       	ld	r24, Z
     6a2:	82 ff       	sbrs	r24, 2
     6a4:	03 c0       	rjmp	.+6      	; 0x6ac <touch_process+0x62>
     6a6:	8b 7f       	andi	r24, 0xFB	; 251
     6a8:	81 60       	ori	r24, 0x01	; 1
     6aa:	80 83       	st	Z, r24
     6ac:	08 95       	ret

000006ae <touch_timer_handler>:
     6ae:	2f dd       	rcall	.-1442   	; 0x10e <TOUCH_SetMeasureBusyFlag>
     6b0:	e3 e8       	ldi	r30, 0x83	; 131
     6b2:	fe e3       	ldi	r31, 0x3E	; 62
     6b4:	80 81       	ld	r24, Z
     6b6:	81 60       	ori	r24, 0x01	; 1
     6b8:	80 83       	st	Z, r24
     6ba:	80 91 02 3e 	lds	r24, 0x3E02	; 0x803e02 <measeurePeriod>
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	51 c1       	rjmp	.+674    	; 0x964 <qtm_update_qtlib_timer>

000006c2 <get_sensor_node_signal>:
     6c2:	25 e0       	ldi	r18, 0x05	; 5
     6c4:	ac 01       	movw	r20, r24
     6c6:	24 9f       	mul	r18, r20
     6c8:	c0 01       	movw	r24, r0
     6ca:	25 9f       	mul	r18, r21
     6cc:	90 0d       	add	r25, r0
     6ce:	11 24       	eor	r1, r1
     6d0:	fc 01       	movw	r30, r24
     6d2:	e6 58       	subi	r30, 0x86	; 134
     6d4:	f1 4c       	sbci	r31, 0xC1	; 193
     6d6:	81 81       	ldd	r24, Z+1	; 0x01
     6d8:	92 81       	ldd	r25, Z+2	; 0x02
     6da:	08 95       	ret

000006dc <get_sensor_node_reference>:
     6dc:	26 e0       	ldi	r18, 0x06	; 6
     6de:	ac 01       	movw	r20, r24
     6e0:	24 9f       	mul	r18, r20
     6e2:	c0 01       	movw	r24, r0
     6e4:	25 9f       	mul	r18, r21
     6e6:	90 0d       	add	r25, r0
     6e8:	11 24       	eor	r1, r1
     6ea:	fc 01       	movw	r30, r24
     6ec:	e4 56       	subi	r30, 0x64	; 100
     6ee:	f1 4c       	sbci	r31, 0xC1	; 193
     6f0:	84 81       	ldd	r24, Z+4	; 0x04
     6f2:	95 81       	ldd	r25, Z+5	; 0x05
     6f4:	08 95       	ret

000006f6 <__vector_17>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     6f6:	1f 92       	push	r1
     6f8:	0f 92       	push	r0
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	0f 92       	push	r0
     6fe:	11 24       	eor	r1, r1
     700:	2f 93       	push	r18
     702:	3f 93       	push	r19
     704:	4f 93       	push	r20
     706:	5f 93       	push	r21
     708:	6f 93       	push	r22
     70a:	7f 93       	push	r23
     70c:	8f 93       	push	r24
     70e:	9f 93       	push	r25
     710:	af 93       	push	r26
     712:	bf 93       	push	r27
     714:	ef 93       	push	r30
     716:	ff 93       	push	r31
	qtm_t81x_ptc_handler_eoc();
     718:	8b d9       	rcall	.-3306   	; 0xfffffa30 <__eeprom_end+0xff7efa30>
}
     71a:	ff 91       	pop	r31
     71c:	ef 91       	pop	r30
     71e:	bf 91       	pop	r27
     720:	af 91       	pop	r26
     722:	9f 91       	pop	r25
     724:	8f 91       	pop	r24
     726:	7f 91       	pop	r23
     728:	6f 91       	pop	r22
     72a:	5f 91       	pop	r21
     72c:	4f 91       	pop	r20
     72e:	3f 91       	pop	r19
     730:	2f 91       	pop	r18
     732:	0f 90       	pop	r0
     734:	0f be       	out	0x3f, r0	; 63
     736:	0f 90       	pop	r0
     738:	1f 90       	pop	r1
     73a:	18 95       	reti

0000073c <AC_0_init>:
 * \return Initialization status.
 */
int8_t AC_0_init()
{

	AC0.INTCTRL = 1 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     73c:	e0 e7       	ldi	r30, 0x70	; 112
     73e:	f6 e0       	ldi	r31, 0x06	; 6
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	86 83       	std	Z+6, r24	; 0x06

	AC0.MUXCTRLA = 0 << AC_INVERT_bp    /* Invert AC Output: disabled */
     744:	82 e0       	ldi	r24, 0x02	; 2
     746:	82 83       	std	Z+2, r24	; 0x02
	               | AC_MUXNEG_VREF_gc  /* Voltage Reference */
	               | AC_MUXPOS_PIN0_gc; /* Positive Pin 0 */

	AC0.CTRLA = 1 << AC_ENABLE_bp       /* Enable: disabled */
     748:	81 e2       	ldi	r24, 0x21	; 33
     74a:	80 83       	st	Z, r24
	            //| AC_LPMODE_EN_gc       /* Low power mode enabled */
	            | 0 << AC_OUTEN_bp      /* Output Buffer Enable: disabled */
	            | 0 << AC_RUNSTDBY_bp;  /* Run in Standby Mode: disabled */

	return 0;
}
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	08 95       	ret

00000750 <AC_0_Disable>:



void AC_0_Disable(void)
{
	AC0.INTCTRL = 0 << AC_CMP_bp; /* Analog Comparator 0 Interrupt Enable: enabled */
     750:	e0 e7       	ldi	r30, 0x70	; 112
     752:	f6 e0       	ldi	r31, 0x06	; 6
     754:	16 82       	std	Z+6, r1	; 0x06
	AC0.CTRLA = 0 << AC_ENABLE_bp;	/* Enable: disabled */
     756:	10 82       	st	Z, r1
     758:	08 95       	ret

0000075a <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	08 95       	ret

0000075e <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     75e:	42 e0       	ldi	r20, 0x02	; 2
     760:	68 ed       	ldi	r22, 0xD8	; 216
     762:	88 e7       	ldi	r24, 0x78	; 120
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	6d d0       	rcall	.+218    	; 0x842 <protected_write_io>
     768:	41 e0       	ldi	r20, 0x01	; 1
     76a:	68 ed       	ldi	r22, 0xD8	; 216
     76c:	81 e6       	ldi	r24, 0x61	; 97
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	68 d0       	rcall	.+208    	; 0x842 <protected_write_io>
     772:	40 e0       	ldi	r20, 0x00	; 0
     774:	68 ed       	ldi	r22, 0xD8	; 216
     776:	80 e6       	ldi	r24, 0x60	; 96
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	63 d0       	rcall	.+198    	; 0x842 <protected_write_io>
	ccp_write_io((void *)&(CLKCTRL.MCLKCTRLA),
	             CLKCTRL_CLKSEL_OSC20M_gc /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */
	                 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	/* wait for system oscillator changing to finish */
	while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {
     77c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x700063>
     780:	80 fd       	sbrc	r24, 0
     782:	fc cf       	rjmp	.-8      	; 0x77c <CLKCTRL_init+0x1e>
	}

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	08 95       	ret

00000788 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     788:	78 94       	sei

	return 0;
}
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	08 95       	ret

0000078e <mcu_init>:
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	false);

	USART_init();
     78e:	e0 e1       	ldi	r30, 0x10	; 16
     790:	f4 e0       	ldi	r31, 0x04	; 4
     792:	80 81       	ld	r24, Z
     794:	88 60       	ori	r24, 0x08	; 8
     796:	81 93       	st	Z+, r24
     798:	e8 31       	cpi	r30, 0x18	; 24
     79a:	84 e0       	ldi	r24, 0x04	; 4
     79c:	f8 07       	cpc	r31, r24
     79e:	c9 f7       	brne	.-14     	; 0x792 <mcu_init+0x4>
     7a0:	e0 e3       	ldi	r30, 0x30	; 48
     7a2:	f4 e0       	ldi	r31, 0x04	; 4
     7a4:	80 81       	ld	r24, Z
     7a6:	88 60       	ori	r24, 0x08	; 8
     7a8:	81 93       	st	Z+, r24
     7aa:	e8 33       	cpi	r30, 0x38	; 56
     7ac:	84 e0       	ldi	r24, 0x04	; 4
     7ae:	f8 07       	cpc	r31, r24
     7b0:	c9 f7       	brne	.-14     	; 0x7a4 <mcu_init+0x16>
     7b2:	e0 e5       	ldi	r30, 0x50	; 80
     7b4:	f4 e0       	ldi	r31, 0x04	; 4
     7b6:	80 81       	ld	r24, Z
     7b8:	88 60       	ori	r24, 0x08	; 8
     7ba:	81 93       	st	Z+, r24
     7bc:	e8 35       	cpi	r30, 0x58	; 88
     7be:	84 e0       	ldi	r24, 0x04	; 4
     7c0:	f8 07       	cpc	r31, r24
     7c2:	c9 f7       	brne	.-14     	; 0x7b6 <mcu_init+0x28>
     7c4:	08 95       	ret

000007c6 <AC_0_initialization>:
     7c6:	e7 e1       	ldi	r30, 0x17	; 23
     7c8:	f4 e0       	ldi	r31, 0x04	; 4
     7ca:	80 81       	ld	r24, Z
     7cc:	88 7f       	andi	r24, 0xF8	; 248
     7ce:	84 60       	ori	r24, 0x04	; 4
     7d0:	80 83       	st	Z, r24
     7d2:	80 81       	ld	r24, Z
     7d4:	87 7f       	andi	r24, 0xF7	; 247
     7d6:	80 83       	st	Z, r24
     7d8:	08 95       	ret

000007da <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     7da:	d9 df       	rcall	.-78     	; 0x78e <mcu_init>
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7dc:	00 98       	cbi	0x00, 0	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7de:	e0 e1       	ldi	r30, 0x10	; 16
     7e0:	f4 e0       	ldi	r31, 0x04	; 4
     7e2:	80 81       	ld	r24, Z
     7e4:	88 60       	ori	r24, 0x08	; 8
     7e6:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7e8:	02 98       	cbi	0x00, 2	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7ea:	e2 e1       	ldi	r30, 0x12	; 18
     7ec:	f4 e0       	ldi	r31, 0x04	; 4
     7ee:	80 81       	ld	r24, Z
     7f0:	88 60       	ori	r24, 0x08	; 8
     7f2:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     7f4:	03 98       	cbi	0x00, 3	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     7f6:	e3 e1       	ldi	r30, 0x13	; 19
     7f8:	f4 e0       	ldi	r31, 0x04	; 4
     7fa:	80 81       	ld	r24, Z
     7fc:	88 60       	ori	r24, 0x08	; 8
     7fe:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     800:	05 98       	cbi	0x00, 5	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     802:	e5 e1       	ldi	r30, 0x15	; 21
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	80 81       	ld	r24, Z
     808:	88 60       	ori	r24, 0x08	; 8
     80a:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     80c:	06 9a       	sbi	0x00, 6	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     80e:	0e 98       	cbi	0x01, 6	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     810:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     812:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     814:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     816:	29 98       	cbi	0x05, 1	; 5
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     818:	22 98       	cbi	0x04, 2	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     81a:	e2 e3       	ldi	r30, 0x32	; 50
     81c:	f4 e0       	ldi	r31, 0x04	; 4
     81e:	80 81       	ld	r24, Z
     820:	88 60       	ori	r24, 0x08	; 8
     822:	80 83       	st	Z, r24
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     824:	23 98       	cbi	0x04, 3	; 4
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     826:	e3 e3       	ldi	r30, 0x33	; 51
     828:	f4 e0       	ldi	r31, 0x04	; 4
     82a:	80 81       	ld	r24, Z
     82c:	88 60       	ori	r24, 0x08	; 8
     82e:	80 83       	st	Z, r24
	    // <id> pad_pull_config
	    // <PORT_PULL_OFF"> Off
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_UP);

	CLKCTRL_init();
     830:	96 df       	rcall	.-212    	; 0x75e <CLKCTRL_init>

	RTC_init(1);
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	0a d0       	rcall	.+20     	; 0x84a <RTC_init>
	
	VREF_0_init();
     836:	1e d0       	rcall	.+60     	; 0x874 <VREF_0_init>
	
	//USART_initialization();
	
	AC_0_initialization();
     838:	c6 df       	rcall	.-116    	; 0x7c6 <AC_0_initialization>
	
	WDT_0_init();
     83a:	24 d0       	rcall	.+72     	; 0x884 <WDT_0_init>

	CPUINT_init();
     83c:	a5 df       	rcall	.-182    	; 0x788 <CPUINT_init>

	SLPCTRL_init();
     83e:	15 d0       	rcall	.+42     	; 0x86a <SLPCTRL_init>

	BOD_init();
     840:	8c cf       	rjmp	.-232    	; 0x75a <BOD_init>

00000842 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     842:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     844:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     846:	40 83       	st	Z, r20
	ret                             // Return to caller
     848:	08 95       	ret

0000084a <RTC_init>:
int8_t RTC_init(uint8_t mode)
{
	//while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
	//}
	
	while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
     84a:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__TEXT_REGION_LENGTH__+0x700151>
     84e:	81 11       	cpse	r24, r1
     850:	fc cf       	rjmp	.-8      	; 0x84a <RTC_init>
	//| 1 << RTC_RTCEN_bp     /* Enable: enabled */
	//| 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	// RTC.PER = 0xffff; /* Period: 0xffff */

	RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz divided by 32 */
     852:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__TEXT_REGION_LENGTH__+0x700147>
	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	//RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
	//| 0 << RTC_OVF_bp; /* Overflow Interrupt enable: disabled */

	 RTC.PITCTRLA = RTC_PERIOD_CYC1024_gc /* Off */
     856:	89 e4       	ldi	r24, 0x49	; 73
     858:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x700150>
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	 RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */
     85c:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__TEXT_REGION_LENGTH__+0x700155>

	 RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__TEXT_REGION_LENGTH__+0x700152>

	return 0;
}
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	08 95       	ret

0000086a <SLPCTRL_init>:
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{

	SLPCTRL.CTRLA = 1 << SLPCTRL_SEN_bp       /* Sleep enable: enabled */
     86a:	83 e0       	ldi	r24, 0x03	; 3
     86c:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	                | SLPCTRL_SMODE_STDBY_gc; /* Power-down Mode */

	return 0;
}
     870:	80 e0       	ldi	r24, 0x00	; 0
     872:	08 95       	ret

00000874 <VREF_0_init>:
 * \return Initialization status.
 */
int8_t VREF_0_init()
{

	VREF_CTRLA = VREF_ADC0REFSEL_0V55_gc   /* Voltage reference at 0.55V */
     874:	84 e0       	ldi	r24, 0x04	; 4
     876:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
	             | VREF_DAC0REFSEL_1V5_gc; /* Voltage reference at 1.5V */

	VREF_CTRLB = 0 << VREF_ADC0REFEN_bp    /* ADC0 reference enable: disabled */
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
	             | 1 << VREF_DAC0REFEN_bp; /* DAC0/AC0 reference enable: enabled */

	return 0;
}
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	08 95       	ret

00000884 <WDT_0_init>:
     884:	48 e0       	ldi	r20, 0x08	; 8
     886:	68 ed       	ldi	r22, 0xD8	; 216
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	91 e0       	ldi	r25, 0x01	; 1
     88c:	da df       	rcall	.-76     	; 0x842 <protected_write_io>
	ccp_write_io((void *)&(WDT.CTRLA),
	             WDT_PERIOD_1KCLK_gc /* 128 cycles (128) */
	                 | WDT_WINDOW_OFF_gc /* Window mode off */);

	return 0;
}
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	08 95       	ret

00000892 <check_for_aks_block>:
     892:	cf 92       	push	r12
     894:	df 92       	push	r13
     896:	ff 92       	push	r15
     898:	0f 93       	push	r16
     89a:	1f 93       	push	r17
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	ec 01       	movw	r28, r24
     8a2:	ae 81       	ldd	r26, Y+6	; 0x06
     8a4:	bf 81       	ldd	r27, Y+7	; 0x07
     8a6:	eb 01       	movw	r28, r22
     8a8:	cc 0f       	add	r28, r28
     8aa:	dd 1f       	adc	r29, r29
     8ac:	c6 0f       	add	r28, r22
     8ae:	d7 1f       	adc	r29, r23
     8b0:	ca 0f       	add	r28, r26
     8b2:	db 1f       	adc	r29, r27
     8b4:	fa 80       	ldd	r15, Y+2	; 0x02
     8b6:	fc 01       	movw	r30, r24
     8b8:	44 81       	ldd	r20, Z+4	; 0x04
     8ba:	55 81       	ldd	r21, Z+5	; 0x05
     8bc:	e6 e0       	ldi	r30, 0x06	; 6
     8be:	e6 9f       	mul	r30, r22
     8c0:	90 01       	movw	r18, r0
     8c2:	e7 9f       	mul	r30, r23
     8c4:	30 0d       	add	r19, r0
     8c6:	11 24       	eor	r1, r1
     8c8:	8a 01       	movw	r16, r20
     8ca:	02 0f       	add	r16, r18
     8cc:	13 1f       	adc	r17, r19
     8ce:	f8 01       	movw	r30, r16
     8d0:	22 81       	ldd	r18, Z+2	; 0x02
     8d2:	33 81       	ldd	r19, Z+3	; 0x03
     8d4:	f9 01       	movw	r30, r18
     8d6:	21 81       	ldd	r18, Z+1	; 0x01
     8d8:	32 81       	ldd	r19, Z+2	; 0x02
     8da:	f8 01       	movw	r30, r16
     8dc:	04 81       	ldd	r16, Z+4	; 0x04
     8de:	15 81       	ldd	r17, Z+5	; 0x05
     8e0:	20 1b       	sub	r18, r16
     8e2:	31 0b       	sbc	r19, r17
     8e4:	e8 81       	ld	r30, Y
     8e6:	2e 1b       	sub	r18, r30
     8e8:	31 09       	sbc	r19, r1
     8ea:	ec 01       	movw	r28, r24
     8ec:	ea 81       	ldd	r30, Y+2	; 0x02
     8ee:	fb 81       	ldd	r31, Y+3	; 0x03
     8f0:	00 81       	ld	r16, Z
     8f2:	11 81       	ldd	r17, Z+1	; 0x01
     8f4:	fa 01       	movw	r30, r20
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	40 17       	cp	r20, r16
     8fc:	51 07       	cpc	r21, r17
     8fe:	39 f1       	breq	.+78     	; 0x94e <check_for_aks_block+0xbc>
     900:	46 17       	cp	r20, r22
     902:	57 07       	cpc	r21, r23
     904:	f9 f0       	breq	.+62     	; 0x944 <check_for_aks_block+0xb2>
     906:	12 96       	adiw	r26, 0x02	; 2
     908:	8c 91       	ld	r24, X
     90a:	12 97       	sbiw	r26, 0x02	; 2
     90c:	f8 12       	cpse	r15, r24
     90e:	1a c0       	rjmp	.+52     	; 0x944 <check_for_aks_block+0xb2>
     910:	80 81       	ld	r24, Z
     912:	85 58       	subi	r24, 0x85	; 133
     914:	82 30       	cpi	r24, 0x02	; 2
     916:	e8 f0       	brcs	.+58     	; 0x952 <check_for_aks_block+0xc0>
     918:	c4 80       	ldd	r12, Z+4	; 0x04
     91a:	d5 80       	ldd	r13, Z+5	; 0x05
     91c:	82 81       	ldd	r24, Z+2	; 0x02
     91e:	93 81       	ldd	r25, Z+3	; 0x03
     920:	ec 01       	movw	r28, r24
     922:	89 81       	ldd	r24, Y+1	; 0x01
     924:	9a 81       	ldd	r25, Y+2	; 0x02
     926:	c8 16       	cp	r12, r24
     928:	d9 06       	cpc	r13, r25
     92a:	60 f4       	brcc	.+24     	; 0x944 <check_for_aks_block+0xb2>
     92c:	8c 19       	sub	r24, r12
     92e:	9d 09       	sbc	r25, r13
     930:	cc 91       	ld	r28, X
     932:	d0 e0       	ldi	r29, 0x00	; 0
     934:	c8 17       	cp	r28, r24
     936:	d9 07       	cpc	r29, r25
     938:	28 f4       	brcc	.+10     	; 0x944 <check_for_aks_block+0xb2>
     93a:	8c 1b       	sub	r24, r28
     93c:	9d 0b       	sbc	r25, r29
     93e:	28 17       	cp	r18, r24
     940:	39 07       	cpc	r19, r25
     942:	38 f0       	brcs	.+14     	; 0x952 <check_for_aks_block+0xc0>
     944:	4f 5f       	subi	r20, 0xFF	; 255
     946:	5f 4f       	sbci	r21, 0xFF	; 255
     948:	13 96       	adiw	r26, 0x03	; 3
     94a:	36 96       	adiw	r30, 0x06	; 6
     94c:	d6 cf       	rjmp	.-84     	; 0x8fa <check_for_aks_block+0x68>
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	01 c0       	rjmp	.+2      	; 0x954 <check_for_aks_block+0xc2>
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	ff 90       	pop	r15
     95e:	df 90       	pop	r13
     960:	cf 90       	pop	r12
     962:	08 95       	ret

00000964 <qtm_update_qtlib_timer>:
     964:	20 91 60 3e 	lds	r18, 0x3E60	; 0x803e60 <qtm_local_ms_timecount>
     968:	30 91 61 3e 	lds	r19, 0x3E61	; 0x803e61 <qtm_local_ms_timecount+0x1>
     96c:	82 0f       	add	r24, r18
     96e:	93 1f       	adc	r25, r19
     970:	80 93 60 3e 	sts	0x3E60, r24	; 0x803e60 <qtm_local_ms_timecount>
     974:	90 93 61 3e 	sts	0x3E61, r25	; 0x803e61 <qtm_local_ms_timecount+0x1>
     978:	08 95       	ret

0000097a <qtm_init_sensor_key>:
     97a:	00 97       	sbiw	r24, 0x00	; 0
     97c:	d9 f0       	breq	.+54     	; 0x9b4 <qtm_init_sensor_key+0x3a>
     97e:	41 15       	cp	r20, r1
     980:	51 05       	cpc	r21, r1
     982:	c1 f0       	breq	.+48     	; 0x9b4 <qtm_init_sensor_key+0x3a>
     984:	26 e0       	ldi	r18, 0x06	; 6
     986:	62 9f       	mul	r22, r18
     988:	b0 01       	movw	r22, r0
     98a:	11 24       	eor	r1, r1
     98c:	dc 01       	movw	r26, r24
     98e:	14 96       	adiw	r26, 0x04	; 4
     990:	ed 91       	ld	r30, X+
     992:	fc 91       	ld	r31, X
     994:	15 97       	sbiw	r26, 0x05	; 5
     996:	e6 0f       	add	r30, r22
     998:	f7 1f       	adc	r31, r23
     99a:	21 e0       	ldi	r18, 0x01	; 1
     99c:	20 83       	st	Z, r18
     99e:	14 96       	adiw	r26, 0x04	; 4
     9a0:	8d 91       	ld	r24, X+
     9a2:	9c 91       	ld	r25, X
     9a4:	15 97       	sbiw	r26, 0x05	; 5
     9a6:	fc 01       	movw	r30, r24
     9a8:	e6 0f       	add	r30, r22
     9aa:	f7 1f       	adc	r31, r23
     9ac:	42 83       	std	Z+2, r20	; 0x02
     9ae:	53 83       	std	Z+3, r21	; 0x03
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	08 95       	ret
     9b4:	8b e0       	ldi	r24, 0x0B	; 11
     9b6:	08 95       	ret

000009b8 <qtm_key_sensors_process>:
     9b8:	2f 92       	push	r2
     9ba:	3f 92       	push	r3
     9bc:	4f 92       	push	r4
     9be:	5f 92       	push	r5
     9c0:	6f 92       	push	r6
     9c2:	7f 92       	push	r7
     9c4:	8f 92       	push	r8
     9c6:	9f 92       	push	r9
     9c8:	af 92       	push	r10
     9ca:	bf 92       	push	r11
     9cc:	cf 92       	push	r12
     9ce:	df 92       	push	r13
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	00 97       	sbiw	r24, 0x00	; 0
     9de:	09 f4       	brne	.+2      	; 0x9e2 <qtm_key_sensors_process+0x2a>
     9e0:	7b c3       	rjmp	.+1782   	; 0x10d8 <qtm_key_sensors_process+0x720>
     9e2:	ec 01       	movw	r28, r24
     9e4:	a1 2c       	mov	r10, r1
     9e6:	b1 2c       	mov	r11, r1
     9e8:	81 2c       	mov	r8, r1
     9ea:	91 2c       	mov	r9, r1
     9ec:	21 2c       	mov	r2, r1
     9ee:	d1 2c       	mov	r13, r1
     9f0:	33 e0       	ldi	r19, 0x03	; 3
     9f2:	c3 2e       	mov	r12, r19
     9f4:	45 e8       	ldi	r20, 0x85	; 133
     9f6:	64 2e       	mov	r6, r20
     9f8:	56 e8       	ldi	r21, 0x86	; 134
     9fa:	75 2e       	mov	r7, r21
     9fc:	67 e0       	ldi	r22, 0x07	; 7
     9fe:	36 2e       	mov	r3, r22
     a00:	72 e0       	ldi	r23, 0x02	; 2
     a02:	47 2e       	mov	r4, r23
     a04:	e8 e0       	ldi	r30, 0x08	; 8
     a06:	5e 2e       	mov	r5, r30
     a08:	ea 81       	ldd	r30, Y+2	; 0x02
     a0a:	fb 81       	ldd	r31, Y+3	; 0x03
     a0c:	80 81       	ld	r24, Z
     a0e:	91 81       	ldd	r25, Z+1	; 0x01
     a10:	88 16       	cp	r8, r24
     a12:	99 06       	cpc	r9, r25
     a14:	08 f0       	brcs	.+2      	; 0xa18 <qtm_key_sensors_process+0x60>
     a16:	a3 c1       	rjmp	.+838    	; 0xd5e <qtm_key_sensors_process+0x3a6>
     a18:	75 01       	movw	r14, r10
     a1a:	ee 0c       	add	r14, r14
     a1c:	ff 1c       	adc	r15, r15
     a1e:	0c 81       	ldd	r16, Y+4	; 0x04
     a20:	1d 81       	ldd	r17, Y+5	; 0x05
     a22:	0e 0d       	add	r16, r14
     a24:	1f 1d       	adc	r17, r15
     a26:	d8 01       	movw	r26, r16
     a28:	8c 91       	ld	r24, X
     a2a:	84 30       	cpi	r24, 0x04	; 4
     a2c:	09 f4       	brne	.+2      	; 0xa30 <qtm_key_sensors_process+0x78>
     a2e:	a1 c0       	rjmp	.+322    	; 0xb72 <qtm_key_sensors_process+0x1ba>
     a30:	38 f4       	brcc	.+14     	; 0xa40 <qtm_key_sensors_process+0x88>
     a32:	82 30       	cpi	r24, 0x02	; 2
     a34:	01 f1       	breq	.+64     	; 0xa76 <qtm_key_sensors_process+0xbe>
     a36:	08 f0       	brcs	.+2      	; 0xa3a <qtm_key_sensors_process+0x82>
     a38:	49 c0       	rjmp	.+146    	; 0xacc <qtm_key_sensors_process+0x114>
     a3a:	81 30       	cpi	r24, 0x01	; 1
     a3c:	59 f0       	breq	.+22     	; 0xa54 <qtm_key_sensors_process+0x9c>
     a3e:	88 c1       	rjmp	.+784    	; 0xd50 <qtm_key_sensors_process+0x398>
     a40:	85 38       	cpi	r24, 0x85	; 133
     a42:	09 f4       	brne	.+2      	; 0xa46 <qtm_key_sensors_process+0x8e>
     a44:	c0 c0       	rjmp	.+384    	; 0xbc6 <qtm_key_sensors_process+0x20e>
     a46:	86 38       	cpi	r24, 0x86	; 134
     a48:	09 f4       	brne	.+2      	; 0xa4c <qtm_key_sensors_process+0x94>
     a4a:	f4 c0       	rjmp	.+488    	; 0xc34 <qtm_key_sensors_process+0x27c>
     a4c:	87 30       	cpi	r24, 0x07	; 7
     a4e:	09 f0       	breq	.+2      	; 0xa52 <qtm_key_sensors_process+0x9a>
     a50:	7f c1       	rjmp	.+766    	; 0xd50 <qtm_key_sensors_process+0x398>
     a52:	35 c1       	rjmp	.+618    	; 0xcbe <qtm_key_sensors_process+0x306>
     a54:	d8 01       	movw	r26, r16
     a56:	12 96       	adiw	r26, 0x02	; 2
     a58:	ed 91       	ld	r30, X+
     a5a:	fc 91       	ld	r31, X
     a5c:	13 97       	sbiw	r26, 0x03	; 3
     a5e:	80 81       	ld	r24, Z
     a60:	8e 71       	andi	r24, 0x1E	; 30
     a62:	09 f0       	breq	.+2      	; 0xa66 <qtm_key_sensors_process+0xae>
     a64:	67 c1       	rjmp	.+718    	; 0xd34 <qtm_key_sensors_process+0x37c>
     a66:	4c 92       	st	X, r4
     a68:	8c 81       	ldd	r24, Y+4	; 0x04
     a6a:	9d 81       	ldd	r25, Y+5	; 0x05
     a6c:	fc 01       	movw	r30, r24
     a6e:	ee 0d       	add	r30, r14
     a70:	ff 1d       	adc	r31, r15
     a72:	51 82       	std	Z+1, r5	; 0x01
     a74:	5f c1       	rjmp	.+702    	; 0xd34 <qtm_key_sensors_process+0x37c>
     a76:	f8 01       	movw	r30, r16
     a78:	21 81       	ldd	r18, Z+1	; 0x01
     a7a:	22 23       	and	r18, r18
     a7c:	29 f1       	breq	.+74     	; 0xac8 <qtm_key_sensors_process+0x110>
     a7e:	02 80       	ldd	r0, Z+2	; 0x02
     a80:	f3 81       	ldd	r31, Z+3	; 0x03
     a82:	e0 2d       	mov	r30, r0
     a84:	25 30       	cpi	r18, 0x05	; 5
     a86:	20 f0       	brcs	.+8      	; 0xa90 <qtm_key_sensors_process+0xd8>
     a88:	81 81       	ldd	r24, Z+1	; 0x01
     a8a:	92 81       	ldd	r25, Z+2	; 0x02
     a8c:	d8 01       	movw	r26, r16
     a8e:	0e c0       	rjmp	.+28     	; 0xaac <qtm_key_sensors_process+0xf4>
     a90:	d8 01       	movw	r26, r16
     a92:	14 96       	adiw	r26, 0x04	; 4
     a94:	8d 91       	ld	r24, X+
     a96:	9c 91       	ld	r25, X
     a98:	15 97       	sbiw	r26, 0x05	; 5
     a9a:	41 81       	ldd	r20, Z+1	; 0x01
     a9c:	52 81       	ldd	r21, Z+2	; 0x02
     a9e:	84 17       	cp	r24, r20
     aa0:	95 07       	cpc	r25, r21
     aa2:	69 f0       	breq	.+26     	; 0xabe <qtm_key_sensors_process+0x106>
     aa4:	48 17       	cp	r20, r24
     aa6:	59 07       	cpc	r21, r25
     aa8:	30 f4       	brcc	.+12     	; 0xab6 <qtm_key_sensors_process+0xfe>
     aaa:	01 97       	sbiw	r24, 0x01	; 1
     aac:	14 96       	adiw	r26, 0x04	; 4
     aae:	8d 93       	st	X+, r24
     ab0:	9c 93       	st	X, r25
     ab2:	15 97       	sbiw	r26, 0x05	; 5
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <qtm_key_sensors_process+0x106>
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	f8 01       	movw	r30, r16
     aba:	84 83       	std	Z+4, r24	; 0x04
     abc:	95 83       	std	Z+5, r25	; 0x05
     abe:	21 50       	subi	r18, 0x01	; 1
     ac0:	d8 01       	movw	r26, r16
     ac2:	11 96       	adiw	r26, 0x01	; 1
     ac4:	2c 93       	st	X, r18
     ac6:	36 c1       	rjmp	.+620    	; 0xd34 <qtm_key_sensors_process+0x37c>
     ac8:	f8 01       	movw	r30, r16
     aca:	2f c1       	rjmp	.+606    	; 0xd2a <qtm_key_sensors_process+0x372>
     acc:	d8 01       	movw	r26, r16
     ace:	14 96       	adiw	r26, 0x04	; 4
     ad0:	2d 91       	ld	r18, X+
     ad2:	3c 91       	ld	r19, X
     ad4:	15 97       	sbiw	r26, 0x05	; 5
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	8d 91       	ld	r24, X+
     ada:	9c 91       	ld	r25, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	dc 01       	movw	r26, r24
     ae0:	11 96       	adiw	r26, 0x01	; 1
     ae2:	4d 91       	ld	r20, X+
     ae4:	5c 91       	ld	r21, X
     ae6:	12 97       	sbiw	r26, 0x02	; 2
     ae8:	24 17       	cp	r18, r20
     aea:	35 07       	cpc	r19, r21
     aec:	09 f4       	brne	.+2      	; 0xaf0 <qtm_key_sensors_process+0x138>
     aee:	30 c1       	rjmp	.+608    	; 0xd50 <qtm_key_sensors_process+0x398>
     af0:	8e 81       	ldd	r24, Y+6	; 0x06
     af2:	9f 81       	ldd	r25, Y+7	; 0x07
     af4:	42 17       	cp	r20, r18
     af6:	53 07       	cpc	r21, r19
     af8:	e0 f4       	brcc	.+56     	; 0xb32 <qtm_key_sensors_process+0x17a>
     afa:	24 1b       	sub	r18, r20
     afc:	35 0b       	sbc	r19, r21
     afe:	dc 01       	movw	r26, r24
     b00:	aa 0d       	add	r26, r10
     b02:	bb 1d       	adc	r27, r11
     b04:	8c 91       	ld	r24, X
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	05 80       	ldd	r0, Z+5	; 0x05
     b0a:	02 c0       	rjmp	.+4      	; 0xb10 <qtm_key_sensors_process+0x158>
     b0c:	95 95       	asr	r25
     b0e:	87 95       	ror	r24
     b10:	0a 94       	dec	r0
     b12:	e2 f7       	brpl	.-8      	; 0xb0c <qtm_key_sensors_process+0x154>
     b14:	99 27       	eor	r25, r25
     b16:	28 17       	cp	r18, r24
     b18:	39 07       	cpc	r19, r25
     b1a:	08 f4       	brcc	.+2      	; 0xb1e <qtm_key_sensors_process+0x166>
     b1c:	19 c1       	rjmp	.+562    	; 0xd50 <qtm_key_sensors_process+0x398>
     b1e:	84 81       	ldd	r24, Z+4	; 0x04
     b20:	88 23       	and	r24, r24
     b22:	09 f4       	brne	.+2      	; 0xb26 <qtm_key_sensors_process+0x16e>
     b24:	15 c1       	rjmp	.+554    	; 0xd50 <qtm_key_sensors_process+0x398>
     b26:	f8 01       	movw	r30, r16
     b28:	30 82       	st	Z, r3
     b2a:	ea 81       	ldd	r30, Y+2	; 0x02
     b2c:	fb 81       	ldd	r31, Y+3	; 0x03
     b2e:	24 81       	ldd	r18, Z+4	; 0x04
     b30:	19 c0       	rjmp	.+50     	; 0xb64 <qtm_key_sensors_process+0x1ac>
     b32:	fc 01       	movw	r30, r24
     b34:	ea 0d       	add	r30, r10
     b36:	fb 1d       	adc	r31, r11
     b38:	42 1b       	sub	r20, r18
     b3a:	53 0b       	sbc	r21, r19
     b3c:	80 81       	ld	r24, Z
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	48 17       	cp	r20, r24
     b42:	59 07       	cpc	r21, r25
     b44:	08 f4       	brcc	.+2      	; 0xb48 <qtm_key_sensors_process+0x190>
     b46:	04 c1       	rjmp	.+520    	; 0xd50 <qtm_key_sensors_process+0x398>
     b48:	82 81       	ldd	r24, Z+2	; 0x02
     b4a:	88 23       	and	r24, r24
     b4c:	29 f0       	breq	.+10     	; 0xb58 <qtm_key_sensors_process+0x1a0>
     b4e:	b4 01       	movw	r22, r8
     b50:	ce 01       	movw	r24, r28
     b52:	9f de       	rcall	.-706    	; 0x892 <check_for_aks_block>
     b54:	81 11       	cpse	r24, r1
     b56:	fc c0       	rjmp	.+504    	; 0xd50 <qtm_key_sensors_process+0x398>
     b58:	e4 e0       	ldi	r30, 0x04	; 4
     b5a:	d8 01       	movw	r26, r16
     b5c:	ec 93       	st	X, r30
     b5e:	ea 81       	ldd	r30, Y+2	; 0x02
     b60:	fb 81       	ldd	r31, Y+3	; 0x03
     b62:	22 81       	ldd	r18, Z+2	; 0x02
     b64:	8c 81       	ldd	r24, Y+4	; 0x04
     b66:	9d 81       	ldd	r25, Y+5	; 0x05
     b68:	fc 01       	movw	r30, r24
     b6a:	ee 0d       	add	r30, r14
     b6c:	ff 1d       	adc	r31, r15
     b6e:	21 83       	std	Z+1, r18	; 0x01
     b70:	e1 c0       	rjmp	.+450    	; 0xd34 <qtm_key_sensors_process+0x37c>
     b72:	d8 01       	movw	r26, r16
     b74:	14 96       	adiw	r26, 0x04	; 4
     b76:	2d 91       	ld	r18, X+
     b78:	3c 91       	ld	r19, X
     b7a:	15 97       	sbiw	r26, 0x05	; 5
     b7c:	12 96       	adiw	r26, 0x02	; 2
     b7e:	ed 91       	ld	r30, X+
     b80:	fc 91       	ld	r31, X
     b82:	13 97       	sbiw	r26, 0x03	; 3
     b84:	81 81       	ldd	r24, Z+1	; 0x01
     b86:	92 81       	ldd	r25, Z+2	; 0x02
     b88:	82 17       	cp	r24, r18
     b8a:	93 07       	cpc	r25, r19
     b8c:	08 f4       	brcc	.+2      	; 0xb90 <qtm_key_sensors_process+0x1d8>
     b8e:	d6 c0       	rjmp	.+428    	; 0xd3c <qtm_key_sensors_process+0x384>
     b90:	ee 81       	ldd	r30, Y+6	; 0x06
     b92:	ff 81       	ldd	r31, Y+7	; 0x07
     b94:	ea 0d       	add	r30, r10
     b96:	fb 1d       	adc	r31, r11
     b98:	82 1b       	sub	r24, r18
     b9a:	93 0b       	sbc	r25, r19
     b9c:	20 81       	ld	r18, Z
     b9e:	30 e0       	ldi	r19, 0x00	; 0
     ba0:	28 17       	cp	r18, r24
     ba2:	39 07       	cpc	r19, r25
     ba4:	08 f0       	brcs	.+2      	; 0xba8 <qtm_key_sensors_process+0x1f0>
     ba6:	ae c0       	rjmp	.+348    	; 0xd04 <qtm_key_sensors_process+0x34c>
     ba8:	82 81       	ldd	r24, Z+2	; 0x02
     baa:	88 23       	and	r24, r24
     bac:	29 f0       	breq	.+10     	; 0xbb8 <qtm_key_sensors_process+0x200>
     bae:	b4 01       	movw	r22, r8
     bb0:	ce 01       	movw	r24, r28
     bb2:	6f de       	rcall	.-802    	; 0x892 <check_for_aks_block>
     bb4:	81 11       	cpse	r24, r1
     bb6:	cc c0       	rjmp	.+408    	; 0xd50 <qtm_key_sensors_process+0x398>
     bb8:	f8 01       	movw	r30, r16
     bba:	81 81       	ldd	r24, Z+1	; 0x01
     bbc:	88 23       	and	r24, r24
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <qtm_key_sensors_process+0x20a>
     bc0:	67 c0       	rjmp	.+206    	; 0xc90 <qtm_key_sensors_process+0x2d8>
     bc2:	81 50       	subi	r24, 0x01	; 1
     bc4:	b6 c0       	rjmp	.+364    	; 0xd32 <qtm_key_sensors_process+0x37a>
     bc6:	a8 81       	ld	r26, Y
     bc8:	b9 81       	ldd	r27, Y+1	; 0x01
     bca:	80 85       	ldd	r24, Z+8	; 0x08
     bcc:	13 96       	adiw	r26, 0x03	; 3
     bce:	8c 93       	st	X, r24
     bd0:	ec 81       	ldd	r30, Y+4	; 0x04
     bd2:	fd 81       	ldd	r31, Y+5	; 0x05
     bd4:	ee 0d       	add	r30, r14
     bd6:	ff 1d       	adc	r31, r15
     bd8:	44 81       	ldd	r20, Z+4	; 0x04
     bda:	55 81       	ldd	r21, Z+5	; 0x05
     bdc:	a2 81       	ldd	r26, Z+2	; 0x02
     bde:	b3 81       	ldd	r27, Z+3	; 0x03
     be0:	11 96       	adiw	r26, 0x01	; 1
     be2:	8d 91       	ld	r24, X+
     be4:	9c 91       	ld	r25, X
     be6:	12 97       	sbiw	r26, 0x02	; 2
     be8:	84 17       	cp	r24, r20
     bea:	95 07       	cpc	r25, r21
     bec:	c0 f0       	brcs	.+48     	; 0xc1e <qtm_key_sensors_process+0x266>
     bee:	ae 81       	ldd	r26, Y+6	; 0x06
     bf0:	bf 81       	ldd	r27, Y+7	; 0x07
     bf2:	aa 0d       	add	r26, r10
     bf4:	bb 1d       	adc	r27, r11
     bf6:	6c 91       	ld	r22, X
     bf8:	26 2f       	mov	r18, r22
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	11 96       	adiw	r26, 0x01	; 1
     bfe:	7c 91       	ld	r23, X
     c00:	7f 5f       	subi	r23, 0xFF	; 255
     c02:	02 c0       	rjmp	.+4      	; 0xc08 <qtm_key_sensors_process+0x250>
     c04:	35 95       	asr	r19
     c06:	27 95       	ror	r18
     c08:	7a 95       	dec	r23
     c0a:	e2 f7       	brpl	.-8      	; 0xc04 <qtm_key_sensors_process+0x24c>
     c0c:	84 1b       	sub	r24, r20
     c0e:	95 0b       	sbc	r25, r21
     c10:	62 1b       	sub	r22, r18
     c12:	26 2f       	mov	r18, r22
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	28 17       	cp	r18, r24
     c18:	39 07       	cpc	r19, r25
     c1a:	08 f4       	brcc	.+2      	; 0xc1e <qtm_key_sensors_process+0x266>
     c1c:	97 c0       	rjmp	.+302    	; 0xd4c <qtm_key_sensors_process+0x394>
     c1e:	70 82       	st	Z, r7
     c20:	ea 81       	ldd	r30, Y+2	; 0x02
     c22:	fb 81       	ldd	r31, Y+3	; 0x03
     c24:	22 81       	ldd	r18, Z+2	; 0x02
     c26:	8c 81       	ldd	r24, Y+4	; 0x04
     c28:	9d 81       	ldd	r25, Y+5	; 0x05
     c2a:	fc 01       	movw	r30, r24
     c2c:	ee 0d       	add	r30, r14
     c2e:	ff 1d       	adc	r31, r15
     c30:	21 83       	std	Z+1, r18	; 0x01
     c32:	42 c0       	rjmp	.+132    	; 0xcb8 <qtm_key_sensors_process+0x300>
     c34:	d8 01       	movw	r26, r16
     c36:	14 96       	adiw	r26, 0x04	; 4
     c38:	6d 91       	ld	r22, X+
     c3a:	7c 91       	ld	r23, X
     c3c:	15 97       	sbiw	r26, 0x05	; 5
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	ed 91       	ld	r30, X+
     c42:	fc 91       	ld	r31, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	21 81       	ldd	r18, Z+1	; 0x01
     c48:	32 81       	ldd	r19, Z+2	; 0x02
     c4a:	26 17       	cp	r18, r22
     c4c:	37 07       	cpc	r19, r23
     c4e:	58 f4       	brcc	.+22     	; 0xc66 <qtm_key_sensors_process+0x2ae>
     c50:	11 96       	adiw	r26, 0x01	; 1
     c52:	8c 91       	ld	r24, X
     c54:	11 97       	sbiw	r26, 0x01	; 1
     c56:	81 11       	cpse	r24, r1
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <qtm_key_sensors_process+0x2a6>
     c5a:	cc 92       	st	X, r12
     c5c:	77 c0       	rjmp	.+238    	; 0xd4c <qtm_key_sensors_process+0x394>
     c5e:	81 50       	subi	r24, 0x01	; 1
     c60:	f8 01       	movw	r30, r16
     c62:	81 83       	std	Z+1, r24	; 0x01
     c64:	73 c0       	rjmp	.+230    	; 0xd4c <qtm_key_sensors_process+0x394>
     c66:	ee 81       	ldd	r30, Y+6	; 0x06
     c68:	ff 81       	ldd	r31, Y+7	; 0x07
     c6a:	ea 0d       	add	r30, r10
     c6c:	fb 1d       	adc	r31, r11
     c6e:	80 81       	ld	r24, Z
     c70:	48 2f       	mov	r20, r24
     c72:	50 e0       	ldi	r21, 0x00	; 0
     c74:	91 81       	ldd	r25, Z+1	; 0x01
     c76:	9f 5f       	subi	r25, 0xFF	; 255
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <qtm_key_sensors_process+0x2c6>
     c7a:	55 95       	asr	r21
     c7c:	47 95       	ror	r20
     c7e:	9a 95       	dec	r25
     c80:	e2 f7       	brpl	.-8      	; 0xc7a <qtm_key_sensors_process+0x2c2>
     c82:	26 1b       	sub	r18, r22
     c84:	37 0b       	sbc	r19, r23
     c86:	84 1b       	sub	r24, r20
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	82 17       	cp	r24, r18
     c8c:	93 07       	cpc	r25, r19
     c8e:	60 f4       	brcc	.+24     	; 0xca8 <qtm_key_sensors_process+0x2f0>
     c90:	d8 01       	movw	r26, r16
     c92:	6c 92       	st	X, r6
     c94:	ea 81       	ldd	r30, Y+2	; 0x02
     c96:	fb 81       	ldd	r31, Y+3	; 0x03
     c98:	23 81       	ldd	r18, Z+3	; 0x03
     c9a:	8c 81       	ldd	r24, Y+4	; 0x04
     c9c:	9d 81       	ldd	r25, Y+5	; 0x05
     c9e:	fc 01       	movw	r30, r24
     ca0:	ee 0d       	add	r30, r14
     ca2:	ff 1d       	adc	r31, r15
     ca4:	21 83       	std	Z+1, r18	; 0x01
     ca6:	52 c0       	rjmp	.+164    	; 0xd4c <qtm_key_sensors_process+0x394>
     ca8:	f8 01       	movw	r30, r16
     caa:	81 81       	ldd	r24, Z+1	; 0x01
     cac:	81 11       	cpse	r24, r1
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <qtm_key_sensors_process+0x2fc>
     cb0:	c0 82       	st	Z, r12
     cb2:	4c c0       	rjmp	.+152    	; 0xd4c <qtm_key_sensors_process+0x394>
     cb4:	81 50       	subi	r24, 0x01	; 1
     cb6:	81 83       	std	Z+1, r24	; 0x01
     cb8:	22 24       	eor	r2, r2
     cba:	23 94       	inc	r2
     cbc:	3b c0       	rjmp	.+118    	; 0xd34 <qtm_key_sensors_process+0x37c>
     cbe:	d8 01       	movw	r26, r16
     cc0:	14 96       	adiw	r26, 0x04	; 4
     cc2:	2d 91       	ld	r18, X+
     cc4:	3c 91       	ld	r19, X
     cc6:	15 97       	sbiw	r26, 0x05	; 5
     cc8:	12 96       	adiw	r26, 0x02	; 2
     cca:	8d 91       	ld	r24, X+
     ccc:	9c 91       	ld	r25, X
     cce:	13 97       	sbiw	r26, 0x03	; 3
     cd0:	dc 01       	movw	r26, r24
     cd2:	11 96       	adiw	r26, 0x01	; 1
     cd4:	8d 91       	ld	r24, X+
     cd6:	9c 91       	ld	r25, X
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	82 17       	cp	r24, r18
     cdc:	93 07       	cpc	r25, r19
     cde:	68 f5       	brcc	.+90     	; 0xd3a <qtm_key_sensors_process+0x382>
     ce0:	28 1b       	sub	r18, r24
     ce2:	39 0b       	sbc	r19, r25
     ce4:	ae 81       	ldd	r26, Y+6	; 0x06
     ce6:	bf 81       	ldd	r27, Y+7	; 0x07
     ce8:	aa 0d       	add	r26, r10
     cea:	bb 1d       	adc	r27, r11
     cec:	8c 91       	ld	r24, X
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	05 80       	ldd	r0, Z+5	; 0x05
     cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <qtm_key_sensors_process+0x340>
     cf4:	95 95       	asr	r25
     cf6:	87 95       	ror	r24
     cf8:	0a 94       	dec	r0
     cfa:	e2 f7       	brpl	.-8      	; 0xcf4 <qtm_key_sensors_process+0x33c>
     cfc:	99 27       	eor	r25, r25
     cfe:	28 17       	cp	r18, r24
     d00:	39 07       	cpc	r19, r25
     d02:	18 f4       	brcc	.+6      	; 0xd0a <qtm_key_sensors_process+0x352>
     d04:	f8 01       	movw	r30, r16
     d06:	c0 82       	st	Z, r12
     d08:	1a c0       	rjmp	.+52     	; 0xd3e <qtm_key_sensors_process+0x386>
     d0a:	d8 01       	movw	r26, r16
     d0c:	11 96       	adiw	r26, 0x01	; 1
     d0e:	8c 91       	ld	r24, X
     d10:	11 97       	sbiw	r26, 0x01	; 1
     d12:	81 11       	cpse	r24, r1
     d14:	0c c0       	rjmp	.+24     	; 0xd2e <qtm_key_sensors_process+0x376>
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	8c 93       	st	X, r24
     d1a:	8c 81       	ldd	r24, Y+4	; 0x04
     d1c:	9d 81       	ldd	r25, Y+5	; 0x05
     d1e:	fc 01       	movw	r30, r24
     d20:	ee 0d       	add	r30, r14
     d22:	ff 1d       	adc	r31, r15
     d24:	02 80       	ldd	r0, Z+2	; 0x02
     d26:	f3 81       	ldd	r31, Z+3	; 0x03
     d28:	e0 2d       	mov	r30, r0
     d2a:	c0 82       	st	Z, r12
     d2c:	11 c0       	rjmp	.+34     	; 0xd50 <qtm_key_sensors_process+0x398>
     d2e:	81 50       	subi	r24, 0x01	; 1
     d30:	f8 01       	movw	r30, r16
     d32:	81 83       	std	Z+1, r24	; 0x01
     d34:	dd 24       	eor	r13, r13
     d36:	d3 94       	inc	r13
     d38:	0b c0       	rjmp	.+22     	; 0xd50 <qtm_key_sensors_process+0x398>
     d3a:	d8 01       	movw	r26, r16
     d3c:	cc 92       	st	X, r12
     d3e:	8c 81       	ldd	r24, Y+4	; 0x04
     d40:	9d 81       	ldd	r25, Y+5	; 0x05
     d42:	fc 01       	movw	r30, r24
     d44:	ee 0d       	add	r30, r14
     d46:	ff 1d       	adc	r31, r15
     d48:	11 82       	std	Z+1, r1	; 0x01
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <qtm_key_sensors_process+0x398>
     d4c:	22 24       	eor	r2, r2
     d4e:	23 94       	inc	r2
     d50:	bf ef       	ldi	r27, 0xFF	; 255
     d52:	8b 1a       	sub	r8, r27
     d54:	9b 0a       	sbc	r9, r27
     d56:	e3 e0       	ldi	r30, 0x03	; 3
     d58:	ae 0e       	add	r10, r30
     d5a:	b1 1c       	adc	r11, r1
     d5c:	55 ce       	rjmp	.-854    	; 0xa08 <qtm_key_sensors_process+0x50>
     d5e:	e8 81       	ld	r30, Y
     d60:	f9 81       	ldd	r31, Y+1	; 0x01
     d62:	80 81       	ld	r24, Z
     d64:	87 ff       	sbrs	r24, 7
     d66:	23 c0       	rjmp	.+70     	; 0xdae <qtm_key_sensors_process+0x3f6>
     d68:	40 e0       	ldi	r20, 0x00	; 0
     d6a:	50 e0       	ldi	r21, 0x00	; 0
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	ea 81       	ldd	r30, Y+2	; 0x02
     d72:	fb 81       	ldd	r31, Y+3	; 0x03
     d74:	80 81       	ld	r24, Z
     d76:	91 81       	ldd	r25, Z+1	; 0x01
     d78:	28 17       	cp	r18, r24
     d7a:	39 07       	cpc	r19, r25
     d7c:	98 f4       	brcc	.+38     	; 0xda4 <qtm_key_sensors_process+0x3ec>
     d7e:	ec 81       	ldd	r30, Y+4	; 0x04
     d80:	fd 81       	ldd	r31, Y+5	; 0x05
     d82:	e4 0f       	add	r30, r20
     d84:	f5 1f       	adc	r31, r21
     d86:	a2 81       	ldd	r26, Z+2	; 0x02
     d88:	b3 81       	ldd	r27, Z+3	; 0x03
     d8a:	8c 91       	ld	r24, X
     d8c:	80 fd       	sbrc	r24, 0
     d8e:	05 c0       	rjmp	.+10     	; 0xd9a <qtm_key_sensors_process+0x3e2>
     d90:	90 81       	ld	r25, Z
     d92:	97 7f       	andi	r25, 0xF7	; 247
     d94:	11 f0       	breq	.+4      	; 0xd9a <qtm_key_sensors_process+0x3e2>
     d96:	81 60       	ori	r24, 0x01	; 1
     d98:	8c 93       	st	X, r24
     d9a:	2f 5f       	subi	r18, 0xFF	; 255
     d9c:	3f 4f       	sbci	r19, 0xFF	; 255
     d9e:	4a 5f       	subi	r20, 0xFA	; 250
     da0:	5f 4f       	sbci	r21, 0xFF	; 255
     da2:	e6 cf       	rjmp	.-52     	; 0xd70 <qtm_key_sensors_process+0x3b8>
     da4:	e8 81       	ld	r30, Y
     da6:	f9 81       	ldd	r31, Y+1	; 0x01
     da8:	80 81       	ld	r24, Z
     daa:	8f 77       	andi	r24, 0x7F	; 127
     dac:	80 83       	st	Z, r24
     dae:	d1 10       	cpse	r13, r1
     db0:	07 c0       	rjmp	.+14     	; 0xdc0 <qtm_key_sensors_process+0x408>
     db2:	e8 81       	ld	r30, Y
     db4:	f9 81       	ldd	r31, Y+1	; 0x01
     db6:	21 10       	cpse	r2, r1
     db8:	6f c0       	rjmp	.+222    	; 0xe98 <qtm_key_sensors_process+0x4e0>
     dba:	80 81       	ld	r24, Z
     dbc:	8e 7f       	andi	r24, 0xFE	; 254
     dbe:	6e c0       	rjmp	.+220    	; 0xe9c <qtm_key_sensors_process+0x4e4>
     dc0:	ea 81       	ldd	r30, Y+2	; 0x02
     dc2:	fb 81       	ldd	r31, Y+3	; 0x03
     dc4:	81 85       	ldd	r24, Z+9	; 0x09
     dc6:	88 23       	and	r24, r24
     dc8:	a1 f3       	breq	.-24     	; 0xdb2 <qtm_key_sensors_process+0x3fa>
     dca:	e8 81       	ld	r30, Y
     dcc:	f9 81       	ldd	r31, Y+1	; 0x01
     dce:	80 81       	ld	r24, Z
     dd0:	80 68       	ori	r24, 0x80	; 128
     dd2:	80 83       	st	Z, r24
     dd4:	ea 81       	ldd	r30, Y+2	; 0x02
     dd6:	fb 81       	ldd	r31, Y+3	; 0x03
     dd8:	81 85       	ldd	r24, Z+9	; 0x09
     dda:	81 30       	cpi	r24, 0x01	; 1
     ddc:	51 f7       	brne	.-44     	; 0xdb2 <qtm_key_sensors_process+0x3fa>
     dde:	40 e0       	ldi	r20, 0x00	; 0
     de0:	50 e0       	ldi	r21, 0x00	; 0
     de2:	20 e0       	ldi	r18, 0x00	; 0
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	96 e0       	ldi	r25, 0x06	; 6
     de8:	d9 2e       	mov	r13, r25
     dea:	ea 81       	ldd	r30, Y+2	; 0x02
     dec:	fb 81       	ldd	r31, Y+3	; 0x03
     dee:	60 81       	ld	r22, Z
     df0:	71 81       	ldd	r23, Z+1	; 0x01
     df2:	26 17       	cp	r18, r22
     df4:	37 07       	cpc	r19, r23
     df6:	e8 f6       	brcc	.-70     	; 0xdb2 <qtm_key_sensors_process+0x3fa>
     df8:	0c 81       	ldd	r16, Y+4	; 0x04
     dfa:	1d 81       	ldd	r17, Y+5	; 0x05
     dfc:	fa 01       	movw	r30, r20
     dfe:	ee 0f       	add	r30, r30
     e00:	ff 1f       	adc	r31, r31
     e02:	e0 0f       	add	r30, r16
     e04:	f1 1f       	adc	r31, r17
     e06:	80 81       	ld	r24, Z
     e08:	98 2f       	mov	r25, r24
     e0a:	97 7f       	andi	r25, 0xF7	; 247
     e0c:	a1 f1       	breq	.+104    	; 0xe76 <qtm_key_sensors_process+0x4be>
     e0e:	85 38       	cpi	r24, 0x85	; 133
     e10:	11 f0       	breq	.+4      	; 0xe16 <qtm_key_sensors_process+0x45e>
     e12:	83 30       	cpi	r24, 0x03	; 3
     e14:	b1 f5       	brne	.+108    	; 0xe82 <qtm_key_sensors_process+0x4ca>
     e16:	ee 80       	ldd	r14, Y+6	; 0x06
     e18:	ff 80       	ldd	r15, Y+7	; 0x07
     e1a:	d7 01       	movw	r26, r14
     e1c:	a4 0f       	add	r26, r20
     e1e:	b5 1f       	adc	r27, r21
     e20:	12 96       	adiw	r26, 0x02	; 2
     e22:	bc 90       	ld	r11, X
     e24:	bb 20       	and	r11, r11
     e26:	39 f1       	breq	.+78     	; 0xe76 <qtm_key_sensors_process+0x4be>
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	c1 2c       	mov	r12, r1
     e2e:	86 17       	cp	r24, r22
     e30:	97 07       	cpc	r25, r23
     e32:	f8 f4       	brcc	.+62     	; 0xe72 <qtm_key_sensors_process+0x4ba>
     e34:	28 17       	cp	r18, r24
     e36:	39 07       	cpc	r19, r25
     e38:	d1 f0       	breq	.+52     	; 0xe6e <qtm_key_sensors_process+0x4b6>
     e3a:	d8 9e       	mul	r13, r24
     e3c:	d0 01       	movw	r26, r0
     e3e:	d9 9e       	mul	r13, r25
     e40:	b0 0d       	add	r27, r0
     e42:	11 24       	eor	r1, r1
     e44:	a0 0f       	add	r26, r16
     e46:	b1 1f       	adc	r27, r17
     e48:	ac 91       	ld	r26, X
     e4a:	a4 30       	cpi	r26, 0x04	; 4
     e4c:	11 f0       	breq	.+4      	; 0xe52 <qtm_key_sensors_process+0x49a>
     e4e:	a6 38       	cpi	r26, 0x86	; 134
     e50:	71 f4       	brne	.+28     	; 0xe6e <qtm_key_sensors_process+0x4b6>
     e52:	dc 01       	movw	r26, r24
     e54:	aa 0f       	add	r26, r26
     e56:	bb 1f       	adc	r27, r27
     e58:	a8 0f       	add	r26, r24
     e5a:	b9 1f       	adc	r27, r25
     e5c:	ae 0d       	add	r26, r14
     e5e:	bf 1d       	adc	r27, r15
     e60:	12 96       	adiw	r26, 0x02	; 2
     e62:	ac 91       	ld	r26, X
     e64:	ba 12       	cpse	r11, r26
     e66:	03 c0       	rjmp	.+6      	; 0xe6e <qtm_key_sensors_process+0x4b6>
     e68:	cb 01       	movw	r24, r22
     e6a:	cc 24       	eor	r12, r12
     e6c:	c3 94       	inc	r12
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	de cf       	rjmp	.-68     	; 0xe2e <qtm_key_sensors_process+0x476>
     e72:	c1 10       	cpse	r12, r1
     e74:	06 c0       	rjmp	.+12     	; 0xe82 <qtm_key_sensors_process+0x4ca>
     e76:	02 80       	ldd	r0, Z+2	; 0x02
     e78:	f3 81       	ldd	r31, Z+3	; 0x03
     e7a:	e0 2d       	mov	r30, r0
     e7c:	80 81       	ld	r24, Z
     e7e:	8e 7f       	andi	r24, 0xFE	; 254
     e80:	05 c0       	rjmp	.+10     	; 0xe8c <qtm_key_sensors_process+0x4d4>
     e82:	02 80       	ldd	r0, Z+2	; 0x02
     e84:	f3 81       	ldd	r31, Z+3	; 0x03
     e86:	e0 2d       	mov	r30, r0
     e88:	80 81       	ld	r24, Z
     e8a:	81 60       	ori	r24, 0x01	; 1
     e8c:	80 83       	st	Z, r24
     e8e:	2f 5f       	subi	r18, 0xFF	; 255
     e90:	3f 4f       	sbci	r19, 0xFF	; 255
     e92:	4d 5f       	subi	r20, 0xFD	; 253
     e94:	5f 4f       	sbci	r21, 0xFF	; 255
     e96:	a9 cf       	rjmp	.-174    	; 0xdea <qtm_key_sensors_process+0x432>
     e98:	80 81       	ld	r24, Z
     e9a:	81 60       	ori	r24, 0x01	; 1
     e9c:	80 83       	st	Z, r24
     e9e:	80 91 60 3e 	lds	r24, 0x3E60	; 0x803e60 <qtm_local_ms_timecount>
     ea2:	90 91 61 3e 	lds	r25, 0x3E61	; 0x803e61 <qtm_local_ms_timecount+0x1>
     ea6:	e8 81       	ld	r30, Y
     ea8:	f9 81       	ldd	r31, Y+1	; 0x01
     eaa:	21 81       	ldd	r18, Z+1	; 0x01
     eac:	32 81       	ldd	r19, Z+2	; 0x02
     eae:	a9 01       	movw	r20, r18
     eb0:	48 53       	subi	r20, 0x38	; 56
     eb2:	5f 4f       	sbci	r21, 0xFF	; 255
     eb4:	48 17       	cp	r20, r24
     eb6:	59 07       	cpc	r21, r25
     eb8:	38 f4       	brcc	.+14     	; 0xec8 <qtm_key_sensors_process+0x510>
     eba:	82 1b       	sub	r24, r18
     ebc:	93 0b       	sbc	r25, r19
     ebe:	aa 24       	eor	r10, r10
     ec0:	a3 94       	inc	r10
     ec2:	a3 e0       	ldi	r26, 0x03	; 3
     ec4:	ba 2e       	mov	r11, r26
     ec6:	44 c0       	rjmp	.+136    	; 0xf50 <qtm_key_sensors_process+0x598>
     ec8:	82 17       	cp	r24, r18
     eca:	93 07       	cpc	r25, r19
     ecc:	10 f0       	brcs	.+4      	; 0xed2 <qtm_key_sensors_process+0x51a>
     ece:	80 e0       	ldi	r24, 0x00	; 0
     ed0:	04 c1       	rjmp	.+520    	; 0x10da <qtm_key_sensors_process+0x722>
     ed2:	82 1b       	sub	r24, r18
     ed4:	93 0b       	sbc	r25, r19
     ed6:	01 97       	sbiw	r24, 0x01	; 1
     ed8:	89 3c       	cpi	r24, 0xC9	; 201
     eda:	91 05       	cpc	r25, r1
     edc:	c0 f3       	brcs	.-16     	; 0xece <qtm_key_sensors_process+0x516>
     ede:	ef cf       	rjmp	.-34     	; 0xebe <qtm_key_sensors_process+0x506>
     ee0:	88 5c       	subi	r24, 0xC8	; 200
     ee2:	91 09       	sbc	r25, r1
     ee4:	e8 81       	ld	r30, Y
     ee6:	f9 81       	ldd	r31, Y+1	; 0x01
     ee8:	21 81       	ldd	r18, Z+1	; 0x01
     eea:	32 81       	ldd	r19, Z+2	; 0x02
     eec:	28 53       	subi	r18, 0x38	; 56
     eee:	3f 4f       	sbci	r19, 0xFF	; 255
     ef0:	21 83       	std	Z+1, r18	; 0x01
     ef2:	32 83       	std	Z+2, r19	; 0x02
     ef4:	23 81       	ldd	r18, Z+3	; 0x03
     ef6:	21 11       	cpse	r18, r1
     ef8:	96 c0       	rjmp	.+300    	; 0x1026 <qtm_key_sensors_process+0x66e>
     efa:	24 81       	ldd	r18, Z+4	; 0x04
     efc:	22 23       	and	r18, r18
     efe:	11 f0       	breq	.+4      	; 0xf04 <qtm_key_sensors_process+0x54c>
     f00:	21 50       	subi	r18, 0x01	; 1
     f02:	24 83       	std	Z+4, r18	; 0x04
     f04:	e8 81       	ld	r30, Y
     f06:	f9 81       	ldd	r31, Y+1	; 0x01
     f08:	25 81       	ldd	r18, Z+5	; 0x05
     f0a:	22 23       	and	r18, r18
     f0c:	11 f0       	breq	.+4      	; 0xf12 <qtm_key_sensors_process+0x55a>
     f0e:	21 50       	subi	r18, 0x01	; 1
     f10:	25 83       	std	Z+5, r18	; 0x05
     f12:	8a 80       	ldd	r8, Y+2	; 0x02
     f14:	9b 80       	ldd	r9, Y+3	; 0x03
     f16:	d4 01       	movw	r26, r8
     f18:	16 96       	adiw	r26, 0x06	; 6
     f1a:	2c 91       	ld	r18, X
     f1c:	16 97       	sbiw	r26, 0x06	; 6
     f1e:	21 11       	cpse	r18, r1
     f20:	1b c0       	rjmp	.+54     	; 0xf58 <qtm_key_sensors_process+0x5a0>
     f22:	8a 80       	ldd	r8, Y+2	; 0x02
     f24:	9b 80       	ldd	r9, Y+3	; 0x03
     f26:	f4 01       	movw	r30, r8
     f28:	27 81       	ldd	r18, Z+7	; 0x07
     f2a:	21 11       	cpse	r18, r1
     f2c:	48 c0       	rjmp	.+144    	; 0xfbe <qtm_key_sensors_process+0x606>
     f2e:	ea 81       	ldd	r30, Y+2	; 0x02
     f30:	fb 81       	ldd	r31, Y+3	; 0x03
     f32:	23 81       	ldd	r18, Z+3	; 0x03
     f34:	22 23       	and	r18, r18
     f36:	61 f0       	breq	.+24     	; 0xf50 <qtm_key_sensors_process+0x598>
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	a0 e0       	ldi	r26, 0x00	; 0
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
     f40:	ea 81       	ldd	r30, Y+2	; 0x02
     f42:	fb 81       	ldd	r31, Y+3	; 0x03
     f44:	40 81       	ld	r20, Z
     f46:	51 81       	ldd	r21, Z+1	; 0x01
     f48:	a4 17       	cp	r26, r20
     f4a:	b5 07       	cpc	r27, r21
     f4c:	08 f4       	brcc	.+2      	; 0xf50 <qtm_key_sensors_process+0x598>
     f4e:	6e c0       	rjmp	.+220    	; 0x102c <qtm_key_sensors_process+0x674>
     f50:	89 3c       	cpi	r24, 0xC9	; 201
     f52:	91 05       	cpc	r25, r1
     f54:	28 f6       	brcc	.-118    	; 0xee0 <qtm_key_sensors_process+0x528>
     f56:	bb cf       	rjmp	.-138    	; 0xece <qtm_key_sensors_process+0x516>
     f58:	08 81       	ld	r16, Y
     f5a:	19 81       	ldd	r17, Y+1	; 0x01
     f5c:	f8 01       	movw	r30, r16
     f5e:	24 81       	ldd	r18, Z+4	; 0x04
     f60:	21 11       	cpse	r18, r1
     f62:	df cf       	rjmp	.-66     	; 0xf22 <qtm_key_sensors_process+0x56a>
     f64:	ed 90       	ld	r14, X+
     f66:	fc 90       	ld	r15, X
     f68:	60 e0       	ldi	r22, 0x00	; 0
     f6a:	70 e0       	ldi	r23, 0x00	; 0
     f6c:	40 e0       	ldi	r20, 0x00	; 0
     f6e:	50 e0       	ldi	r21, 0x00	; 0
     f70:	4e 15       	cp	r20, r14
     f72:	5f 05       	cpc	r21, r15
     f74:	f1 f0       	breq	.+60     	; 0xfb2 <qtm_key_sensors_process+0x5fa>
     f76:	ec 81       	ldd	r30, Y+4	; 0x04
     f78:	fd 81       	ldd	r31, Y+5	; 0x05
     f7a:	e6 0f       	add	r30, r22
     f7c:	f7 1f       	adc	r31, r23
     f7e:	20 81       	ld	r18, Z
     f80:	23 30       	cpi	r18, 0x03	; 3
     f82:	11 f0       	breq	.+4      	; 0xf88 <qtm_key_sensors_process+0x5d0>
     f84:	28 30       	cpi	r18, 0x08	; 8
     f86:	81 f4       	brne	.+32     	; 0xfa8 <qtm_key_sensors_process+0x5f0>
     f88:	24 81       	ldd	r18, Z+4	; 0x04
     f8a:	35 81       	ldd	r19, Z+5	; 0x05
     f8c:	c2 80       	ldd	r12, Z+2	; 0x02
     f8e:	d3 80       	ldd	r13, Z+3	; 0x03
     f90:	d6 01       	movw	r26, r12
     f92:	11 96       	adiw	r26, 0x01	; 1
     f94:	cd 90       	ld	r12, X+
     f96:	dc 90       	ld	r13, X
     f98:	12 97       	sbiw	r26, 0x02	; 2
     f9a:	2c 15       	cp	r18, r12
     f9c:	3d 05       	cpc	r19, r13
     f9e:	20 f4       	brcc	.+8      	; 0xfa8 <qtm_key_sensors_process+0x5f0>
     fa0:	2f 5f       	subi	r18, 0xFF	; 255
     fa2:	3f 4f       	sbci	r19, 0xFF	; 255
     fa4:	24 83       	std	Z+4, r18	; 0x04
     fa6:	35 83       	std	Z+5, r19	; 0x05
     fa8:	4f 5f       	subi	r20, 0xFF	; 255
     faa:	5f 4f       	sbci	r21, 0xFF	; 255
     fac:	6a 5f       	subi	r22, 0xFA	; 250
     fae:	7f 4f       	sbci	r23, 0xFF	; 255
     fb0:	df cf       	rjmp	.-66     	; 0xf70 <qtm_key_sensors_process+0x5b8>
     fb2:	f4 01       	movw	r30, r8
     fb4:	26 81       	ldd	r18, Z+6	; 0x06
     fb6:	d8 01       	movw	r26, r16
     fb8:	14 96       	adiw	r26, 0x04	; 4
     fba:	2c 93       	st	X, r18
     fbc:	b2 cf       	rjmp	.-156    	; 0xf22 <qtm_key_sensors_process+0x56a>
     fbe:	08 81       	ld	r16, Y
     fc0:	19 81       	ldd	r17, Y+1	; 0x01
     fc2:	d8 01       	movw	r26, r16
     fc4:	15 96       	adiw	r26, 0x05	; 5
     fc6:	2c 91       	ld	r18, X
     fc8:	21 11       	cpse	r18, r1
     fca:	b1 cf       	rjmp	.-158    	; 0xf2e <qtm_key_sensors_process+0x576>
     fcc:	e0 80       	ld	r14, Z
     fce:	f1 80       	ldd	r15, Z+1	; 0x01
     fd0:	60 e0       	ldi	r22, 0x00	; 0
     fd2:	70 e0       	ldi	r23, 0x00	; 0
     fd4:	40 e0       	ldi	r20, 0x00	; 0
     fd6:	50 e0       	ldi	r21, 0x00	; 0
     fd8:	4e 15       	cp	r20, r14
     fda:	5f 05       	cpc	r21, r15
     fdc:	f1 f0       	breq	.+60     	; 0x101a <qtm_key_sensors_process+0x662>
     fde:	ec 81       	ldd	r30, Y+4	; 0x04
     fe0:	fd 81       	ldd	r31, Y+5	; 0x05
     fe2:	e6 0f       	add	r30, r22
     fe4:	f7 1f       	adc	r31, r23
     fe6:	20 81       	ld	r18, Z
     fe8:	23 30       	cpi	r18, 0x03	; 3
     fea:	11 f0       	breq	.+4      	; 0xff0 <qtm_key_sensors_process+0x638>
     fec:	28 30       	cpi	r18, 0x08	; 8
     fee:	81 f4       	brne	.+32     	; 0x1010 <qtm_key_sensors_process+0x658>
     ff0:	24 81       	ldd	r18, Z+4	; 0x04
     ff2:	35 81       	ldd	r19, Z+5	; 0x05
     ff4:	c2 80       	ldd	r12, Z+2	; 0x02
     ff6:	d3 80       	ldd	r13, Z+3	; 0x03
     ff8:	d6 01       	movw	r26, r12
     ffa:	11 96       	adiw	r26, 0x01	; 1
     ffc:	cd 90       	ld	r12, X+
     ffe:	dc 90       	ld	r13, X
    1000:	12 97       	sbiw	r26, 0x02	; 2
    1002:	c2 16       	cp	r12, r18
    1004:	d3 06       	cpc	r13, r19
    1006:	20 f4       	brcc	.+8      	; 0x1010 <qtm_key_sensors_process+0x658>
    1008:	21 50       	subi	r18, 0x01	; 1
    100a:	31 09       	sbc	r19, r1
    100c:	24 83       	std	Z+4, r18	; 0x04
    100e:	35 83       	std	Z+5, r19	; 0x05
    1010:	4f 5f       	subi	r20, 0xFF	; 255
    1012:	5f 4f       	sbci	r21, 0xFF	; 255
    1014:	6a 5f       	subi	r22, 0xFA	; 250
    1016:	7f 4f       	sbci	r23, 0xFF	; 255
    1018:	df cf       	rjmp	.-66     	; 0xfd8 <qtm_key_sensors_process+0x620>
    101a:	f4 01       	movw	r30, r8
    101c:	27 81       	ldd	r18, Z+7	; 0x07
    101e:	d8 01       	movw	r26, r16
    1020:	15 96       	adiw	r26, 0x05	; 5
    1022:	2c 93       	st	X, r18
    1024:	84 cf       	rjmp	.-248    	; 0xf2e <qtm_key_sensors_process+0x576>
    1026:	21 50       	subi	r18, 0x01	; 1
    1028:	23 83       	std	Z+3, r18	; 0x03
    102a:	81 cf       	rjmp	.-254    	; 0xf2e <qtm_key_sensors_process+0x576>
    102c:	a9 01       	movw	r20, r18
    102e:	44 0f       	add	r20, r20
    1030:	55 1f       	adc	r21, r21
    1032:	ec 81       	ldd	r30, Y+4	; 0x04
    1034:	fd 81       	ldd	r31, Y+5	; 0x05
    1036:	e4 0f       	add	r30, r20
    1038:	f5 1f       	adc	r31, r21
    103a:	60 81       	ld	r22, Z
    103c:	65 38       	cpi	r22, 0x85	; 133
    103e:	09 f0       	breq	.+2      	; 0x1042 <qtm_key_sensors_process+0x68a>
    1040:	47 c0       	rjmp	.+142    	; 0x10d0 <qtm_key_sensors_process+0x718>
    1042:	61 81       	ldd	r22, Z+1	; 0x01
    1044:	66 23       	and	r22, r22
    1046:	19 f0       	breq	.+6      	; 0x104e <qtm_key_sensors_process+0x696>
    1048:	61 50       	subi	r22, 0x01	; 1
    104a:	61 83       	std	Z+1, r22	; 0x01
    104c:	41 c0       	rjmp	.+130    	; 0x10d0 <qtm_key_sensors_process+0x718>
    104e:	a0 82       	st	Z, r10
    1050:	6c 81       	ldd	r22, Y+4	; 0x04
    1052:	7d 81       	ldd	r23, Y+5	; 0x05
    1054:	fb 01       	movw	r30, r22
    1056:	e4 0f       	add	r30, r20
    1058:	f5 1f       	adc	r31, r21
    105a:	02 80       	ldd	r0, Z+2	; 0x02
    105c:	f3 81       	ldd	r31, Z+3	; 0x03
    105e:	e0 2d       	mov	r30, r0
    1060:	b0 82       	st	Z, r11
    1062:	ee 81       	ldd	r30, Y+6	; 0x06
    1064:	ff 81       	ldd	r31, Y+7	; 0x07
    1066:	e2 0f       	add	r30, r18
    1068:	f3 1f       	adc	r31, r19
    106a:	d2 80       	ldd	r13, Z+2	; 0x02
    106c:	dd 20       	and	r13, r13
    106e:	81 f1       	breq	.+96     	; 0x10d0 <qtm_key_sensors_process+0x718>
    1070:	40 e0       	ldi	r20, 0x00	; 0
    1072:	50 e0       	ldi	r21, 0x00	; 0
    1074:	00 e0       	ldi	r16, 0x00	; 0
    1076:	10 e0       	ldi	r17, 0x00	; 0
    1078:	ea 81       	ldd	r30, Y+2	; 0x02
    107a:	fb 81       	ldd	r31, Y+3	; 0x03
    107c:	60 81       	ld	r22, Z
    107e:	71 81       	ldd	r23, Z+1	; 0x01
    1080:	06 17       	cp	r16, r22
    1082:	17 07       	cpc	r17, r23
    1084:	28 f5       	brcc	.+74     	; 0x10d0 <qtm_key_sensors_process+0x718>
    1086:	ee 81       	ldd	r30, Y+6	; 0x06
    1088:	ff 81       	ldd	r31, Y+7	; 0x07
    108a:	e4 0f       	add	r30, r20
    108c:	f5 1f       	adc	r31, r21
    108e:	62 81       	ldd	r22, Z+2	; 0x02
    1090:	d6 12       	cpse	r13, r22
    1092:	19 c0       	rjmp	.+50     	; 0x10c6 <qtm_key_sensors_process+0x70e>
    1094:	ba 01       	movw	r22, r20
    1096:	66 0f       	add	r22, r22
    1098:	77 1f       	adc	r23, r23
    109a:	ec 81       	ldd	r30, Y+4	; 0x04
    109c:	fd 81       	ldd	r31, Y+5	; 0x05
    109e:	4f 01       	movw	r8, r30
    10a0:	86 0e       	add	r8, r22
    10a2:	97 1e       	adc	r9, r23
    10a4:	f4 01       	movw	r30, r8
    10a6:	e2 80       	ldd	r14, Z+2	; 0x02
    10a8:	f3 80       	ldd	r15, Z+3	; 0x03
    10aa:	f7 01       	movw	r30, r14
    10ac:	f0 80       	ld	r15, Z
    10ae:	f0 fe       	sbrs	r15, 0
    10b0:	0a c0       	rjmp	.+20     	; 0x10c6 <qtm_key_sensors_process+0x70e>
    10b2:	f4 01       	movw	r30, r8
    10b4:	a0 82       	st	Z, r10
    10b6:	ec 81       	ldd	r30, Y+4	; 0x04
    10b8:	fd 81       	ldd	r31, Y+5	; 0x05
    10ba:	e6 0f       	add	r30, r22
    10bc:	f7 1f       	adc	r31, r23
    10be:	02 80       	ldd	r0, Z+2	; 0x02
    10c0:	f3 81       	ldd	r31, Z+3	; 0x03
    10c2:	e0 2d       	mov	r30, r0
    10c4:	b0 82       	st	Z, r11
    10c6:	0f 5f       	subi	r16, 0xFF	; 255
    10c8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ca:	4d 5f       	subi	r20, 0xFD	; 253
    10cc:	5f 4f       	sbci	r21, 0xFF	; 255
    10ce:	d4 cf       	rjmp	.-88     	; 0x1078 <qtm_key_sensors_process+0x6c0>
    10d0:	11 96       	adiw	r26, 0x01	; 1
    10d2:	2d 5f       	subi	r18, 0xFD	; 253
    10d4:	3f 4f       	sbci	r19, 0xFF	; 255
    10d6:	34 cf       	rjmp	.-408    	; 0xf40 <qtm_key_sensors_process+0x588>
    10d8:	8b e0       	ldi	r24, 0x0B	; 11
    10da:	df 91       	pop	r29
    10dc:	cf 91       	pop	r28
    10de:	1f 91       	pop	r17
    10e0:	0f 91       	pop	r16
    10e2:	ff 90       	pop	r15
    10e4:	ef 90       	pop	r14
    10e6:	df 90       	pop	r13
    10e8:	cf 90       	pop	r12
    10ea:	bf 90       	pop	r11
    10ec:	af 90       	pop	r10
    10ee:	9f 90       	pop	r9
    10f0:	8f 90       	pop	r8
    10f2:	7f 90       	pop	r7
    10f4:	6f 90       	pop	r6
    10f6:	5f 90       	pop	r5
    10f8:	4f 90       	pop	r4
    10fa:	3f 90       	pop	r3
    10fc:	2f 90       	pop	r2
    10fe:	08 95       	ret

00001100 <qtm_error_handler>:
    1100:	95 e0       	ldi	r25, 0x05	; 5
    1102:	90 93 64 3e 	sts	0x3E64, r25	; 0x803e64 <qtm_state>
    1106:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    110a:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    110e:	01 88       	ldd	r0, Z+17	; 0x11
    1110:	f2 89       	ldd	r31, Z+18	; 0x12
    1112:	e0 2d       	mov	r30, r0
    1114:	30 97       	sbiw	r30, 0x00	; 0
    1116:	09 f0       	breq	.+2      	; 0x111a <qtm_error_handler+0x1a>
    1118:	09 94       	ijmp
    111a:	ff cf       	rjmp	.-2      	; 0x111a <qtm_error_handler+0x1a>

0000111c <generic_callback_function>:
    111c:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    1120:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    1124:	03 88       	ldd	r0, Z+19	; 0x13
    1126:	f4 89       	ldd	r31, Z+20	; 0x14
    1128:	e0 2d       	mov	r30, r0
    112a:	30 97       	sbiw	r30, 0x00	; 0
    112c:	09 f0       	breq	.+2      	; 0x1130 <generic_callback_function+0x14>
    112e:	09 94       	ijmp
    1130:	80 e4       	ldi	r24, 0x40	; 64
    1132:	e6 cf       	rjmp	.-52     	; 0x1100 <qtm_error_handler>

00001134 <qmt_get_binding_layer_ptr>:
    1134:	80 91 a2 3e 	lds	r24, 0x3EA2	; 0x803ea2 <qtm>
    1138:	90 91 a3 3e 	lds	r25, 0x3EA3	; 0x803ea3 <qtm+0x1>
    113c:	08 95       	ret

0000113e <qtm_binding_layer_init>:
    113e:	cf 93       	push	r28
    1140:	80 93 a2 3e 	sts	0x3EA2, r24	; 0x803ea2 <qtm>
    1144:	90 93 a3 3e 	sts	0x3EA3, r25	; 0x803ea3 <qtm+0x1>
    1148:	80 91 64 3e 	lds	r24, 0x3E64	; 0x803e64 <qtm_state>
    114c:	85 30       	cpi	r24, 0x05	; 5
    114e:	39 f0       	breq	.+14     	; 0x115e <qtm_binding_layer_init+0x20>
    1150:	82 30       	cpi	r24, 0x02	; 2
    1152:	28 f0       	brcs	.+10     	; 0x115e <qtm_binding_layer_init+0x20>
    1154:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1158:	88 23       	and	r24, r24
    115a:	71 f1       	breq	.+92     	; 0x11b8 <qtm_binding_layer_init+0x7a>
    115c:	40 c0       	rjmp	.+128    	; 0x11de <qtm_binding_layer_init+0xa0>
    115e:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    1162:	c0 e0       	ldi	r28, 0x00	; 0
    1164:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    1168:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    116c:	8c 2f       	mov	r24, r28
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	88 0f       	add	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	11 96       	adiw	r26, 0x01	; 1
    1176:	ed 91       	ld	r30, X+
    1178:	fc 91       	ld	r31, X
    117a:	12 97       	sbiw	r26, 0x02	; 2
    117c:	e8 0f       	add	r30, r24
    117e:	f9 1f       	adc	r31, r25
    1180:	01 90       	ld	r0, Z+
    1182:	f0 81       	ld	r31, Z
    1184:	e0 2d       	mov	r30, r0
    1186:	30 97       	sbiw	r30, 0x00	; 0
    1188:	29 f3       	breq	.-54     	; 0x1154 <qtm_binding_layer_init+0x16>
    118a:	17 96       	adiw	r26, 0x07	; 7
    118c:	2d 91       	ld	r18, X+
    118e:	3c 91       	ld	r19, X
    1190:	18 97       	sbiw	r26, 0x08	; 8
    1192:	d9 01       	movw	r26, r18
    1194:	a8 0f       	add	r26, r24
    1196:	b9 1f       	adc	r27, r25
    1198:	8d 91       	ld	r24, X+
    119a:	9c 91       	ld	r25, X
    119c:	09 95       	icall
    119e:	88 23       	and	r24, r24
    11a0:	29 f0       	breq	.+10     	; 0x11ac <qtm_binding_layer_init+0x6e>
    11a2:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    11a6:	8f 5f       	subi	r24, 0xFF	; 255
    11a8:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    11ac:	cf 5f       	subi	r28, 0xFF	; 255
    11ae:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    11b2:	88 23       	and	r24, r24
    11b4:	b9 f2       	breq	.-82     	; 0x1164 <qtm_binding_layer_init+0x26>
    11b6:	ce cf       	rjmp	.-100    	; 0x1154 <qtm_binding_layer_init+0x16>
    11b8:	82 e0       	ldi	r24, 0x02	; 2
    11ba:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    11be:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    11c2:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    11c6:	07 84       	ldd	r0, Z+15	; 0x0f
    11c8:	f0 89       	ldd	r31, Z+16	; 0x10
    11ca:	e0 2d       	mov	r30, r0
    11cc:	30 97       	sbiw	r30, 0x00	; 0
    11ce:	11 f0       	breq	.+4      	; 0x11d4 <qtm_binding_layer_init+0x96>
    11d0:	09 95       	icall
    11d2:	08 c0       	rjmp	.+16     	; 0x11e4 <qtm_binding_layer_init+0xa6>
    11d4:	85 e0       	ldi	r24, 0x05	; 5
    11d6:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	01 c0       	rjmp	.+2      	; 0x11e0 <qtm_binding_layer_init+0xa2>
    11de:	8f 5f       	subi	r24, 0xFF	; 255
    11e0:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    11e4:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    11e8:	88 23       	and	r24, r24
    11ea:	29 f0       	breq	.+10     	; 0x11f6 <qtm_binding_layer_init+0xb8>
    11ec:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    11f0:	80 e8       	ldi	r24, 0x80	; 128
    11f2:	cf 91       	pop	r28
    11f4:	85 cf       	rjmp	.-246    	; 0x1100 <qtm_error_handler>
    11f6:	cf 91       	pop	r28
    11f8:	08 95       	ret

000011fa <qtm_lib_start_acquisition>:
    11fa:	1f 93       	push	r17
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	18 2f       	mov	r17, r24
    1202:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    1206:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    120a:	15 96       	adiw	r26, 0x05	; 5
    120c:	2d 91       	ld	r18, X+
    120e:	3c 91       	ld	r19, X
    1210:	16 97       	sbiw	r26, 0x06	; 6
    1212:	d0 e0       	ldi	r29, 0x00	; 0
    1214:	f9 01       	movw	r30, r18
    1216:	ed 0f       	add	r30, r29
    1218:	f1 1d       	adc	r31, r1
    121a:	ed 0f       	add	r30, r29
    121c:	f1 1d       	adc	r31, r1
    121e:	80 81       	ld	r24, Z
    1220:	91 81       	ldd	r25, Z+1	; 0x01
    1222:	89 2b       	or	r24, r25
    1224:	11 f0       	breq	.+4      	; 0x122a <qtm_lib_start_acquisition+0x30>
    1226:	df 5f       	subi	r29, 0xFF	; 255
    1228:	f5 cf       	rjmp	.-22     	; 0x1214 <qtm_lib_start_acquisition+0x1a>
    122a:	53 96       	adiw	r26, 0x13	; 19
    122c:	8d 91       	ld	r24, X+
    122e:	9c 91       	ld	r25, X
    1230:	54 97       	sbiw	r26, 0x14	; 20
    1232:	89 2b       	or	r24, r25
    1234:	49 f1       	breq	.+82     	; 0x1288 <qtm_lib_start_acquisition+0x8e>
    1236:	81 2f       	mov	r24, r17
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	88 0f       	add	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	f9 01       	movw	r30, r18
    1240:	e8 0f       	add	r30, r24
    1242:	f9 1f       	adc	r31, r25
    1244:	01 90       	ld	r0, Z+
    1246:	f0 81       	ld	r31, Z
    1248:	e0 2d       	mov	r30, r0
    124a:	30 97       	sbiw	r30, 0x00	; 0
    124c:	e9 f0       	breq	.+58     	; 0x1288 <qtm_lib_start_acquisition+0x8e>
    124e:	1b 96       	adiw	r26, 0x0b	; 11
    1250:	2d 91       	ld	r18, X+
    1252:	3c 91       	ld	r19, X
    1254:	1c 97       	sbiw	r26, 0x0c	; 12
    1256:	d9 01       	movw	r26, r18
    1258:	a8 0f       	add	r26, r24
    125a:	b9 1f       	adc	r27, r25
    125c:	8d 91       	ld	r24, X+
    125e:	9c 91       	ld	r25, X
    1260:	00 97       	sbiw	r24, 0x00	; 0
    1262:	91 f0       	breq	.+36     	; 0x1288 <qtm_lib_start_acquisition+0x8e>
    1264:	6e e8       	ldi	r22, 0x8E	; 142
    1266:	78 e0       	ldi	r23, 0x08	; 8
    1268:	09 95       	icall
    126a:	c8 2f       	mov	r28, r24
    126c:	81 11       	cpse	r24, r1
    126e:	06 c0       	rjmp	.+12     	; 0x127c <qtm_lib_start_acquisition+0x82>
    1270:	83 e0       	ldi	r24, 0x03	; 3
    1272:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    1276:	10 92 63 3e 	sts	0x3E63, r1	; 0x803e63 <current_process_id>
    127a:	03 c0       	rjmp	.+6      	; 0x1282 <qtm_lib_start_acquisition+0x88>
    127c:	82 e0       	ldi	r24, 0x02	; 2
    127e:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    1282:	1d 17       	cp	r17, r29
    1284:	20 f0       	brcs	.+8      	; 0x128e <qtm_lib_start_acquisition+0x94>
    1286:	01 c0       	rjmp	.+2      	; 0x128a <qtm_lib_start_acquisition+0x90>
    1288:	c2 e0       	ldi	r28, 0x02	; 2
    128a:	82 e8       	ldi	r24, 0x82	; 130
    128c:	39 df       	rcall	.-398    	; 0x1100 <qtm_error_handler>
    128e:	8c 2f       	mov	r24, r28
    1290:	df 91       	pop	r29
    1292:	cf 91       	pop	r28
    1294:	1f 91       	pop	r17
    1296:	08 95       	ret

00001298 <qtm_lib_acq_process>:
    1298:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    129c:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    12a0:	05 84       	ldd	r0, Z+13	; 0x0d
    12a2:	f6 85       	ldd	r31, Z+14	; 0x0e
    12a4:	e0 2d       	mov	r30, r0
    12a6:	09 94       	ijmp

000012a8 <qtm_lib_post_process>:
    12a8:	1f 93       	push	r17
    12aa:	cf 93       	push	r28
    12ac:	df 93       	push	r29
    12ae:	1f 92       	push	r1
    12b0:	cd b7       	in	r28, 0x3d	; 61
    12b2:	de b7       	in	r29, 0x3e	; 62
    12b4:	19 82       	std	Y+1, r1	; 0x01
    12b6:	e0 91 a2 3e 	lds	r30, 0x3EA2	; 0x803ea2 <qtm>
    12ba:	f0 91 a3 3e 	lds	r31, 0x3EA3	; 0x803ea3 <qtm+0x1>
    12be:	05 88       	ldd	r0, Z+21	; 0x15
    12c0:	f6 89       	ldd	r31, Z+22	; 0x16
    12c2:	e0 2d       	mov	r30, r0
    12c4:	30 97       	sbiw	r30, 0x00	; 0
    12c6:	49 f0       	breq	.+18     	; 0x12da <qtm_lib_post_process+0x32>
    12c8:	82 e0       	ldi	r24, 0x02	; 2
    12ca:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12ce:	ce 01       	movw	r24, r28
    12d0:	01 96       	adiw	r24, 0x01	; 1
    12d2:	09 95       	icall
    12d4:	83 e0       	ldi	r24, 0x03	; 3
    12d6:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12da:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    12de:	81 11       	cpse	r24, r1
    12e0:	2c c0       	rjmp	.+88     	; 0x133a <qtm_lib_post_process+0x92>
    12e2:	19 81       	ldd	r17, Y+1	; 0x01
    12e4:	11 11       	cpse	r17, r1
    12e6:	29 c0       	rjmp	.+82     	; 0x133a <qtm_lib_post_process+0x92>
    12e8:	84 e0       	ldi	r24, 0x04	; 4
    12ea:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    12ee:	a0 91 a2 3e 	lds	r26, 0x3EA2	; 0x803ea2 <qtm>
    12f2:	b0 91 a3 3e 	lds	r27, 0x3EA3	; 0x803ea3 <qtm+0x1>
    12f6:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	88 0f       	add	r24, r24
    12fe:	99 1f       	adc	r25, r25
    1300:	13 96       	adiw	r26, 0x03	; 3
    1302:	ed 91       	ld	r30, X+
    1304:	fc 91       	ld	r31, X
    1306:	14 97       	sbiw	r26, 0x04	; 4
    1308:	e8 0f       	add	r30, r24
    130a:	f9 1f       	adc	r31, r25
    130c:	01 90       	ld	r0, Z+
    130e:	f0 81       	ld	r31, Z
    1310:	e0 2d       	mov	r30, r0
    1312:	19 96       	adiw	r26, 0x09	; 9
    1314:	2d 91       	ld	r18, X+
    1316:	3c 91       	ld	r19, X
    1318:	1a 97       	sbiw	r26, 0x0a	; 10
    131a:	30 97       	sbiw	r30, 0x00	; 0
    131c:	81 f0       	breq	.+32     	; 0x133e <qtm_lib_post_process+0x96>
    131e:	d9 01       	movw	r26, r18
    1320:	a8 0f       	add	r26, r24
    1322:	b9 1f       	adc	r27, r25
    1324:	8d 91       	ld	r24, X+
    1326:	9c 91       	ld	r25, X
    1328:	09 95       	icall
    132a:	81 11       	cpse	r24, r1
    132c:	3d c0       	rjmp	.+122    	; 0x13a8 <qtm_lib_post_process+0x100>
    132e:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    1332:	8f 5f       	subi	r24, 0xFF	; 255
    1334:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <current_process_id>
    1338:	da cf       	rjmp	.-76     	; 0x12ee <qtm_lib_post_process+0x46>
    133a:	10 e0       	ldi	r17, 0x00	; 0
    133c:	3c c0       	rjmp	.+120    	; 0x13b6 <qtm_lib_post_process+0x10e>
    133e:	10 92 63 3e 	sts	0x3E63, r1	; 0x803e63 <current_process_id>
    1342:	f9 01       	movw	r30, r18
    1344:	e1 0f       	add	r30, r17
    1346:	f1 1d       	adc	r31, r1
    1348:	e1 0f       	add	r30, r17
    134a:	f1 1d       	adc	r31, r1
    134c:	01 90       	ld	r0, Z+
    134e:	f0 81       	ld	r31, Z
    1350:	e0 2d       	mov	r30, r0
    1352:	30 97       	sbiw	r30, 0x00	; 0
    1354:	59 f0       	breq	.+22     	; 0x136c <qtm_lib_post_process+0xc4>
    1356:	01 90       	ld	r0, Z+
    1358:	f0 81       	ld	r31, Z
    135a:	e0 2d       	mov	r30, r0
    135c:	80 81       	ld	r24, Z
    135e:	87 ff       	sbrs	r24, 7
    1360:	03 c0       	rjmp	.+6      	; 0x1368 <qtm_lib_post_process+0xc0>
    1362:	9c 91       	ld	r25, X
    1364:	94 60       	ori	r25, 0x04	; 4
    1366:	9c 93       	st	X, r25
    1368:	1f 5f       	subi	r17, 0xFF	; 255
    136a:	eb cf       	rjmp	.-42     	; 0x1342 <qtm_lib_post_process+0x9a>
    136c:	10 93 63 3e 	sts	0x3E63, r17	; 0x803e63 <current_process_id>
    1370:	82 e0       	ldi	r24, 0x02	; 2
    1372:	80 93 64 3e 	sts	0x3E64, r24	; 0x803e64 <qtm_state>
    1376:	57 96       	adiw	r26, 0x17	; 23
    1378:	ed 91       	ld	r30, X+
    137a:	fc 91       	ld	r31, X
    137c:	58 97       	sbiw	r26, 0x18	; 24
    137e:	30 97       	sbiw	r30, 0x00	; 0
    1380:	11 f0       	breq	.+4      	; 0x1386 <qtm_lib_post_process+0xde>
    1382:	09 95       	icall
    1384:	05 c0       	rjmp	.+10     	; 0x1390 <qtm_lib_post_process+0xe8>
    1386:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    138a:	8f 5f       	subi	r24, 0xFF	; 255
    138c:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    1390:	10 e0       	ldi	r17, 0x00	; 0
    1392:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    1396:	88 23       	and	r24, r24
    1398:	71 f0       	breq	.+28     	; 0x13b6 <qtm_lib_post_process+0x10e>
    139a:	10 92 62 3e 	sts	0x3E62, r1	; 0x803e62 <errors>
    139e:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <current_process_id>
    13a2:	80 64       	ori	r24, 0x40	; 64
    13a4:	ad de       	rcall	.-678    	; 0x1100 <qtm_error_handler>
    13a6:	07 c0       	rjmp	.+14     	; 0x13b6 <qtm_lib_post_process+0x10e>
    13a8:	80 91 62 3e 	lds	r24, 0x3E62	; 0x803e62 <errors>
    13ac:	8f 5f       	subi	r24, 0xFF	; 255
    13ae:	80 93 62 3e 	sts	0x3E62, r24	; 0x803e62 <errors>
    13b2:	13 e0       	ldi	r17, 0x03	; 3
    13b4:	ee cf       	rjmp	.-36     	; 0x1392 <qtm_lib_post_process+0xea>
    13b6:	81 2f       	mov	r24, r17
    13b8:	0f 90       	pop	r0
    13ba:	df 91       	pop	r29
    13bc:	cf 91       	pop	r28
    13be:	1f 91       	pop	r17
    13c0:	08 95       	ret

000013c2 <select_next_channel_to_measure>:
    13c2:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    13c6:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    13ca:	a0 91 a4 3e 	lds	r26, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    13ce:	b0 91 a5 3e 	lds	r27, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    13d2:	ed 91       	ld	r30, X+
    13d4:	fc 91       	ld	r31, X
    13d6:	11 97       	sbiw	r26, 0x01	; 1
    13d8:	40 81       	ld	r20, Z
    13da:	51 81       	ldd	r21, Z+1	; 0x01
    13dc:	25 e0       	ldi	r18, 0x05	; 5
    13de:	28 9f       	mul	r18, r24
    13e0:	b0 01       	movw	r22, r0
    13e2:	29 9f       	mul	r18, r25
    13e4:	70 0d       	add	r23, r0
    13e6:	11 24       	eor	r1, r1
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	84 17       	cp	r24, r20
    13ee:	95 07       	cpc	r25, r21
    13f0:	a8 f4       	brcc	.+42     	; 0x141c <select_next_channel_to_measure+0x5a>
    13f2:	14 96       	adiw	r26, 0x04	; 4
    13f4:	ed 91       	ld	r30, X+
    13f6:	fc 91       	ld	r31, X
    13f8:	15 97       	sbiw	r26, 0x05	; 5
    13fa:	e2 0f       	add	r30, r18
    13fc:	f3 1f       	adc	r31, r19
    13fe:	e6 0f       	add	r30, r22
    1400:	f7 1f       	adc	r31, r23
    1402:	e0 81       	ld	r30, Z
    1404:	2b 5f       	subi	r18, 0xFB	; 251
    1406:	3f 4f       	sbci	r19, 0xFF	; 255
    1408:	e0 fd       	sbrc	r30, 0
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <select_next_channel_to_measure+0x4e>
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	ee cf       	rjmp	.-36     	; 0x13ec <select_next_channel_to_measure+0x2a>
    1410:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <current_measure_channel>
    1414:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <current_measure_channel+0x1>
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	08 95       	ret
    141c:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel>
    1420:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <current_measure_channel+0x1>
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	08 95       	ret

00001428 <qtm_measure_node>:
    1428:	bc 01       	movw	r22, r24
    142a:	e0 91 a4 3e 	lds	r30, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    142e:	f0 91 a5 3e 	lds	r31, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    1432:	86 e0       	ldi	r24, 0x06	; 6
    1434:	86 9f       	mul	r24, r22
    1436:	90 01       	movw	r18, r0
    1438:	87 9f       	mul	r24, r23
    143a:	30 0d       	add	r19, r0
    143c:	11 24       	eor	r1, r1
    143e:	a2 81       	ldd	r26, Z+2	; 0x02
    1440:	b3 81       	ldd	r27, Z+3	; 0x03
    1442:	a2 0f       	add	r26, r18
    1444:	b3 1f       	adc	r27, r19
    1446:	11 96       	adiw	r26, 0x01	; 1
    1448:	8c 91       	ld	r24, X
    144a:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    144e:	a2 81       	ldd	r26, Z+2	; 0x02
    1450:	b3 81       	ldd	r27, Z+3	; 0x03
    1452:	a2 0f       	add	r26, r18
    1454:	b3 1f       	adc	r27, r19
    1456:	8c 91       	ld	r24, X
    1458:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    145c:	95 e0       	ldi	r25, 0x05	; 5
    145e:	96 9f       	mul	r25, r22
    1460:	a0 01       	movw	r20, r0
    1462:	97 9f       	mul	r25, r23
    1464:	50 0d       	add	r21, r0
    1466:	11 24       	eor	r1, r1
    1468:	a4 81       	ldd	r26, Z+4	; 0x04
    146a:	b5 81       	ldd	r27, Z+5	; 0x05
    146c:	a4 0f       	add	r26, r20
    146e:	b5 1f       	adc	r27, r21
    1470:	13 96       	adiw	r26, 0x03	; 3
    1472:	8c 91       	ld	r24, X
    1474:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    1478:	a4 81       	ldd	r26, Z+4	; 0x04
    147a:	b5 81       	ldd	r27, Z+5	; 0x05
    147c:	a4 0f       	add	r26, r20
    147e:	b5 1f       	adc	r27, r21
    1480:	14 96       	adiw	r26, 0x04	; 4
    1482:	8c 91       	ld	r24, X
    1484:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    1488:	a4 81       	ldd	r26, Z+4	; 0x04
    148a:	b5 81       	ldd	r27, Z+5	; 0x05
    148c:	a4 0f       	add	r26, r20
    148e:	b5 1f       	adc	r27, r21
    1490:	8c 91       	ld	r24, X
    1492:	81 fd       	sbrc	r24, 1
    1494:	9c 93       	st	X, r25
    1496:	84 81       	ldd	r24, Z+4	; 0x04
    1498:	95 81       	ldd	r25, Z+5	; 0x05
    149a:	dc 01       	movw	r26, r24
    149c:	a4 0f       	add	r26, r20
    149e:	b5 1f       	adc	r27, r21
    14a0:	8c 91       	ld	r24, X
    14a2:	8c 71       	andi	r24, 0x1C	; 28
    14a4:	69 f4       	brne	.+26     	; 0x14c0 <qtm_measure_node+0x98>
    14a6:	a2 81       	ldd	r26, Z+2	; 0x02
    14a8:	b3 81       	ldd	r27, Z+3	; 0x03
    14aa:	a2 0f       	add	r26, r18
    14ac:	b3 1f       	adc	r27, r19
    14ae:	14 96       	adiw	r26, 0x04	; 4
    14b0:	ac 91       	ld	r26, X
    14b2:	a2 95       	swap	r26
    14b4:	af 70       	andi	r26, 0x0F	; 15
    14b6:	b0 e0       	ldi	r27, 0x00	; 0
    14b8:	aa 52       	subi	r26, 0x2A	; 42
    14ba:	b5 46       	sbci	r27, 0x65	; 101
    14bc:	8c 91       	ld	r24, X
    14be:	01 c0       	rjmp	.+2      	; 0x14c2 <qtm_measure_node+0x9a>
    14c0:	8f e3       	ldi	r24, 0x3F	; 63
    14c2:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    14c6:	a2 81       	ldd	r26, Z+2	; 0x02
    14c8:	b3 81       	ldd	r27, Z+3	; 0x03
    14ca:	a2 0f       	add	r26, r18
    14cc:	b3 1f       	adc	r27, r19
    14ce:	12 96       	adiw	r26, 0x02	; 2
    14d0:	8c 91       	ld	r24, X
    14d2:	8b 31       	cpi	r24, 0x1B	; 27
    14d4:	10 f4       	brcc	.+4      	; 0x14da <qtm_measure_node+0xb2>
    14d6:	8c 5f       	subi	r24, 0xFC	; 252
    14d8:	01 c0       	rjmp	.+2      	; 0x14dc <qtm_measure_node+0xb4>
    14da:	8f e1       	ldi	r24, 0x1F	; 31
    14dc:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    14e0:	a2 81       	ldd	r26, Z+2	; 0x02
    14e2:	b3 81       	ldd	r27, Z+3	; 0x03
    14e4:	a2 0f       	add	r26, r18
    14e6:	b3 1f       	adc	r27, r19
    14e8:	15 96       	adiw	r26, 0x05	; 5
    14ea:	8c 91       	ld	r24, X
    14ec:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    14f0:	a2 81       	ldd	r26, Z+2	; 0x02
    14f2:	b3 81       	ldd	r27, Z+3	; 0x03
    14f4:	a2 0f       	add	r26, r18
    14f6:	b3 1f       	adc	r27, r19
    14f8:	13 96       	adiw	r26, 0x03	; 3
    14fa:	8c 91       	ld	r24, X
    14fc:	82 95       	swap	r24
    14fe:	8f 70       	andi	r24, 0x0F	; 15
    1500:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	93 81       	ldd	r25, Z+3	; 0x03
    1508:	fc 01       	movw	r30, r24
    150a:	e2 0f       	add	r30, r18
    150c:	f3 1f       	adc	r31, r19
    150e:	83 81       	ldd	r24, Z+3	; 0x03
    1510:	8f 70       	andi	r24, 0x0F	; 15
    1512:	80 61       	ori	r24, 0x10	; 16
    1514:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    1518:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    151c:	83 60       	ori	r24, 0x03	; 3
    151e:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1522:	81 e8       	ldi	r24, 0x81	; 129
    1524:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1528:	81 e0       	ldi	r24, 0x01	; 1
    152a:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    152e:	08 95       	ret

00001530 <qtm_acquisition_process>:
    1530:	3f 92       	push	r3
    1532:	4f 92       	push	r4
    1534:	5f 92       	push	r5
    1536:	6f 92       	push	r6
    1538:	7f 92       	push	r7
    153a:	8f 92       	push	r8
    153c:	9f 92       	push	r9
    153e:	af 92       	push	r10
    1540:	bf 92       	push	r11
    1542:	cf 92       	push	r12
    1544:	df 92       	push	r13
    1546:	ef 92       	push	r14
    1548:	ff 92       	push	r15
    154a:	0f 93       	push	r16
    154c:	1f 93       	push	r17
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    1556:	88 23       	and	r24, r24
    1558:	09 f4       	brne	.+2      	; 0x155c <qtm_acquisition_process+0x2c>
    155a:	48 c1       	rjmp	.+656    	; 0x17ec <qtm_acquisition_process+0x2bc>
    155c:	a0 91 a4 3e 	lds	r26, 0x3EA4	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    1560:	b0 91 a5 3e 	lds	r27, 0x3EA5	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    1564:	c0 90 a6 3e 	lds	r12, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    1568:	d0 90 a7 3e 	lds	r13, 0x3EA7	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    156c:	00 e0       	ldi	r16, 0x00	; 0
    156e:	10 e0       	ldi	r17, 0x00	; 0
    1570:	60 e0       	ldi	r22, 0x00	; 0
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	e1 2c       	mov	r14, r1
    1576:	f1 2c       	mov	r15, r1
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	33 24       	eor	r3, r3
    157c:	33 94       	inc	r3
    157e:	d1 e8       	ldi	r29, 0x81	; 129
    1580:	4d 2e       	mov	r4, r29
    1582:	88 24       	eor	r8, r8
    1584:	8a 94       	dec	r8
    1586:	99 24       	eor	r9, r9
    1588:	93 94       	inc	r9
    158a:	6d 90       	ld	r6, X+
    158c:	7c 90       	ld	r7, X
    158e:	11 97       	sbiw	r26, 0x01	; 1
    1590:	f3 01       	movw	r30, r6
    1592:	20 81       	ld	r18, Z
    1594:	31 81       	ldd	r19, Z+1	; 0x01
    1596:	e2 16       	cp	r14, r18
    1598:	f3 06       	cpc	r15, r19
    159a:	08 f0       	brcs	.+2      	; 0x159e <qtm_acquisition_process+0x6e>
    159c:	23 c1       	rjmp	.+582    	; 0x17e4 <qtm_acquisition_process+0x2b4>
    159e:	e6 01       	movw	r28, r12
    15a0:	29 91       	ld	r18, Y+
    15a2:	39 91       	ld	r19, Y+
    15a4:	6e 01       	movw	r12, r28
    15a6:	14 96       	adiw	r26, 0x04	; 4
    15a8:	ed 91       	ld	r30, X+
    15aa:	fc 91       	ld	r31, X
    15ac:	15 97       	sbiw	r26, 0x05	; 5
    15ae:	e6 0f       	add	r30, r22
    15b0:	f7 1f       	adc	r31, r23
    15b2:	40 81       	ld	r20, Z
    15b4:	4c 71       	andi	r20, 0x1C	; 28
    15b6:	50 e0       	ldi	r21, 0x00	; 0
    15b8:	56 95       	lsr	r21
    15ba:	47 95       	ror	r20
    15bc:	56 95       	lsr	r21
    15be:	47 95       	ror	r20
    15c0:	41 15       	cp	r20, r1
    15c2:	51 05       	cpc	r21, r1
    15c4:	21 f0       	breq	.+8      	; 0x15ce <qtm_acquisition_process+0x9e>
    15c6:	41 30       	cpi	r20, 0x01	; 1
    15c8:	51 05       	cpc	r21, r1
    15ca:	b9 f0       	breq	.+46     	; 0x15fa <qtm_acquisition_process+0xca>
    15cc:	02 c1       	rjmp	.+516    	; 0x17d2 <qtm_acquisition_process+0x2a2>
    15ce:	12 96       	adiw	r26, 0x02	; 2
    15d0:	cd 91       	ld	r28, X+
    15d2:	dc 91       	ld	r29, X
    15d4:	13 97       	sbiw	r26, 0x03	; 3
    15d6:	c0 0f       	add	r28, r16
    15d8:	d1 1f       	adc	r29, r17
    15da:	4c 81       	ldd	r20, Y+4	; 0x04
    15dc:	4f 70       	andi	r20, 0x0F	; 15
    15de:	9d 81       	ldd	r25, Y+5	; 0x05
    15e0:	49 17       	cp	r20, r25
    15e2:	10 f4       	brcc	.+4      	; 0x15e8 <qtm_acquisition_process+0xb8>
    15e4:	94 1b       	sub	r25, r20
    15e6:	01 c0       	rjmp	.+2      	; 0x15ea <qtm_acquisition_process+0xba>
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	02 c0       	rjmp	.+4      	; 0x15f0 <qtm_acquisition_process+0xc0>
    15ec:	36 95       	lsr	r19
    15ee:	27 95       	ror	r18
    15f0:	9a 95       	dec	r25
    15f2:	e2 f7       	brpl	.-8      	; 0x15ec <qtm_acquisition_process+0xbc>
    15f4:	21 83       	std	Z+1, r18	; 0x01
    15f6:	32 83       	std	Z+2, r19	; 0x02
    15f8:	ed c0       	rjmp	.+474    	; 0x17d4 <qtm_acquisition_process+0x2a4>
    15fa:	12 96       	adiw	r26, 0x02	; 2
    15fc:	4d 91       	ld	r20, X+
    15fe:	5c 91       	ld	r21, X
    1600:	13 97       	sbiw	r26, 0x03	; 3
    1602:	40 0f       	add	r20, r16
    1604:	51 1f       	adc	r21, r17
    1606:	ea 01       	movw	r28, r20
    1608:	0d 80       	ldd	r0, Y+5	; 0x05
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <qtm_acquisition_process+0xe0>
    160c:	36 95       	lsr	r19
    160e:	27 95       	ror	r18
    1610:	0a 94       	dec	r0
    1612:	e2 f7       	brpl	.-8      	; 0x160c <qtm_acquisition_process+0xdc>
    1614:	21 83       	std	Z+1, r18	; 0x01
    1616:	32 83       	std	Z+2, r19	; 0x02
    1618:	a3 80       	ldd	r10, Z+3	; 0x03
    161a:	b4 80       	ldd	r11, Z+4	; 0x04
    161c:	21 15       	cp	r18, r1
    161e:	d2 e0       	ldi	r29, 0x02	; 2
    1620:	3d 07       	cpc	r19, r29
    1622:	20 f0       	brcs	.+8      	; 0x162c <qtm_acquisition_process+0xfc>
    1624:	2f 5f       	subi	r18, 0xFF	; 255
    1626:	31 40       	sbci	r19, 0x01	; 1
    1628:	91 e0       	ldi	r25, 0x01	; 1
    162a:	05 c0       	rjmp	.+10     	; 0x1636 <qtm_acquisition_process+0x106>
    162c:	a4 01       	movw	r20, r8
    162e:	42 1b       	sub	r20, r18
    1630:	53 0b       	sbc	r21, r19
    1632:	9a 01       	movw	r18, r20
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	e3 01       	movw	r28, r6
    1638:	5a 80       	ldd	r5, Y+2	; 0x02
    163a:	d0 e4       	ldi	r29, 0x40	; 64
    163c:	5d 12       	cpse	r5, r29
    163e:	05 c0       	rjmp	.+10     	; 0x164a <qtm_acquisition_process+0x11a>
    1640:	36 95       	lsr	r19
    1642:	27 95       	ror	r18
    1644:	99 23       	and	r25, r25
    1646:	19 f0       	breq	.+6      	; 0x164e <qtm_acquisition_process+0x11e>
    1648:	09 c0       	rjmp	.+18     	; 0x165c <qtm_acquisition_process+0x12c>
    164a:	99 23       	and	r25, r25
    164c:	39 f0       	breq	.+14     	; 0x165c <qtm_acquisition_process+0x12c>
    164e:	4f ef       	ldi	r20, 0xFF	; 255
    1650:	a4 16       	cp	r10, r20
    1652:	b4 06       	cpc	r11, r20
    1654:	31 f4       	brne	.+12     	; 0x1662 <qtm_acquisition_process+0x132>
    1656:	40 82       	st	Z, r4
    1658:	8e e0       	ldi	r24, 0x0E	; 14
    165a:	07 c0       	rjmp	.+14     	; 0x166a <qtm_acquisition_process+0x13a>
    165c:	77 24       	eor	r7, r7
    165e:	73 94       	inc	r7
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <qtm_acquisition_process+0x134>
    1662:	71 2c       	mov	r7, r1
    1664:	2a 30       	cpi	r18, 0x0A	; 10
    1666:	31 05       	cpc	r19, r1
    1668:	90 f4       	brcc	.+36     	; 0x168e <qtm_acquisition_process+0x15e>
    166a:	14 96       	adiw	r26, 0x04	; 4
    166c:	ed 91       	ld	r30, X+
    166e:	fc 91       	ld	r31, X
    1670:	15 97       	sbiw	r26, 0x05	; 5
    1672:	e6 0f       	add	r30, r22
    1674:	f7 1f       	adc	r31, r23
    1676:	90 81       	ld	r25, Z
    1678:	97 ff       	sbrs	r25, 7
    167a:	30 82       	st	Z, r3
    167c:	14 96       	adiw	r26, 0x04	; 4
    167e:	ed 91       	ld	r30, X+
    1680:	fc 91       	ld	r31, X
    1682:	15 97       	sbiw	r26, 0x05	; 5
    1684:	e6 0f       	add	r30, r22
    1686:	f7 1f       	adc	r31, r23
    1688:	a3 82       	std	Z+3, r10	; 0x03
    168a:	b4 82       	std	Z+4, r11	; 0x04
    168c:	a3 c0       	rjmp	.+326    	; 0x17d4 <qtm_acquisition_process+0x2a4>
    168e:	e5 01       	movw	r28, r10
    1690:	cd 2f       	mov	r28, r29
    1692:	dd 27       	eor	r29, r29
    1694:	c2 95       	swap	r28
    1696:	cf 70       	andi	r28, 0x0F	; 15
    1698:	9c 2f       	mov	r25, r28
    169a:	a5 01       	movw	r20, r10
    169c:	44 27       	eor	r20, r20
    169e:	5f 70       	andi	r21, 0x0F	; 15
    16a0:	65 2e       	mov	r6, r21
    16a2:	a5 01       	movw	r20, r10
    16a4:	40 7f       	andi	r20, 0xF0	; 240
    16a6:	55 27       	eor	r21, r21
    16a8:	52 95       	swap	r21
    16aa:	42 95       	swap	r20
    16ac:	4f 70       	andi	r20, 0x0F	; 15
    16ae:	45 27       	eor	r20, r21
    16b0:	5f 70       	andi	r21, 0x0F	; 15
    16b2:	45 27       	eor	r20, r21
    16b4:	5a 2d       	mov	r21, r10
    16b6:	5f 70       	andi	r21, 0x0F	; 15
    16b8:	a5 2e       	mov	r10, r21
    16ba:	c4 30       	cpi	r28, 0x04	; 4
    16bc:	30 f0       	brcs	.+12     	; 0x16ca <qtm_acquisition_process+0x19a>
    16be:	93 70       	andi	r25, 0x03	; 3
    16c0:	d6 95       	lsr	r29
    16c2:	c7 95       	ror	r28
    16c4:	d6 95       	lsr	r29
    16c6:	c7 95       	ror	r28
    16c8:	9c 0f       	add	r25, r28
    16ca:	71 10       	cpse	r7, r1
    16cc:	3c c0       	rjmp	.+120    	; 0x1746 <qtm_acquisition_process+0x216>
    16ce:	50 e8       	ldi	r21, 0x80	; 128
    16d0:	55 0d       	add	r21, r5
    16d2:	52 30       	cpi	r21, 0x02	; 2
    16d4:	10 f4       	brcc	.+4      	; 0x16da <qtm_acquisition_process+0x1aa>
    16d6:	56 e0       	ldi	r21, 0x06	; 6
    16d8:	07 c0       	rjmp	.+14     	; 0x16e8 <qtm_acquisition_process+0x1b8>
    16da:	53 e0       	ldi	r21, 0x03	; 3
    16dc:	05 c0       	rjmp	.+10     	; 0x16e8 <qtm_acquisition_process+0x1b8>
    16de:	95 17       	cp	r25, r21
    16e0:	68 f4       	brcc	.+26     	; 0x16fc <qtm_acquisition_process+0x1cc>
    16e2:	9f 5f       	subi	r25, 0xFF	; 255
    16e4:	2f 5c       	subi	r18, 0xCF	; 207
    16e6:	31 09       	sbc	r19, r1
    16e8:	20 3d       	cpi	r18, 0xD0	; 208
    16ea:	31 05       	cpc	r19, r1
    16ec:	c0 f7       	brcc	.-16     	; 0x16de <qtm_acquisition_process+0x1ae>
    16ee:	06 c0       	rjmp	.+12     	; 0x16fc <qtm_acquisition_process+0x1cc>
    16f0:	cf e0       	ldi	r28, 0x0F	; 15
    16f2:	6c 16       	cp	r6, r28
    16f4:	49 f0       	breq	.+18     	; 0x1708 <qtm_acquisition_process+0x1d8>
    16f6:	63 94       	inc	r6
    16f8:	25 51       	subi	r18, 0x15	; 21
    16fa:	31 09       	sbc	r19, r1
    16fc:	26 31       	cpi	r18, 0x16	; 22
    16fe:	31 05       	cpc	r19, r1
    1700:	b8 f7       	brcc	.-18     	; 0x16f0 <qtm_acquisition_process+0x1c0>
    1702:	df e0       	ldi	r29, 0x0F	; 15
    1704:	6d 12       	cpse	r6, r29
    1706:	0e c0       	rjmp	.+28     	; 0x1724 <qtm_acquisition_process+0x1f4>
    1708:	95 17       	cp	r25, r21
    170a:	20 f4       	brcc	.+8      	; 0x1714 <qtm_acquisition_process+0x1e4>
    170c:	9f 5f       	subi	r25, 0xFF	; 255
    170e:	d5 e0       	ldi	r29, 0x05	; 5
    1710:	6d 2e       	mov	r6, r29
    1712:	08 c0       	rjmp	.+16     	; 0x1724 <qtm_acquisition_process+0x1f4>
    1714:	cf e0       	ldi	r28, 0x0F	; 15
    1716:	6c 2e       	mov	r6, r28
    1718:	05 c0       	rjmp	.+10     	; 0x1724 <qtm_acquisition_process+0x1f4>
    171a:	4f 30       	cpi	r20, 0x0F	; 15
    171c:	49 f0       	breq	.+18     	; 0x1730 <qtm_acquisition_process+0x200>
    171e:	4f 5f       	subi	r20, 0xFF	; 255
    1720:	22 50       	subi	r18, 0x02	; 2
    1722:	31 09       	sbc	r19, r1
    1724:	23 30       	cpi	r18, 0x03	; 3
    1726:	31 05       	cpc	r19, r1
    1728:	c0 f7       	brcc	.-16     	; 0x171a <qtm_acquisition_process+0x1ea>
    172a:	4f 30       	cpi	r20, 0x0F	; 15
    172c:	09 f0       	breq	.+2      	; 0x1730 <qtm_acquisition_process+0x200>
    172e:	65 c0       	rjmp	.+202    	; 0x17fa <qtm_acquisition_process+0x2ca>
    1730:	4f e0       	ldi	r20, 0x0F	; 15
    1732:	64 16       	cp	r6, r20
    1734:	81 f1       	breq	.+96     	; 0x1796 <qtm_acquisition_process+0x266>
    1736:	63 94       	inc	r6
    1738:	45 e0       	ldi	r20, 0x05	; 5
    173a:	5f c0       	rjmp	.+190    	; 0x17fa <qtm_acquisition_process+0x2ca>
    173c:	99 23       	and	r25, r25
    173e:	61 f0       	breq	.+24     	; 0x1758 <qtm_acquisition_process+0x228>
    1740:	91 50       	subi	r25, 0x01	; 1
    1742:	2f 5c       	subi	r18, 0xCF	; 207
    1744:	31 09       	sbc	r19, r1
    1746:	20 3d       	cpi	r18, 0xD0	; 208
    1748:	31 05       	cpc	r19, r1
    174a:	c0 f7       	brcc	.-16     	; 0x173c <qtm_acquisition_process+0x20c>
    174c:	05 c0       	rjmp	.+10     	; 0x1758 <qtm_acquisition_process+0x228>
    174e:	66 20       	and	r6, r6
    1750:	41 f0       	breq	.+16     	; 0x1762 <qtm_acquisition_process+0x232>
    1752:	6a 94       	dec	r6
    1754:	25 51       	subi	r18, 0x15	; 21
    1756:	31 09       	sbc	r19, r1
    1758:	26 31       	cpi	r18, 0x16	; 22
    175a:	31 05       	cpc	r19, r1
    175c:	c0 f7       	brcc	.-16     	; 0x174e <qtm_acquisition_process+0x21e>
    175e:	61 10       	cpse	r6, r1
    1760:	0d c0       	rjmp	.+26     	; 0x177c <qtm_acquisition_process+0x24c>
    1762:	99 23       	and	r25, r25
    1764:	21 f0       	breq	.+8      	; 0x176e <qtm_acquisition_process+0x23e>
    1766:	91 50       	subi	r25, 0x01	; 1
    1768:	5a e0       	ldi	r21, 0x0A	; 10
    176a:	65 2e       	mov	r6, r21
    176c:	07 c0       	rjmp	.+14     	; 0x177c <qtm_acquisition_process+0x24c>
    176e:	61 2c       	mov	r6, r1
    1770:	05 c0       	rjmp	.+10     	; 0x177c <qtm_acquisition_process+0x24c>
    1772:	44 23       	and	r20, r20
    1774:	41 f0       	breq	.+16     	; 0x1786 <qtm_acquisition_process+0x256>
    1776:	41 50       	subi	r20, 0x01	; 1
    1778:	22 50       	subi	r18, 0x02	; 2
    177a:	31 09       	sbc	r19, r1
    177c:	23 30       	cpi	r18, 0x03	; 3
    177e:	31 05       	cpc	r19, r1
    1780:	c0 f7       	brcc	.-16     	; 0x1772 <qtm_acquisition_process+0x242>
    1782:	41 11       	cpse	r20, r1
    1784:	10 c0       	rjmp	.+32     	; 0x17a6 <qtm_acquisition_process+0x276>
    1786:	66 20       	and	r6, r6
    1788:	e9 f1       	breq	.+122    	; 0x1804 <qtm_acquisition_process+0x2d4>
    178a:	6a 94       	dec	r6
    178c:	4a e0       	ldi	r20, 0x0A	; 10
    178e:	23 30       	cpi	r18, 0x03	; 3
    1790:	31 05       	cpc	r19, r1
    1792:	c8 f6       	brcc	.-78     	; 0x1746 <qtm_acquisition_process+0x216>
    1794:	08 c0       	rjmp	.+16     	; 0x17a6 <qtm_acquisition_process+0x276>
    1796:	59 13       	cpse	r21, r25
    1798:	2f c0       	rjmp	.+94     	; 0x17f8 <qtm_acquisition_process+0x2c8>
    179a:	23 30       	cpi	r18, 0x03	; 3
    179c:	31 05       	cpc	r19, r1
    179e:	40 f1       	brcs	.+80     	; 0x17f0 <qtm_acquisition_process+0x2c0>
    17a0:	4f e0       	ldi	r20, 0x0F	; 15
    17a2:	a4 2e       	mov	r10, r20
    17a4:	4f e0       	ldi	r20, 0x0F	; 15
    17a6:	94 30       	cpi	r25, 0x04	; 4
    17a8:	18 f0       	brcs	.+6      	; 0x17b0 <qtm_acquisition_process+0x280>
    17aa:	99 0f       	add	r25, r25
    17ac:	99 0f       	add	r25, r25
    17ae:	99 50       	subi	r25, 0x09	; 9
    17b0:	c0 e1       	ldi	r28, 0x10	; 16
    17b2:	4c 9f       	mul	r20, r28
    17b4:	a0 01       	movw	r20, r0
    17b6:	11 24       	eor	r1, r1
    17b8:	56 29       	or	r21, r6
    17ba:	4a 29       	or	r20, r10
    17bc:	c9 2f       	mov	r28, r25
    17be:	d0 e0       	ldi	r29, 0x00	; 0
    17c0:	dc 2f       	mov	r29, r28
    17c2:	cc 27       	eor	r28, r28
    17c4:	d2 95       	swap	r29
    17c6:	d0 7f       	andi	r29, 0xF0	; 240
    17c8:	4c 2b       	or	r20, r28
    17ca:	5d 2b       	or	r21, r29
    17cc:	43 83       	std	Z+3, r20	; 0x03
    17ce:	54 83       	std	Z+4, r21	; 0x04
    17d0:	01 c0       	rjmp	.+2      	; 0x17d4 <qtm_acquisition_process+0x2a4>
    17d2:	ff cf       	rjmp	.-2      	; 0x17d2 <qtm_acquisition_process+0x2a2>
    17d4:	df ef       	ldi	r29, 0xFF	; 255
    17d6:	ed 1a       	sub	r14, r29
    17d8:	fd 0a       	sbc	r15, r29
    17da:	6b 5f       	subi	r22, 0xFB	; 251
    17dc:	7f 4f       	sbci	r23, 0xFF	; 255
    17de:	0a 5f       	subi	r16, 0xFA	; 250
    17e0:	1f 4f       	sbci	r17, 0xFF	; 255
    17e2:	d3 ce       	rjmp	.-602    	; 0x158a <qtm_acquisition_process+0x5a>
    17e4:	92 e0       	ldi	r25, 0x02	; 2
    17e6:	90 93 67 3e 	sts	0x3E67, r25	; 0x803e67 <touch_seq_lib_state>
    17ea:	0e c0       	rjmp	.+28     	; 0x1808 <qtm_acquisition_process+0x2d8>
    17ec:	83 e0       	ldi	r24, 0x03	; 3
    17ee:	0c c0       	rjmp	.+24     	; 0x1808 <qtm_acquisition_process+0x2d8>
    17f0:	4f e0       	ldi	r20, 0x0F	; 15
    17f2:	2f e0       	ldi	r18, 0x0F	; 15
    17f4:	a2 2e       	mov	r10, r18
    17f6:	d7 cf       	rjmp	.-82     	; 0x17a6 <qtm_acquisition_process+0x276>
    17f8:	4f e0       	ldi	r20, 0x0F	; 15
    17fa:	23 30       	cpi	r18, 0x03	; 3
    17fc:	31 05       	cpc	r19, r1
    17fe:	08 f0       	brcs	.+2      	; 0x1802 <qtm_acquisition_process+0x2d2>
    1800:	73 cf       	rjmp	.-282    	; 0x16e8 <qtm_acquisition_process+0x1b8>
    1802:	d1 cf       	rjmp	.-94     	; 0x17a6 <qtm_acquisition_process+0x276>
    1804:	40 e0       	ldi	r20, 0x00	; 0
    1806:	cf cf       	rjmp	.-98     	; 0x17a6 <qtm_acquisition_process+0x276>
    1808:	df 91       	pop	r29
    180a:	cf 91       	pop	r28
    180c:	1f 91       	pop	r17
    180e:	0f 91       	pop	r16
    1810:	ff 90       	pop	r15
    1812:	ef 90       	pop	r14
    1814:	df 90       	pop	r13
    1816:	cf 90       	pop	r12
    1818:	bf 90       	pop	r11
    181a:	af 90       	pop	r10
    181c:	9f 90       	pop	r9
    181e:	8f 90       	pop	r8
    1820:	7f 90       	pop	r7
    1822:	6f 90       	pop	r6
    1824:	5f 90       	pop	r5
    1826:	4f 90       	pop	r4
    1828:	3f 90       	pop	r3
    182a:	08 95       	ret

0000182c <qtm_ptc_init_acquisition_module>:
    182c:	cf 93       	push	r28
    182e:	dc 01       	movw	r26, r24
    1830:	89 2b       	or	r24, r25
    1832:	79 f1       	breq	.+94     	; 0x1892 <qtm_ptc_init_acquisition_module+0x66>
    1834:	ed 91       	ld	r30, X+
    1836:	fc 91       	ld	r31, X
    1838:	11 97       	sbiw	r26, 0x01	; 1
    183a:	60 81       	ld	r22, Z
    183c:	71 81       	ldd	r23, Z+1	; 0x01
    183e:	40 e0       	ldi	r20, 0x00	; 0
    1840:	50 e0       	ldi	r21, 0x00	; 0
    1842:	20 e0       	ldi	r18, 0x00	; 0
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	26 17       	cp	r18, r22
    184a:	37 07       	cpc	r19, r23
    184c:	79 f0       	breq	.+30     	; 0x186c <qtm_ptc_init_acquisition_module+0x40>
    184e:	12 96       	adiw	r26, 0x02	; 2
    1850:	ed 91       	ld	r30, X+
    1852:	fc 91       	ld	r31, X
    1854:	13 97       	sbiw	r26, 0x03	; 3
    1856:	e4 0f       	add	r30, r20
    1858:	f5 1f       	adc	r31, r21
    185a:	c0 81       	ld	r28, Z
    185c:	81 81       	ldd	r24, Z+1	; 0x01
    185e:	8c 2b       	or	r24, r28
    1860:	98 2b       	or	r25, r24
    1862:	2f 5f       	subi	r18, 0xFF	; 255
    1864:	3f 4f       	sbci	r19, 0xFF	; 255
    1866:	4a 5f       	subi	r20, 0xFA	; 250
    1868:	5f 4f       	sbci	r21, 0xFF	; 255
    186a:	ee cf       	rjmp	.-36     	; 0x1848 <qtm_ptc_init_acquisition_module+0x1c>
    186c:	99 23       	and	r25, r25
    186e:	99 f0       	breq	.+38     	; 0x1896 <qtm_ptc_init_acquisition_module+0x6a>
    1870:	80 91 67 3e 	lds	r24, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    1874:	81 11       	cpse	r24, r1
    1876:	06 c0       	rjmp	.+12     	; 0x1884 <qtm_ptc_init_acquisition_module+0x58>
    1878:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    1882:	05 c0       	rjmp	.+10     	; 0x188e <qtm_ptc_init_acquisition_module+0x62>
    1884:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1888:	98 2b       	or	r25, r24
    188a:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    188e:	80 e0       	ldi	r24, 0x00	; 0
    1890:	03 c0       	rjmp	.+6      	; 0x1898 <qtm_ptc_init_acquisition_module+0x6c>
    1892:	8b e0       	ldi	r24, 0x0B	; 11
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <qtm_ptc_init_acquisition_module+0x6c>
    1896:	82 e0       	ldi	r24, 0x02	; 2
    1898:	cf 91       	pop	r28
    189a:	08 95       	ret

0000189c <qtm_ptc_qtlib_assign_signal_memory>:
    189c:	00 97       	sbiw	r24, 0x00	; 0
    189e:	31 f0       	breq	.+12     	; 0x18ac <qtm_ptc_qtlib_assign_signal_memory+0x10>
    18a0:	80 93 a6 3e 	sts	0x3EA6, r24	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    18a4:	90 93 a7 3e 	sts	0x3EA7, r25	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    18a8:	80 e0       	ldi	r24, 0x00	; 0
    18aa:	08 95       	ret
    18ac:	8b e0       	ldi	r24, 0x0B	; 11
    18ae:	08 95       	ret

000018b0 <qtm_ptc_start_measurement_seq>:
    18b0:	61 15       	cp	r22, r1
    18b2:	71 05       	cpc	r23, r1
    18b4:	91 f1       	breq	.+100    	; 0x191a <qtm_ptc_start_measurement_seq+0x6a>
    18b6:	00 97       	sbiw	r24, 0x00	; 0
    18b8:	81 f1       	breq	.+96     	; 0x191a <qtm_ptc_start_measurement_seq+0x6a>
    18ba:	20 91 67 3e 	lds	r18, 0x3E67	; 0x803e67 <touch_seq_lib_state>
    18be:	22 23       	and	r18, r18
    18c0:	71 f1       	breq	.+92     	; 0x191e <qtm_ptc_start_measurement_seq+0x6e>
    18c2:	24 30       	cpi	r18, 0x04	; 4
    18c4:	71 f1       	breq	.+92     	; 0x1922 <qtm_ptc_start_measurement_seq+0x72>
    18c6:	80 93 a4 3e 	sts	0x3EA4, r24	; 0x803ea4 <qtm_acquisition_control_working_set_ptr>
    18ca:	90 93 a5 3e 	sts	0x3EA5, r25	; 0x803ea5 <qtm_acquisition_control_working_set_ptr+0x1>
    18ce:	60 93 65 3e 	sts	0x3E65, r22	; 0x803e65 <ptc_seq_measure_complete_pointer>
    18d2:	70 93 66 3e 	sts	0x3E66, r23	; 0x803e66 <ptc_seq_measure_complete_pointer+0x1>
    18d6:	20 ec       	ldi	r18, 0xC0	; 192
    18d8:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18dc:	dc 01       	movw	r26, r24
    18de:	ed 91       	ld	r30, X+
    18e0:	fc 91       	ld	r31, X
    18e2:	22 81       	ldd	r18, Z+2	; 0x02
    18e4:	20 34       	cpi	r18, 0x40	; 64
    18e6:	21 f4       	brne	.+8      	; 0x18f0 <qtm_ptc_start_measurement_seq+0x40>
    18e8:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18ec:	20 62       	ori	r18, 0x20	; 32
    18ee:	05 c0       	rjmp	.+10     	; 0x18fa <qtm_ptc_start_measurement_seq+0x4a>
    18f0:	20 38       	cpi	r18, 0x80	; 128
    18f2:	41 f4       	brne	.+16     	; 0x1904 <qtm_ptc_start_measurement_seq+0x54>
    18f4:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18f8:	28 62       	ori	r18, 0x28	; 40
    18fa:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    18fe:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    1902:	13 c0       	rjmp	.+38     	; 0x192a <qtm_ptc_start_measurement_seq+0x7a>
    1904:	21 38       	cpi	r18, 0x81	; 129
    1906:	79 f4       	brne	.+30     	; 0x1926 <qtm_ptc_start_measurement_seq+0x76>
    1908:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    190c:	28 62       	ori	r18, 0x28	; 40
    190e:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1912:	26 e8       	ldi	r18, 0x86	; 134
    1914:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    1918:	08 c0       	rjmp	.+16     	; 0x192a <qtm_ptc_start_measurement_seq+0x7a>
    191a:	8b e0       	ldi	r24, 0x0B	; 11
    191c:	08 95       	ret
    191e:	83 e0       	ldi	r24, 0x03	; 3
    1920:	08 95       	ret
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	08 95       	ret
    1926:	82 e0       	ldi	r24, 0x02	; 2
    1928:	08 95       	ret
    192a:	dc 01       	movw	r26, r24
    192c:	ed 91       	ld	r30, X+
    192e:	fc 91       	ld	r31, X
    1930:	84 81       	ldd	r24, Z+4	; 0x04
    1932:	80 31       	cpi	r24, 0x10	; 16
    1934:	08 f0       	brcs	.+2      	; 0x1938 <qtm_ptc_start_measurement_seq+0x88>
    1936:	80 e1       	ldi	r24, 0x10	; 16
    1938:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    1942:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    1946:	10 92 68 3e 	sts	0x3E68, r1	; 0x803e68 <current_measure_channel>
    194a:	10 92 69 3e 	sts	0x3E69, r1	; 0x803e69 <current_measure_channel+0x1>
    194e:	39 dd       	rcall	.-1422   	; 0x13c2 <select_next_channel_to_measure>
    1950:	81 11       	cpse	r24, r1
    1952:	0a c0       	rjmp	.+20     	; 0x1968 <qtm_ptc_start_measurement_seq+0xb8>
    1954:	84 e0       	ldi	r24, 0x04	; 4
    1956:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    195a:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    195e:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    1962:	62 dd       	rcall	.-1340   	; 0x1428 <qtm_measure_node>
    1964:	80 e0       	ldi	r24, 0x00	; 0
    1966:	08 95       	ret
    1968:	82 e0       	ldi	r24, 0x02	; 2
    196a:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    196e:	08 95       	ret

00001970 <qtm_enable_sensor_node>:
    1970:	00 97       	sbiw	r24, 0x00	; 0
    1972:	c9 f0       	breq	.+50     	; 0x19a6 <qtm_enable_sensor_node+0x36>
    1974:	dc 01       	movw	r26, r24
    1976:	ed 91       	ld	r30, X+
    1978:	fc 91       	ld	r31, X
    197a:	11 97       	sbiw	r26, 0x01	; 1
    197c:	20 81       	ld	r18, Z
    197e:	31 81       	ldd	r19, Z+1	; 0x01
    1980:	26 17       	cp	r18, r22
    1982:	37 07       	cpc	r19, r23
    1984:	90 f0       	brcs	.+36     	; 0x19aa <qtm_enable_sensor_node+0x3a>
    1986:	45 e0       	ldi	r20, 0x05	; 5
    1988:	46 9f       	mul	r20, r22
    198a:	90 01       	movw	r18, r0
    198c:	47 9f       	mul	r20, r23
    198e:	30 0d       	add	r19, r0
    1990:	11 24       	eor	r1, r1
    1992:	14 96       	adiw	r26, 0x04	; 4
    1994:	ed 91       	ld	r30, X+
    1996:	fc 91       	ld	r31, X
    1998:	15 97       	sbiw	r26, 0x05	; 5
    199a:	e2 0f       	add	r30, r18
    199c:	f3 1f       	adc	r31, r19
    199e:	81 e0       	ldi	r24, 0x01	; 1
    19a0:	80 83       	st	Z, r24
    19a2:	80 e0       	ldi	r24, 0x00	; 0
    19a4:	08 95       	ret
    19a6:	8b e0       	ldi	r24, 0x0B	; 11
    19a8:	08 95       	ret
    19aa:	82 e0       	ldi	r24, 0x02	; 2
    19ac:	08 95       	ret

000019ae <qtm_calibrate_sensor_node>:
    19ae:	fc 01       	movw	r30, r24
    19b0:	89 2b       	or	r24, r25
    19b2:	d1 f1       	breq	.+116    	; 0x1a28 <qtm_calibrate_sensor_node+0x7a>
    19b4:	a0 81       	ld	r26, Z
    19b6:	b1 81       	ldd	r27, Z+1	; 0x01
    19b8:	8d 91       	ld	r24, X+
    19ba:	9c 91       	ld	r25, X
    19bc:	11 97       	sbiw	r26, 0x01	; 1
    19be:	86 17       	cp	r24, r22
    19c0:	97 07       	cpc	r25, r23
    19c2:	a0 f1       	brcs	.+104    	; 0x1a2c <qtm_calibrate_sensor_node+0x7e>
    19c4:	12 96       	adiw	r26, 0x02	; 2
    19c6:	9c 91       	ld	r25, X
    19c8:	04 80       	ldd	r0, Z+4	; 0x04
    19ca:	f5 81       	ldd	r31, Z+5	; 0x05
    19cc:	e0 2d       	mov	r30, r0
    19ce:	90 34       	cpi	r25, 0x40	; 64
    19d0:	59 f4       	brne	.+22     	; 0x19e8 <qtm_calibrate_sensor_node+0x3a>
    19d2:	85 e0       	ldi	r24, 0x05	; 5
    19d4:	86 9f       	mul	r24, r22
    19d6:	d0 01       	movw	r26, r0
    19d8:	87 9f       	mul	r24, r23
    19da:	b0 0d       	add	r27, r0
    19dc:	11 24       	eor	r1, r1
    19de:	ae 0f       	add	r26, r30
    19e0:	bf 1f       	adc	r27, r31
    19e2:	84 e3       	ldi	r24, 0x34	; 52
    19e4:	92 e0       	ldi	r25, 0x02	; 2
    19e6:	0d c0       	rjmp	.+26     	; 0x1a02 <qtm_calibrate_sensor_node+0x54>
    19e8:	90 58       	subi	r25, 0x80	; 128
    19ea:	92 30       	cpi	r25, 0x02	; 2
    19ec:	80 f4       	brcc	.+32     	; 0x1a0e <qtm_calibrate_sensor_node+0x60>
    19ee:	85 e0       	ldi	r24, 0x05	; 5
    19f0:	86 9f       	mul	r24, r22
    19f2:	d0 01       	movw	r26, r0
    19f4:	87 9f       	mul	r24, r23
    19f6:	b0 0d       	add	r27, r0
    19f8:	11 24       	eor	r1, r1
    19fa:	ae 0f       	add	r26, r30
    19fc:	bf 1f       	adc	r27, r31
    19fe:	87 e6       	ldi	r24, 0x67	; 103
    1a00:	95 e0       	ldi	r25, 0x05	; 5
    1a02:	13 96       	adiw	r26, 0x03	; 3
    1a04:	8d 93       	st	X+, r24
    1a06:	9c 93       	st	X, r25
    1a08:	14 97       	sbiw	r26, 0x04	; 4
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <qtm_calibrate_sensor_node+0x62>
    1a0e:	82 e0       	ldi	r24, 0x02	; 2
    1a10:	95 e0       	ldi	r25, 0x05	; 5
    1a12:	96 9f       	mul	r25, r22
    1a14:	90 01       	movw	r18, r0
    1a16:	97 9f       	mul	r25, r23
    1a18:	30 0d       	add	r19, r0
    1a1a:	11 24       	eor	r1, r1
    1a1c:	e2 0f       	add	r30, r18
    1a1e:	f3 1f       	adc	r31, r19
    1a20:	90 81       	ld	r25, Z
    1a22:	92 60       	ori	r25, 0x02	; 2
    1a24:	90 83       	st	Z, r25
    1a26:	08 95       	ret
    1a28:	8b e0       	ldi	r24, 0x0B	; 11
    1a2a:	08 95       	ret
    1a2c:	82 e0       	ldi	r24, 0x02	; 2
    1a2e:	08 95       	ret

00001a30 <qtm_t81x_ptc_handler_eoc>:
    1a30:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1a34:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    1a38:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    1a3c:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    1a40:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    1a44:	9c 01       	movw	r18, r24
    1a46:	22 0f       	add	r18, r18
    1a48:	33 1f       	adc	r19, r19
    1a4a:	e0 91 a6 3e 	lds	r30, 0x3EA6	; 0x803ea6 <qtm_raw_data_measurements_ptr>
    1a4e:	f0 91 a7 3e 	lds	r31, 0x3EA7	; 0x803ea7 <qtm_raw_data_measurements_ptr+0x1>
    1a52:	e2 0f       	add	r30, r18
    1a54:	f3 1f       	adc	r31, r19
    1a56:	40 83       	st	Z, r20
    1a58:	51 83       	std	Z+1, r21	; 0x01
    1a5a:	01 96       	adiw	r24, 0x01	; 1
    1a5c:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <current_measure_channel>
    1a60:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <current_measure_channel+0x1>
    1a64:	ae dc       	rcall	.-1700   	; 0x13c2 <select_next_channel_to_measure>
    1a66:	81 11       	cpse	r24, r1
    1a68:	08 c0       	rjmp	.+16     	; 0x1a7a <qtm_t81x_ptc_handler_eoc+0x4a>
    1a6a:	84 e0       	ldi	r24, 0x04	; 4
    1a6c:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <touch_seq_lib_state>
    1a70:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <current_measure_channel>
    1a74:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <current_measure_channel+0x1>
    1a78:	d7 cc       	rjmp	.-1618   	; 0x1428 <qtm_measure_node>
    1a7a:	e0 91 65 3e 	lds	r30, 0x3E65	; 0x803e65 <ptc_seq_measure_complete_pointer>
    1a7e:	f0 91 66 3e 	lds	r31, 0x3E66	; 0x803e66 <ptc_seq_measure_complete_pointer+0x1>
    1a82:	09 94       	ijmp

00001a84 <__udivmodhi4>:
    1a84:	aa 1b       	sub	r26, r26
    1a86:	bb 1b       	sub	r27, r27
    1a88:	51 e1       	ldi	r21, 0x11	; 17
    1a8a:	07 c0       	rjmp	.+14     	; 0x1a9a <__udivmodhi4_ep>

00001a8c <__udivmodhi4_loop>:
    1a8c:	aa 1f       	adc	r26, r26
    1a8e:	bb 1f       	adc	r27, r27
    1a90:	a6 17       	cp	r26, r22
    1a92:	b7 07       	cpc	r27, r23
    1a94:	10 f0       	brcs	.+4      	; 0x1a9a <__udivmodhi4_ep>
    1a96:	a6 1b       	sub	r26, r22
    1a98:	b7 0b       	sbc	r27, r23

00001a9a <__udivmodhi4_ep>:
    1a9a:	88 1f       	adc	r24, r24
    1a9c:	99 1f       	adc	r25, r25
    1a9e:	5a 95       	dec	r21
    1aa0:	a9 f7       	brne	.-22     	; 0x1a8c <__udivmodhi4_loop>
    1aa2:	80 95       	com	r24
    1aa4:	90 95       	com	r25
    1aa6:	bc 01       	movw	r22, r24
    1aa8:	cd 01       	movw	r24, r26
    1aaa:	08 95       	ret

00001aac <__divmodhi4>:
    1aac:	97 fb       	bst	r25, 7
    1aae:	07 2e       	mov	r0, r23
    1ab0:	16 f4       	brtc	.+4      	; 0x1ab6 <__divmodhi4+0xa>
    1ab2:	00 94       	com	r0
    1ab4:	06 d0       	rcall	.+12     	; 0x1ac2 <__divmodhi4_neg1>
    1ab6:	77 fd       	sbrc	r23, 7
    1ab8:	08 d0       	rcall	.+16     	; 0x1aca <__divmodhi4_neg2>
    1aba:	e4 df       	rcall	.-56     	; 0x1a84 <__udivmodhi4>
    1abc:	07 fc       	sbrc	r0, 7
    1abe:	05 d0       	rcall	.+10     	; 0x1aca <__divmodhi4_neg2>
    1ac0:	3e f4       	brtc	.+14     	; 0x1ad0 <__divmodhi4_exit>

00001ac2 <__divmodhi4_neg1>:
    1ac2:	90 95       	com	r25
    1ac4:	81 95       	neg	r24
    1ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac8:	08 95       	ret

00001aca <__divmodhi4_neg2>:
    1aca:	70 95       	com	r23
    1acc:	61 95       	neg	r22
    1ace:	7f 4f       	sbci	r23, 0xFF	; 255

00001ad0 <__divmodhi4_exit>:
    1ad0:	08 95       	ret

00001ad2 <_exit>:
    1ad2:	f8 94       	cli

00001ad4 <__stop_program>:
    1ad4:	ff cf       	rjmp	.-2      	; 0x1ad4 <__stop_program>
