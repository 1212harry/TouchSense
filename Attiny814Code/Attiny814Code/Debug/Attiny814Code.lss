
Attiny814Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00803e00  000019a2  00001a56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000199c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  0000999c  0000199c  00001a50  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000005b  00803e40  00803e40  00001a96  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001a96  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ac8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002c8  00000000  00000000  00001b08  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005838  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002448  00000000  00000000  00007608  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000169b  00000000  00000000  00009a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004e4  00000000  00000000  0000b0ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002b26  00000000  00000000  0000b5d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000d66  00000000  00000000  0000e0f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  0000ee5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	30 c0       	rjmp	.+96     	; 0x70 <__vector_7>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	4e c0       	rjmp	.+156    	; 0xbe <__vector_16>
      22:	e2 c2       	rjmp	.+1476   	; 0x5e8 <__vector_17>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	cd bf       	out	0x3d, r28	; 61
      3c:	df e3       	ldi	r29, 0x3F	; 63
      3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
      40:	1e e3       	ldi	r17, 0x3E	; 62
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	be e3       	ldi	r27, 0x3E	; 62
      46:	e2 ea       	ldi	r30, 0xA2	; 162
      48:	f9 e1       	ldi	r31, 0x19	; 25
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	a0 34       	cpi	r26, 0x40	; 64
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	2e e3       	ldi	r18, 0x3E	; 62
      58:	a0 e4       	ldi	r26, 0x40	; 64
      5a:	be e3       	ldi	r27, 0x3E	; 62
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	ab 39       	cpi	r26, 0x9B	; 155
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	ea d0       	rcall	.+468    	; 0x23c <main>
      68:	97 cc       	rjmp	.-1746   	; 0xfffff998 <__eeprom_end+0xff7ef998>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      6c:	1f d3       	rcall	.+1598   	; 0x6ac <system_init>

	touch_init();
      6e:	26 c2       	rjmp	.+1100   	; 0x4bc <touch_init>

00000070 <__vector_7>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_PIT_vect)
{
      70:	1f 92       	push	r1
      72:	0f 92       	push	r0
      74:	0f b6       	in	r0, 0x3f	; 63
      76:	0f 92       	push	r0
      78:	11 24       	eor	r1, r1
      7a:	2f 93       	push	r18
      7c:	3f 93       	push	r19
      7e:	4f 93       	push	r20
      80:	5f 93       	push	r21
      82:	6f 93       	push	r22
      84:	7f 93       	push	r23
      86:	8f 93       	push	r24
      88:	9f 93       	push	r25
      8a:	af 93       	push	r26
      8c:	bf 93       	push	r27
      8e:	ef 93       	push	r30
      90:	ff 93       	push	r31
	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      92:	86 d2       	rcall	.+1292   	; 0x5a0 <touch_timer_handler>
	RTC_CallBack();
      94:	85 d0       	rcall	.+266    	; 0x1a0 <RTC_CallBack>
	/* PIT interrupt flag has to be cleared manually */
	RTC.PITINTFLAGS = RTC_PI_bm;
      96:	81 e0       	ldi	r24, 0x01	; 1
      98:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
}
      9c:	ff 91       	pop	r31
      9e:	ef 91       	pop	r30
      a0:	bf 91       	pop	r27
      a2:	af 91       	pop	r26
      a4:	9f 91       	pop	r25
      a6:	8f 91       	pop	r24
      a8:	7f 91       	pop	r23
      aa:	6f 91       	pop	r22
      ac:	5f 91       	pop	r21
      ae:	4f 91       	pop	r20
      b0:	3f 91       	pop	r19
      b2:	2f 91       	pop	r18
      b4:	0f 90       	pop	r0
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	0f 90       	pop	r0
      ba:	1f 90       	pop	r1
      bc:	18 95       	reti

000000be <__vector_16>:

ISR(AC0_AC_vect)
{
      be:	1f 92       	push	r1
      c0:	0f 92       	push	r0
      c2:	0f b6       	in	r0, 0x3f	; 63
      c4:	0f 92       	push	r0
      c6:	11 24       	eor	r1, r1
      c8:	2f 93       	push	r18
      ca:	3f 93       	push	r19
      cc:	4f 93       	push	r20
      ce:	5f 93       	push	r21
      d0:	6f 93       	push	r22
      d2:	7f 93       	push	r23
      d4:	8f 93       	push	r24
      d6:	9f 93       	push	r25
      d8:	af 93       	push	r26
      da:	bf 93       	push	r27
      dc:	ef 93       	push	r30
      de:	ff 93       	push	r31
	/* Insert your AC interrupt handling code here */
	/* The interrupt flag has to be cleared manually */
	AC0.STATUS = AC_CMP_bm;
      e0:	81 e0       	ldi	r24, 0x01	; 1
      e2:	80 93 77 06 	sts	0x0677, r24	; 0x800677 <__TEXT_REGION_LENGTH__+0x700677>
	LowBattery();
      e6:	4e d0       	rcall	.+156    	; 0x184 <LowBattery>
}
      e8:	ff 91       	pop	r31
      ea:	ef 91       	pop	r30
      ec:	bf 91       	pop	r27
      ee:	af 91       	pop	r26
      f0:	9f 91       	pop	r25
      f2:	8f 91       	pop	r24
      f4:	7f 91       	pop	r23
      f6:	6f 91       	pop	r22
      f8:	5f 91       	pop	r21
      fa:	4f 91       	pop	r20
      fc:	3f 91       	pop	r19
      fe:	2f 91       	pop	r18
     100:	0f 90       	pop	r0
     102:	0f be       	out	0x3f, r0	; 63
     104:	0f 90       	pop	r0
     106:	1f 90       	pop	r1
     108:	18 95       	reti

0000010a <TOUCH_SetMeasureBusyFlag>:
	
	if (edgeDetectFreeze == 1)
		tempDelta = 0;
		
	return tempDelta;
}
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	80 93 41 3e 	sts	0x3E41, r24	; 0x803e41 <measureBusyFlag>
     110:	08 95       	ret

00000112 <Radiotube_Handle>:
     112:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <RadiotubeState>
     116:	81 30       	cpi	r24, 0x01	; 1
     118:	71 f4       	brne	.+28     	; 0x136 <Radiotube_Handle+0x24>
     11a:	10 92 63 3e 	sts	0x3E63, r1	; 0x803e63 <RadiotubeState>
     11e:	28 9a       	sbi	0x05, 0	; 5
     120:	2f e5       	ldi	r18, 0x5F	; 95
     122:	3a ee       	ldi	r19, 0xEA	; 234
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	21 50       	subi	r18, 0x01	; 1
     128:	30 40       	sbci	r19, 0x00	; 0
     12a:	90 40       	sbci	r25, 0x00	; 0
     12c:	e1 f7       	brne	.-8      	; 0x126 <Radiotube_Handle+0x14>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <Radiotube_Handle+0x1e>
     130:	00 00       	nop
     132:	28 98       	cbi	0x05, 0	; 5
     134:	0e c0       	rjmp	.+28     	; 0x152 <Radiotube_Handle+0x40>
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <RadiotubeState>
     13c:	29 9a       	sbi	0x05, 1	; 5
     13e:	ff e5       	ldi	r31, 0x5F	; 95
     140:	2a ee       	ldi	r18, 0xEA	; 234
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	f1 50       	subi	r31, 0x01	; 1
     146:	20 40       	sbci	r18, 0x00	; 0
     148:	30 40       	sbci	r19, 0x00	; 0
     14a:	e1 f7       	brne	.-8      	; 0x144 <Radiotube_Handle+0x32>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <Radiotube_Handle+0x3c>
     14e:	00 00       	nop
     150:	29 98       	cbi	0x05, 1	; 5
     152:	e7 ea       	ldi	r30, 0xA7	; 167
     154:	f1 e6       	ldi	r31, 0x61	; 97
     156:	31 97       	sbiw	r30, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <Radiotube_Handle+0x44>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <Radiotube_Handle+0x4a>
     15c:	00 00       	nop
     15e:	80 93 00 3e 	sts	0x3E00, r24	; 0x803e00 <__data_start>
     162:	80 93 48 3e 	sts	0x3E48, r24	; 0x803e48 <edgeDetectFreeze>
     166:	08 95       	ret

00000168 <MCU_GoToSleep>:
     168:	e0 e5       	ldi	r30, 0x50	; 80
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	90 81       	ld	r25, Z
     16e:	99 7f       	andi	r25, 0xF9	; 249
     170:	89 2b       	or	r24, r25
     172:	80 83       	st	Z, r24
     174:	80 81       	ld	r24, Z
     176:	81 60       	ori	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
     17a:	88 95       	sleep
     17c:	80 81       	ld	r24, Z
     17e:	8e 7f       	andi	r24, 0xFE	; 254
     180:	80 83       	st	Z, r24
     182:	08 95       	ret

00000184 <LowBattery>:
     184:	28 9a       	sbi	0x05, 0	; 5
     186:	2f e5       	ldi	r18, 0x5F	; 95
     188:	8a ee       	ldi	r24, 0xEA	; 234
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	21 50       	subi	r18, 0x01	; 1
     18e:	80 40       	sbci	r24, 0x00	; 0
     190:	90 40       	sbci	r25, 0x00	; 0
     192:	e1 f7       	brne	.-8      	; 0x18c <LowBattery+0x8>
     194:	00 c0       	rjmp	.+0      	; 0x196 <LowBattery+0x12>
     196:	00 00       	nop
     198:	28 98       	cbi	0x05, 0	; 5
     19a:	84 e0       	ldi	r24, 0x04	; 4
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	e4 cf       	rjmp	.-56     	; 0x168 <MCU_GoToSleep>

000001a0 <RTC_CallBack>:
     1a0:	80 91 64 3e 	lds	r24, 0x3E64	; 0x803e64 <SensorState>
     1a4:	81 30       	cpi	r24, 0x01	; 1
     1a6:	49 f4       	brne	.+18     	; 0x1ba <RTC_CallBack+0x1a>
     1a8:	80 91 4d 3e 	lds	r24, 0x3E4D	; 0x803e4d <fingerOnCnt>
     1ac:	90 91 4e 3e 	lds	r25, 0x3E4E	; 0x803e4e <fingerOnCnt+0x1>
     1b0:	01 96       	adiw	r24, 0x01	; 1
     1b2:	80 93 4d 3e 	sts	0x3E4D, r24	; 0x803e4d <fingerOnCnt>
     1b6:	90 93 4e 3e 	sts	0x3E4E, r25	; 0x803e4e <fingerOnCnt+0x1>
     1ba:	80 91 48 3e 	lds	r24, 0x3E48	; 0x803e48 <edgeDetectFreeze>
     1be:	81 30       	cpi	r24, 0x01	; 1
     1c0:	49 f4       	brne	.+18     	; 0x1d4 <RTC_CallBack+0x34>
     1c2:	80 91 46 3e 	lds	r24, 0x3E46	; 0x803e46 <edgeFreezeCnt>
     1c6:	90 91 47 3e 	lds	r25, 0x3E47	; 0x803e47 <edgeFreezeCnt+0x1>
     1ca:	01 96       	adiw	r24, 0x01	; 1
     1cc:	80 93 46 3e 	sts	0x3E46, r24	; 0x803e46 <edgeFreezeCnt>
     1d0:	90 93 47 3e 	sts	0x3E47, r25	; 0x803e47 <edgeFreezeCnt+0x1>
     1d4:	80 91 46 3e 	lds	r24, 0x3E46	; 0x803e46 <edgeFreezeCnt>
     1d8:	90 91 47 3e 	lds	r25, 0x3E47	; 0x803e47 <edgeFreezeCnt+0x1>
     1dc:	41 97       	sbiw	r24, 0x11	; 17
     1de:	30 f0       	brcs	.+12     	; 0x1ec <RTC_CallBack+0x4c>
     1e0:	10 92 46 3e 	sts	0x3E46, r1	; 0x803e46 <edgeFreezeCnt>
     1e4:	10 92 47 3e 	sts	0x3E47, r1	; 0x803e47 <edgeFreezeCnt+0x1>
     1e8:	10 92 48 3e 	sts	0x3E48, r1	; 0x803e48 <edgeDetectFreeze>
     1ec:	80 91 63 3e 	lds	r24, 0x3E63	; 0x803e63 <RadiotubeState>
     1f0:	81 11       	cpse	r24, r1
     1f2:	23 c0       	rjmp	.+70     	; 0x23a <RTC_CallBack+0x9a>
     1f4:	80 91 49 3e 	lds	r24, 0x3E49	; 0x803e49 <RadiotubeOnTime>
     1f8:	90 91 4a 3e 	lds	r25, 0x3E4A	; 0x803e4a <RadiotubeOnTime+0x1>
     1fc:	a0 91 4b 3e 	lds	r26, 0x3E4B	; 0x803e4b <RadiotubeOnTime+0x2>
     200:	b0 91 4c 3e 	lds	r27, 0x3E4C	; 0x803e4c <RadiotubeOnTime+0x3>
     204:	01 96       	adiw	r24, 0x01	; 1
     206:	a1 1d       	adc	r26, r1
     208:	b1 1d       	adc	r27, r1
     20a:	8a 3f       	cpi	r24, 0xFA	; 250
     20c:	25 e1       	ldi	r18, 0x15	; 21
     20e:	92 07       	cpc	r25, r18
     210:	a1 05       	cpc	r26, r1
     212:	b1 05       	cpc	r27, r1
     214:	48 f4       	brcc	.+18     	; 0x228 <RTC_CallBack+0x88>
     216:	80 93 49 3e 	sts	0x3E49, r24	; 0x803e49 <RadiotubeOnTime>
     21a:	90 93 4a 3e 	sts	0x3E4A, r25	; 0x803e4a <RadiotubeOnTime+0x1>
     21e:	a0 93 4b 3e 	sts	0x3E4B, r26	; 0x803e4b <RadiotubeOnTime+0x2>
     222:	b0 93 4c 3e 	sts	0x3E4C, r27	; 0x803e4c <RadiotubeOnTime+0x3>
     226:	08 95       	ret
     228:	10 92 49 3e 	sts	0x3E49, r1	; 0x803e49 <RadiotubeOnTime>
     22c:	10 92 4a 3e 	sts	0x3E4A, r1	; 0x803e4a <RadiotubeOnTime+0x1>
     230:	10 92 4b 3e 	sts	0x3E4B, r1	; 0x803e4b <RadiotubeOnTime+0x2>
     234:	10 92 4c 3e 	sts	0x3E4C, r1	; 0x803e4c <RadiotubeOnTime+0x3>
     238:	6c cf       	rjmp	.-296    	; 0x112 <Radiotube_Handle>
     23a:	08 95       	ret

0000023c <main>:

int main(void)
{
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     23c:	17 df       	rcall	.-466    	; 0x6c <atmel_start_init>
	//MCU_GoToSleep(SLEEP_MODE_PWR_DOWN);
	SensorState = FINGER_ON_DETECT;
     23e:	10 92 64 3e 	sts	0x3E64, r1	; 0x803e64 <SensorState>
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
     242:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     244:	2f e5       	ldi	r18, 0x5F	; 95
     246:	8a ee       	ldi	r24, 0xEA	; 234
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 50       	subi	r18, 0x01	; 1
     24c:	80 40       	sbci	r24, 0x00	; 0
     24e:	90 40       	sbci	r25, 0x00	; 0
     250:	e1 f7       	brne	.-8      	; 0x24a <main+0xe>
     252:	00 c0       	rjmp	.+0      	; 0x254 <main+0x18>
     254:	00 00       	nop
	} else {
		VPORTB.OUT &= ~(1 << pin);
     256:	29 98       	cbi	0x05, 1	; 5
	/* the inital state of radiotube should be closed */
	IO2_set_level(true);
	_delay_ms(30);
	IO2_set_level(false);
	
	RadiotubeState = OFF;
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	80 93 63 3e 	sts	0x3E63, r24	; 0x803e63 <RadiotubeState>
		}
	}
	else
	{
		/* this should be suppressed */
		filteredDeltaValue = (preFilteredDeltaValue * 9 + curDelta)/10;
     25e:	19 e0       	ldi	r17, 0x09	; 9
     260:	ca e0       	ldi	r28, 0x0A	; 10
     262:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t keyStatus = 0;
	uint8_t edgeStatus = 0;
	
	
	///* Does acquisition and post-processing */
	touch_process();
     264:	6b d1       	rcall	.+726    	; 0x53c <touch_process>
	
	if (measurement_done_touch == 0)
     266:	80 91 50 3e 	lds	r24, 0x3E50	; 0x803e50 <measurement_done_touch>
     26a:	88 23       	and	r24, r24
     26c:	09 f4       	brne	.+2      	; 0x270 <main+0x34>
     26e:	da c0       	rjmp	.+436    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = 0,i;
	int16_t edgeGroupSum = 0;
	
	curDelta = get_sensor_node_signal(0);
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	9f d1       	rcall	.+830    	; 0x5b4 <get_sensor_node_signal>
     276:	7c 01       	movw	r14, r24
	curDelta -= get_sensor_node_reference(0);
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	a8 d1       	rcall	.+848    	; 0x5ce <get_sensor_node_reference>
     27e:	a7 01       	movw	r20, r14
     280:	48 1b       	sub	r20, r24
     282:	59 0b       	sbc	r21, r25
	
	tempDelta = curDelta - preFilteredDeltaValue;
     284:	20 91 42 3e 	lds	r18, 0x3E42	; 0x803e42 <preFilteredDeltaValue>
     288:	30 91 43 3e 	lds	r19, 0x3E43	; 0x803e43 <preFilteredDeltaValue+0x1>
     28c:	ba 01       	movw	r22, r20
     28e:	62 1b       	sub	r22, r18
     290:	73 0b       	sbc	r23, r19
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
     292:	cb 01       	movw	r24, r22
     294:	77 ff       	sbrs	r23, 7
     296:	04 c0       	rjmp	.+8      	; 0x2a0 <main+0x64>
     298:	88 27       	eor	r24, r24
     29a:	99 27       	eor	r25, r25
     29c:	86 1b       	sub	r24, r22
     29e:	97 0b       	sbc	r25, r23
     2a0:	86 34       	cpi	r24, 0x46	; 70
     2a2:	91 05       	cpc	r25, r1
     2a4:	8c f0       	brlt	.+34     	; 0x2c8 <main+0x8c>
	{
		/* this is an strong edge */
		if(tempDelta > 0)
     2a6:	16 16       	cp	r1, r22
     2a8:	17 06       	cpc	r1, r23
     2aa:	14 f0       	brlt	.+4      	; 0x2b0 <main+0x74>
			edgeStatus = 1;
		else 
			edgeStatus = 2;
     2ac:	92 e0       	ldi	r25, 0x02	; 2
     2ae:	01 c0       	rjmp	.+2      	; 0x2b2 <main+0x76>
	
	if (abs(tempDelta) >= STRONG_EDGE_THRESHOLD)
	{
		/* this is an strong edge */
		if(tempDelta > 0)
			edgeStatus = 1;
     2b0:	91 e0       	ldi	r25, 0x01	; 1
		else 
			edgeStatus = 2;
		
		filteredDeltaValue = curDelta;
     2b2:	40 93 44 3e 	sts	0x3E44, r20	; 0x803e44 <filteredDeltaValue>
     2b6:	50 93 45 3e 	sts	0x3E45, r21	; 0x803e45 <filteredDeltaValue+0x1>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     2ba:	10 92 40 3e 	sts	0x3E40, r1	; 0x803e40 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     2be:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <edgeGroup>
     2c2:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <edgeGroup+0x1>
     2c6:	69 c0       	rjmp	.+210    	; 0x39a <main+0x15e>
     2c8:	e0 91 40 3e 	lds	r30, 0x3E40	; 0x803e40 <__data_end>
			edgeStatus = 2;
		
		filteredDeltaValue = curDelta;
		TOUCH_ClearEdgeGroup();
	}
	else if (abs(tempDelta) >= WEAK_EDGE_THRESHOLD)
     2cc:	44 97       	sbiw	r24, 0x14	; 20
     2ce:	0c f4       	brge	.+2      	; 0x2d2 <main+0x96>
     2d0:	45 c0       	rjmp	.+138    	; 0x35c <main+0x120>
	{
		/* this is an weak edge */
		
		filteredDeltaValue = (preFilteredDeltaValue * 5 + curDelta * 5)/10;
     2d2:	ca 01       	movw	r24, r20
     2d4:	82 0f       	add	r24, r18
     2d6:	93 1f       	adc	r25, r19
     2d8:	97 fd       	sbrc	r25, 7
     2da:	01 96       	adiw	r24, 0x01	; 1
     2dc:	95 95       	asr	r25
     2de:	87 95       	ror	r24
     2e0:	80 93 44 3e 	sts	0x3E44, r24	; 0x803e44 <filteredDeltaValue>
     2e4:	90 93 45 3e 	sts	0x3E45, r25	; 0x803e45 <filteredDeltaValue+0x1>
		
		/* if the sum of continuous four edges exceed the 
			strong threshold, an effective status should
			be return.*/
		edgeGroup[edgeGroupPtr++] = tempDelta;
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	8e 0f       	add	r24, r30
     2ec:	80 93 40 3e 	sts	0x3E40, r24	; 0x803e40 <__data_end>
     2f0:	f0 e0       	ldi	r31, 0x00	; 0
     2f2:	ee 0f       	add	r30, r30
     2f4:	ff 1f       	adc	r31, r31
     2f6:	e5 5a       	subi	r30, 0xA5	; 165
     2f8:	f1 4c       	sbci	r31, 0xC1	; 193
     2fa:	60 83       	st	Z, r22
     2fc:	71 83       	std	Z+1, r23	; 0x01
		if (edgeGroupPtr >= 4)
     2fe:	84 30       	cpi	r24, 0x04	; 4
     300:	10 f0       	brcs	.+4      	; 0x306 <main+0xca>
			edgeGroupPtr = 0;
     302:	10 92 40 3e 	sts	0x3E40, r1	; 0x803e40 <__data_end>
		
		for (i = 0; i < 4; i++)
			edgeGroupSum += edgeGroup[i];
     306:	20 91 5b 3e 	lds	r18, 0x3E5B	; 0x803e5b <edgeGroup>
     30a:	30 91 5c 3e 	lds	r19, 0x3E5C	; 0x803e5c <edgeGroup+0x1>
     30e:	80 91 5d 3e 	lds	r24, 0x3E5D	; 0x803e5d <edgeGroup+0x2>
     312:	90 91 5e 3e 	lds	r25, 0x3E5E	; 0x803e5e <edgeGroup+0x3>
     316:	82 0f       	add	r24, r18
     318:	93 1f       	adc	r25, r19
     31a:	20 91 5f 3e 	lds	r18, 0x3E5F	; 0x803e5f <edgeGroup+0x4>
     31e:	30 91 60 3e 	lds	r19, 0x3E60	; 0x803e60 <edgeGroup+0x5>
     322:	82 0f       	add	r24, r18
     324:	93 1f       	adc	r25, r19
     326:	20 91 61 3e 	lds	r18, 0x3E61	; 0x803e61 <edgeGroup+0x6>
     32a:	30 91 62 3e 	lds	r19, 0x3E62	; 0x803e62 <edgeGroup+0x7>
     32e:	82 0f       	add	r24, r18
     330:	93 1f       	adc	r25, r19
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
     332:	9c 01       	movw	r18, r24
     334:	97 ff       	sbrs	r25, 7
     336:	04 c0       	rjmp	.+8      	; 0x340 <main+0x104>
     338:	22 27       	eor	r18, r18
     33a:	33 27       	eor	r19, r19
     33c:	28 1b       	sub	r18, r24
     33e:	39 0b       	sbc	r19, r25
     340:	26 34       	cpi	r18, 0x46	; 70
     342:	31 05       	cpc	r19, r1
     344:	3c f1       	brlt	.+78     	; 0x394 <main+0x158>

static void TOUCH_ClearEdgeGroup(void)
{
	uint8_t i;
	
	edgeGroupPtr = 0;
     346:	10 92 40 3e 	sts	0x3E40, r1	; 0x803e40 <__data_end>
	for (i = 0; i < 4; i++)
		edgeGroup[edgeGroupPtr] = 0;
     34a:	10 92 5b 3e 	sts	0x3E5B, r1	; 0x803e5b <edgeGroup>
     34e:	10 92 5c 3e 	sts	0x3E5C, r1	; 0x803e5c <edgeGroup+0x1>
			
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			
			if (edgeGroupSum > 0)
     352:	18 16       	cp	r1, r24
     354:	19 06       	cpc	r1, r25
     356:	04 f1       	brlt	.+64     	; 0x398 <main+0x15c>
				edgeStatus = 1; 
			else
				edgeStatus = 2;
     358:	92 e0       	ldi	r25, 0x02	; 2
     35a:	1f c0       	rjmp	.+62     	; 0x39a <main+0x15e>
		}
	}
	else
	{
		/* this should be suppressed */
		filteredDeltaValue = (preFilteredDeltaValue * 9 + curDelta)/10;
     35c:	12 9f       	mul	r17, r18
     35e:	c0 01       	movw	r24, r0
     360:	13 9f       	mul	r17, r19
     362:	90 0d       	add	r25, r0
     364:	11 24       	eor	r1, r1
     366:	84 0f       	add	r24, r20
     368:	95 1f       	adc	r25, r21
     36a:	be 01       	movw	r22, r28
     36c:	ee da       	rcall	.-2596   	; 0xfffff94a <__eeprom_end+0xff7ef94a>
     36e:	60 93 44 3e 	sts	0x3E44, r22	; 0x803e44 <filteredDeltaValue>
     372:	70 93 45 3e 	sts	0x3E45, r23	; 0x803e45 <filteredDeltaValue+0x1>
		
		edgeGroup[edgeGroupPtr++] = 0;
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	8e 0f       	add	r24, r30
     37a:	80 93 40 3e 	sts	0x3E40, r24	; 0x803e40 <__data_end>
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	ee 0f       	add	r30, r30
     382:	ff 1f       	adc	r31, r31
     384:	e5 5a       	subi	r30, 0xA5	; 165
     386:	f1 4c       	sbci	r31, 0xC1	; 193
     388:	10 82       	st	Z, r1
     38a:	11 82       	std	Z+1, r1	; 0x01
		if (edgeGroupPtr >= 4)
     38c:	84 30       	cpi	r24, 0x04	; 4
     38e:	10 f0       	brcs	.+4      	; 0x394 <main+0x158>
			edgeGroupPtr = 0;
     390:	10 92 40 3e 	sts	0x3E40, r1	; 0x803e40 <__data_end>

static uint8_t TOUCH_DeltaEdgeDetct(void)
{
	int16_t curDelta;
	int16_t tempDelta;
	uint8_t edgeStatus = 0,i;
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	01 c0       	rjmp	.+2      	; 0x39a <main+0x15e>
		if (abs(edgeGroupSum) >= STRONG_EDGE_THRESHOLD)
		{
			TOUCH_ClearEdgeGroup();
			
			if (edgeGroupSum > 0)
				edgeStatus = 1; 
     398:	91 e0       	ldi	r25, 0x01	; 1
		edgeGroup[edgeGroupPtr++] = 0;
		if (edgeGroupPtr >= 4)
			edgeGroupPtr = 0;
	}
	
	preFilteredDeltaValue = filteredDeltaValue;
     39a:	20 91 44 3e 	lds	r18, 0x3E44	; 0x803e44 <filteredDeltaValue>
     39e:	30 91 45 3e 	lds	r19, 0x3E45	; 0x803e45 <filteredDeltaValue+0x1>
     3a2:	20 93 42 3e 	sts	0x3E42, r18	; 0x803e42 <preFilteredDeltaValue>
     3a6:	30 93 43 3e 	sts	0x3E43, r19	; 0x803e43 <preFilteredDeltaValue+0x1>
	if (measurement_done_touch == 0)
		return keyStatus;
		
	edgeStatus = TOUCH_DeltaEdgeDetct();
	
	if (edgeDetectFreeze == 1)
     3aa:	80 91 48 3e 	lds	r24, 0x3E48	; 0x803e48 <edgeDetectFreeze>
     3ae:	81 30       	cpi	r24, 0x01	; 1
     3b0:	c9 f1       	breq	.+114    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
		return keyStatus;

	switch(SensorState)
     3b2:	80 91 64 3e 	lds	r24, 0x3E64	; 0x803e64 <SensorState>
     3b6:	88 23       	and	r24, r24
     3b8:	19 f0       	breq	.+6      	; 0x3c0 <main+0x184>
     3ba:	81 30       	cpi	r24, 0x01	; 1
     3bc:	31 f0       	breq	.+12     	; 0x3ca <main+0x18e>
     3be:	2a c0       	rjmp	.+84     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
	{
		case FINGER_ON_DETECT:
			if (edgeStatus == 1)
     3c0:	91 30       	cpi	r25, 0x01	; 1
     3c2:	41 f5       	brne	.+80     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
				SensorState = FINGER_OFF_DETECT;
     3c4:	90 93 64 3e 	sts	0x3E64, r25	; 0x803e64 <SensorState>
     3c8:	25 c0       	rjmp	.+74     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
		break;
		
		case FINGER_OFF_DETECT:
			if(edgeStatus == 2)
     3ca:	92 30       	cpi	r25, 0x02	; 2
     3cc:	81 f4       	brne	.+32     	; 0x3ee <main+0x1b2>
			{
				if(fingerOnCnt > FINGER_ON_MINIMUM_TIME_MS)
     3ce:	20 91 4d 3e 	lds	r18, 0x3E4D	; 0x803e4d <fingerOnCnt>
     3d2:	30 91 4e 3e 	lds	r19, 0x3E4E	; 0x803e4e <fingerOnCnt+0x1>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	23 30       	cpi	r18, 0x03	; 3
     3da:	31 05       	cpc	r19, r1
     3dc:	08 f4       	brcc	.+2      	; 0x3e0 <main+0x1a4>
     3de:	80 e0       	ldi	r24, 0x00	; 0
			if(edgeStatus == 2)
			{
				if(fingerOnCnt > FINGER_ON_MINIMUM_TIME_MS)
					keyStatus = 1;
					
				fingerOnCnt = 0;
     3e0:	10 92 4d 3e 	sts	0x3E4D, r1	; 0x803e4d <fingerOnCnt>
     3e4:	10 92 4e 3e 	sts	0x3E4E, r1	; 0x803e4e <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     3e8:	10 92 64 3e 	sts	0x3E64, r1	; 0x803e64 <SensorState>
     3ec:	14 c0       	rjmp	.+40     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
			}
			else if(edgeStatus == 1)
     3ee:	91 30       	cpi	r25, 0x01	; 1
     3f0:	29 f4       	brne	.+10     	; 0x3fc <main+0x1c0>
				fingerOnCnt = 0;
     3f2:	10 92 4d 3e 	sts	0x3E4D, r1	; 0x803e4d <fingerOnCnt>
     3f6:	10 92 4e 3e 	sts	0x3E4E, r1	; 0x803e4e <fingerOnCnt+0x1>
     3fa:	0c c0       	rjmp	.+24     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
			else if (fingerOnCnt > FINGER_ON_MAXIMUM_TIME_MS)
     3fc:	80 91 4d 3e 	lds	r24, 0x3E4D	; 0x803e4d <fingerOnCnt>
     400:	90 91 4e 3e 	lds	r25, 0x3E4E	; 0x803e4e <fingerOnCnt+0x1>
     404:	80 97       	sbiw	r24, 0x20	; 32
     406:	30 f0       	brcs	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
			{
				fingerOnCnt = 0;
     408:	10 92 4d 3e 	sts	0x3E4D, r1	; 0x803e4d <fingerOnCnt>
     40c:	10 92 4e 3e 	sts	0x3E4E, r1	; 0x803e4e <fingerOnCnt+0x1>
				SensorState = FINGER_ON_DETECT;
     410:	10 92 64 3e 	sts	0x3E64, r1	; 0x803e64 <SensorState>
	//return SNR;
//}

static uint8_t TOUCH_TouchDetect(void)
{
	uint8_t keyStatus = 0;
     414:	80 e0       	ldi	r24, 0x00	; 0
			}
			break;
	}
	
	/* one cycle of measurement is done */
	measurement_done_touch = 0;
     416:	10 92 50 3e 	sts	0x3E50, r1	; 0x803e50 <measurement_done_touch>
	measureBusyFlag = 0;
     41a:	10 92 41 3e 	sts	0x3E41, r1	; 0x803e41 <measureBusyFlag>
	/* Replace with your application code */
	while(1) 
	{
		//wdt_reset();
		
		if(TOUCH_TouchDetect() == 1)
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	09 f4       	brne	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
			Radiotube_Handle();
     422:	77 de       	rcall	.-786    	; 0x112 <Radiotube_Handle>
		
		if (measureBusyFlag == 0)
     424:	80 91 41 3e 	lds	r24, 0x3E41	; 0x803e41 <measureBusyFlag>
     428:	81 11       	cpse	r24, r1
     42a:	1c cf       	rjmp	.-456    	; 0x264 <main+0x28>
			MCU_GoToSleep(SLEEP_MODE_PWR_DOWN);
     42c:	84 e0       	ldi	r24, 0x04	; 4
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	9b de       	rcall	.-714    	; 0x168 <MCU_GoToSleep>
     432:	18 cf       	rjmp	.-464    	; 0x264 <main+0x28>

00000434 <qtm_measure_complete_callback>:
void calibrate_node(uint16_t sensor_node)
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
     434:	e6 e7       	ldi	r30, 0x76	; 118
     436:	fe e3       	ldi	r31, 0x3E	; 62
     438:	80 81       	ld	r24, Z
     43a:	82 60       	ori	r24, 0x02	; 2
     43c:	80 83       	st	Z, r24
     43e:	08 95       	ret

00000440 <qtm_error_callback>:
     440:	87 ff       	sbrs	r24, 7
     442:	02 c0       	rjmp	.+4      	; 0x448 <qtm_error_callback+0x8>
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	07 c0       	rjmp	.+14     	; 0x456 <qtm_error_callback+0x16>
     448:	86 fd       	sbrc	r24, 6
     44a:	03 c0       	rjmp	.+6      	; 0x452 <qtm_error_callback+0x12>
     44c:	10 92 4f 3e 	sts	0x3E4F, r1	; 0x803e4f <module_error_code>
     450:	08 95       	ret
     452:	8f 70       	andi	r24, 0x0F	; 15
     454:	8e 5f       	subi	r24, 0xFE	; 254
     456:	80 93 4f 3e 	sts	0x3E4F, r24	; 0x803e4f <module_error_code>
     45a:	08 95       	ret

0000045c <init_complete_callback>:
     45c:	82 e7       	ldi	r24, 0x72	; 114
     45e:	9e e3       	ldi	r25, 0x3E	; 62
     460:	80 d9       	rcall	.-3328   	; 0xfffff762 <__eeprom_end+0xff7ef762>
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	8e e2       	ldi	r24, 0x2E	; 46
     468:	9e e3       	ldi	r25, 0x3E	; 62
     46a:	e5 d9       	rcall	.-3126   	; 0xfffff836 <__eeprom_end+0xff7ef836>
     46c:	60 e0       	ldi	r22, 0x00	; 0
     46e:	70 e0       	ldi	r23, 0x00	; 0
     470:	8e e2       	ldi	r24, 0x2E	; 46
     472:	9e e3       	ldi	r25, 0x3E	; 62
     474:	ff d9       	rcall	.-3074   	; 0xfffff874 <__eeprom_end+0xff7ef874>
     476:	4d e6       	ldi	r20, 0x6D	; 109
     478:	5e e3       	ldi	r21, 0x3E	; 62
     47a:	60 e0       	ldi	r22, 0x00	; 0
     47c:	89 e1       	ldi	r24, 0x19	; 25
     47e:	9e e3       	ldi	r25, 0x3E	; 62
     480:	df c1       	rjmp	.+958    	; 0x840 <qtm_init_sensor_key>

00000482 <qtm_post_process_complete>:
     482:	e0 91 19 3e 	lds	r30, 0x3E19	; 0x803e19 <qtlib_key_set1>
     486:	f0 91 1a 3e 	lds	r31, 0x3E1A	; 0x803e1a <qtlib_key_set1+0x1>
     48a:	80 81       	ld	r24, Z
     48c:	87 ff       	sbrs	r24, 7
     48e:	08 c0       	rjmp	.+16     	; 0x4a0 <qtm_post_process_complete+0x1e>
     490:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     494:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     498:	80 81       	ld	r24, Z
     49a:	84 60       	ori	r24, 0x04	; 4
     49c:	80 83       	st	Z, r24
     49e:	08 95       	ret
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	80 93 50 3e 	sts	0x3E50, r24	; 0x803e50 <measurement_done_touch>
     4a6:	08 95       	ret

000004a8 <Timer_set_period>:
     4a8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
     4ac:	92 fd       	sbrc	r25, 2
     4ae:	fc cf       	rjmp	.-8      	; 0x4a8 <Timer_set_period>
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     4b6:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     4ba:	08 95       	ret

000004bc <touch_init>:
     4bc:	80 e2       	ldi	r24, 0x20	; 32
     4be:	f4 df       	rcall	.-24     	; 0x4a8 <Timer_set_period>
     4c0:	e4 e1       	ldi	r30, 0x14	; 20
     4c2:	f4 e0       	ldi	r31, 0x04	; 4
     4c4:	80 81       	ld	r24, Z
     4c6:	87 7f       	andi	r24, 0xF7	; 247
     4c8:	80 83       	st	Z, r24
     4ca:	e6 e7       	ldi	r30, 0x76	; 118
     4cc:	fe e3       	ldi	r31, 0x3E	; 62
     4ce:	10 82       	st	Z, r1
     4d0:	85 e1       	ldi	r24, 0x15	; 21
     4d2:	9e e3       	ldi	r25, 0x3E	; 62
     4d4:	81 83       	std	Z+1, r24	; 0x01
     4d6:	92 83       	std	Z+2, r25	; 0x02
     4d8:	81 e1       	ldi	r24, 0x11	; 17
     4da:	9e e3       	ldi	r25, 0x3E	; 62
     4dc:	83 83       	std	Z+3, r24	; 0x03
     4de:	94 83       	std	Z+4, r25	; 0x04
     4e0:	89 e0       	ldi	r24, 0x09	; 9
     4e2:	9e e3       	ldi	r25, 0x3E	; 62
     4e4:	85 83       	std	Z+5, r24	; 0x05
     4e6:	96 83       	std	Z+6, r25	; 0x06
     4e8:	8d e0       	ldi	r24, 0x0D	; 13
     4ea:	9e e3       	ldi	r25, 0x3E	; 62
     4ec:	87 83       	std	Z+7, r24	; 0x07
     4ee:	90 87       	std	Z+8, r25	; 0x08
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	9e e3       	ldi	r25, 0x3E	; 62
     4f4:	81 87       	std	Z+9, r24	; 0x09
     4f6:	92 87       	std	Z+10, r25	; 0x0a
     4f8:	85 e0       	ldi	r24, 0x05	; 5
     4fa:	9e e3       	ldi	r25, 0x3E	; 62
     4fc:	83 87       	std	Z+11, r24	; 0x0b
     4fe:	94 87       	std	Z+12, r25	; 0x0c
     500:	8b ef       	ldi	r24, 0xFB	; 251
     502:	99 e0       	ldi	r25, 0x09	; 9
     504:	85 87       	std	Z+13, r24	; 0x0d
     506:	96 87       	std	Z+14, r25	; 0x0e
     508:	8e e2       	ldi	r24, 0x2E	; 46
     50a:	92 e0       	ldi	r25, 0x02	; 2
     50c:	87 87       	std	Z+15, r24	; 0x0f
     50e:	90 8b       	std	Z+16, r25	; 0x10
     510:	80 e2       	ldi	r24, 0x20	; 32
     512:	92 e0       	ldi	r25, 0x02	; 2
     514:	81 8b       	std	Z+17, r24	; 0x11
     516:	92 8b       	std	Z+18, r25	; 0x12
     518:	8a e1       	ldi	r24, 0x1A	; 26
     51a:	92 e0       	ldi	r25, 0x02	; 2
     51c:	83 8b       	std	Z+19, r24	; 0x13
     51e:	94 8b       	std	Z+20, r25	; 0x14
     520:	15 8a       	std	Z+21, r1	; 0x15
     522:	16 8a       	std	Z+22, r1	; 0x16
     524:	81 e4       	ldi	r24, 0x41	; 65
     526:	92 e0       	ldi	r25, 0x02	; 2
     528:	87 8b       	std	Z+23, r24	; 0x17
     52a:	90 8f       	std	Z+24, r25	; 0x18
     52c:	cf 01       	movw	r24, r30
     52e:	6a d5       	rcall	.+2772   	; 0x1004 <qtm_binding_layer_init>
     530:	64 d5       	rcall	.+2760   	; 0xffa <qmt_get_binding_layer_ptr>
     532:	80 93 74 3e 	sts	0x3E74, r24	; 0x803e74 <p_qtm_control>
     536:	90 93 75 3e 	sts	0x3E75, r25	; 0x803e75 <p_qtm_control+0x1>
     53a:	08 95       	ret

0000053c <touch_process>:
     53c:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     540:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     544:	80 81       	ld	r24, Z
     546:	80 ff       	sbrs	r24, 0
     548:	0b c0       	rjmp	.+22     	; 0x560 <touch_process+0x24>
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	b9 d5       	rcall	.+2930   	; 0x10c0 <qtm_lib_start_acquisition>
     54e:	81 11       	cpse	r24, r1
     550:	07 c0       	rjmp	.+14     	; 0x560 <touch_process+0x24>
     552:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     556:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     55a:	80 81       	ld	r24, Z
     55c:	8e 7f       	andi	r24, 0xFE	; 254
     55e:	80 83       	st	Z, r24
     560:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     564:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     568:	80 81       	ld	r24, Z
     56a:	81 ff       	sbrs	r24, 1
     56c:	0e c0       	rjmp	.+28     	; 0x58a <touch_process+0x4e>
     56e:	f7 d5       	rcall	.+3054   	; 0x115e <qtm_lib_acq_process>
     570:	81 11       	cpse	r24, r1
     572:	02 c0       	rjmp	.+4      	; 0x578 <touch_process+0x3c>
     574:	fc d5       	rcall	.+3064   	; 0x116e <qtm_lib_post_process>
     576:	02 c0       	rjmp	.+4      	; 0x57c <touch_process+0x40>
     578:	80 e8       	ldi	r24, 0x80	; 128
     57a:	62 df       	rcall	.-316    	; 0x440 <qtm_error_callback>
     57c:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     580:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     584:	80 81       	ld	r24, Z
     586:	8d 7f       	andi	r24, 0xFD	; 253
     588:	80 83       	st	Z, r24
     58a:	e0 91 74 3e 	lds	r30, 0x3E74	; 0x803e74 <p_qtm_control>
     58e:	f0 91 75 3e 	lds	r31, 0x3E75	; 0x803e75 <p_qtm_control+0x1>
     592:	80 81       	ld	r24, Z
     594:	82 ff       	sbrs	r24, 2
     596:	03 c0       	rjmp	.+6      	; 0x59e <touch_process+0x62>
     598:	8b 7f       	andi	r24, 0xFB	; 251
     59a:	81 60       	ori	r24, 0x01	; 1
     59c:	80 83       	st	Z, r24
     59e:	08 95       	ret

000005a0 <touch_timer_handler>:
     5a0:	b4 dd       	rcall	.-1176   	; 0x10a <TOUCH_SetMeasureBusyFlag>
     5a2:	e6 e7       	ldi	r30, 0x76	; 118
     5a4:	fe e3       	ldi	r31, 0x3E	; 62
     5a6:	80 81       	ld	r24, Z
     5a8:	81 60       	ori	r24, 0x01	; 1
     5aa:	80 83       	st	Z, r24
     5ac:	80 91 00 3e 	lds	r24, 0x3E00	; 0x803e00 <__data_start>
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	3b c1       	rjmp	.+630    	; 0x82a <qtm_update_qtlib_timer>

000005b4 <get_sensor_node_signal>:
     5b4:	25 e0       	ldi	r18, 0x05	; 5
     5b6:	ac 01       	movw	r20, r24
     5b8:	24 9f       	mul	r18, r20
     5ba:	c0 01       	movw	r24, r0
     5bc:	25 9f       	mul	r18, r21
     5be:	90 0d       	add	r25, r0
     5c0:	11 24       	eor	r1, r1
     5c2:	fc 01       	movw	r30, r24
     5c4:	e3 59       	subi	r30, 0x93	; 147
     5c6:	f1 4c       	sbci	r31, 0xC1	; 193
     5c8:	81 81       	ldd	r24, Z+1	; 0x01
     5ca:	92 81       	ldd	r25, Z+2	; 0x02
     5cc:	08 95       	ret

000005ce <get_sensor_node_reference>:
     5ce:	26 e0       	ldi	r18, 0x06	; 6
     5d0:	ac 01       	movw	r20, r24
     5d2:	24 9f       	mul	r18, r20
     5d4:	c0 01       	movw	r24, r0
     5d6:	25 9f       	mul	r18, r21
     5d8:	90 0d       	add	r25, r0
     5da:	11 24       	eor	r1, r1
     5dc:	fc 01       	movw	r30, r24
     5de:	e1 57       	subi	r30, 0x71	; 113
     5e0:	f1 4c       	sbci	r31, 0xC1	; 193
     5e2:	84 81       	ldd	r24, Z+4	; 0x04
     5e4:	95 81       	ldd	r25, Z+5	; 0x05
     5e6:	08 95       	ret

000005e8 <__vector_17>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     5e8:	1f 92       	push	r1
     5ea:	0f 92       	push	r0
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	0f 92       	push	r0
     5f0:	11 24       	eor	r1, r1
     5f2:	2f 93       	push	r18
     5f4:	3f 93       	push	r19
     5f6:	4f 93       	push	r20
     5f8:	5f 93       	push	r21
     5fa:	6f 93       	push	r22
     5fc:	7f 93       	push	r23
     5fe:	8f 93       	push	r24
     600:	9f 93       	push	r25
     602:	af 93       	push	r26
     604:	bf 93       	push	r27
     606:	ef 93       	push	r30
     608:	ff 93       	push	r31
	qtm_t81x_ptc_handler_eoc();
     60a:	75 d9       	rcall	.-3350   	; 0xfffff8f6 <__eeprom_end+0xff7ef8f6>
}
     60c:	ff 91       	pop	r31
     60e:	ef 91       	pop	r30
     610:	bf 91       	pop	r27
     612:	af 91       	pop	r26
     614:	9f 91       	pop	r25
     616:	8f 91       	pop	r24
     618:	7f 91       	pop	r23
     61a:	6f 91       	pop	r22
     61c:	5f 91       	pop	r21
     61e:	4f 91       	pop	r20
     620:	3f 91       	pop	r19
     622:	2f 91       	pop	r18
     624:	0f 90       	pop	r0
     626:	0f be       	out	0x3f, r0	; 63
     628:	0f 90       	pop	r0
     62a:	1f 90       	pop	r1
     62c:	18 95       	reti

0000062e <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	08 95       	ret

00000632 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     632:	42 e0       	ldi	r20, 0x02	; 2
     634:	68 ed       	ldi	r22, 0xD8	; 216
     636:	88 e7       	ldi	r24, 0x78	; 120
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	63 d0       	rcall	.+198    	; 0x702 <protected_write_io>
     63c:	41 e0       	ldi	r20, 0x01	; 1
     63e:	68 ed       	ldi	r22, 0xD8	; 216
     640:	81 e6       	ldi	r24, 0x61	; 97
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	5e d0       	rcall	.+188    	; 0x702 <protected_write_io>
     646:	40 e0       	ldi	r20, 0x00	; 0
     648:	68 ed       	ldi	r22, 0xD8	; 216
     64a:	80 e6       	ldi	r24, 0x60	; 96
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	59 d0       	rcall	.+178    	; 0x702 <protected_write_io>
	ccp_write_io((void *)&(CLKCTRL.MCLKCTRLA),
	             CLKCTRL_CLKSEL_OSC20M_gc /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */
	                 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	/* wait for system oscillator changing to finish */
	while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {
     650:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x700063>
     654:	80 fd       	sbrc	r24, 0
     656:	fc cf       	rjmp	.-8      	; 0x650 <CLKCTRL_init+0x1e>
	}

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	08 95       	ret

0000065c <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     65c:	78 94       	sei

	return 0;
}
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	08 95       	ret

00000662 <mcu_init>:
	// Disable digital input buffer
	PA7_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PA7_set_pull_mode(PORT_PULL_OFF);

	AC_0_init();
     662:	e0 e1       	ldi	r30, 0x10	; 16
     664:	f4 e0       	ldi	r31, 0x04	; 4
     666:	80 81       	ld	r24, Z
     668:	88 60       	ori	r24, 0x08	; 8
     66a:	81 93       	st	Z+, r24
     66c:	e8 31       	cpi	r30, 0x18	; 24
     66e:	84 e0       	ldi	r24, 0x04	; 4
     670:	f8 07       	cpc	r31, r24
     672:	c9 f7       	brne	.-14     	; 0x666 <mcu_init+0x4>
     674:	e0 e3       	ldi	r30, 0x30	; 48
     676:	f4 e0       	ldi	r31, 0x04	; 4
     678:	80 81       	ld	r24, Z
     67a:	88 60       	ori	r24, 0x08	; 8
     67c:	81 93       	st	Z+, r24
     67e:	e8 33       	cpi	r30, 0x38	; 56
     680:	84 e0       	ldi	r24, 0x04	; 4
     682:	f8 07       	cpc	r31, r24
     684:	c9 f7       	brne	.-14     	; 0x678 <mcu_init+0x16>
     686:	e0 e5       	ldi	r30, 0x50	; 80
     688:	f4 e0       	ldi	r31, 0x04	; 4
     68a:	80 81       	ld	r24, Z
     68c:	88 60       	ori	r24, 0x08	; 8
     68e:	81 93       	st	Z+, r24
     690:	e8 35       	cpi	r30, 0x58	; 88
     692:	84 e0       	ldi	r24, 0x04	; 4
     694:	f8 07       	cpc	r31, r24
     696:	c9 f7       	brne	.-14     	; 0x68a <mcu_init+0x28>
     698:	08 95       	ret

0000069a <USART_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     69a:	23 98       	cbi	0x04, 3	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     69c:	e3 e3       	ldi	r30, 0x33	; 51
     69e:	f4 e0       	ldi	r31, 0x04	; 4
     6a0:	80 81       	ld	r24, Z
     6a2:	87 7f       	andi	r24, 0xF7	; 247
     6a4:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     6a6:	22 9a       	sbi	0x04, 2	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     6a8:	2a 98       	cbi	0x05, 2	; 5
	// <id> pad_initial_level
	// <false"> Low
	// <true"> High
	false);

	USART_init();
     6aa:	44 c0       	rjmp	.+136    	; 0x734 <USART_init>

000006ac <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     6ac:	da df       	rcall	.-76     	; 0x662 <mcu_init>
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     6ae:	00 98       	cbi	0x00, 0	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     6b0:	e0 e1       	ldi	r30, 0x10	; 16
     6b2:	f4 e0       	ldi	r31, 0x04	; 4
     6b4:	80 81       	ld	r24, Z
     6b6:	88 60       	ori	r24, 0x08	; 8
     6b8:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     6ba:	02 98       	cbi	0x00, 2	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     6bc:	e2 e1       	ldi	r30, 0x12	; 18
     6be:	f4 e0       	ldi	r31, 0x04	; 4
     6c0:	80 81       	ld	r24, Z
     6c2:	88 60       	ori	r24, 0x08	; 8
     6c4:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     6c6:	03 98       	cbi	0x00, 3	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     6c8:	e3 e1       	ldi	r30, 0x13	; 19
     6ca:	f4 e0       	ldi	r31, 0x04	; 4
     6cc:	80 81       	ld	r24, Z
     6ce:	88 60       	ori	r24, 0x08	; 8
     6d0:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     6d2:	05 98       	cbi	0x00, 5	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     6d4:	e5 e1       	ldi	r30, 0x15	; 21
     6d6:	f4 e0       	ldi	r31, 0x04	; 4
     6d8:	80 81       	ld	r24, Z
     6da:	88 60       	ori	r24, 0x08	; 8
     6dc:	80 83       	st	Z, r24
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
     6de:	06 98       	cbi	0x00, 6	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
     6e0:	e6 e1       	ldi	r30, 0x16	; 22
     6e2:	f4 e0       	ldi	r31, 0x04	; 4
     6e4:	80 81       	ld	r24, Z
     6e6:	88 60       	ori	r24, 0x08	; 8
     6e8:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     6ea:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     6ec:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     6ee:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     6f0:	29 98       	cbi	0x05, 1	; 5
	    //// <id> pad_pull_config
	    //// <PORT_PULL_OFF"> Off
	    //// <PORT_PULL_UP"> Pull-up
	    //PORT_PULL_UP);

	CLKCTRL_init();
     6f2:	9f df       	rcall	.-194    	; 0x632 <CLKCTRL_init>

	RTC_init(1);
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	09 d0       	rcall	.+18     	; 0x70a <RTC_init>
	
	VREF_0_init();
     6f8:	27 d0       	rcall	.+78     	; 0x748 <VREF_0_init>
	
	USART_initialization();
     6fa:	cf df       	rcall	.-98     	; 0x69a <USART_initialization>
	
	//AC_0_initialization();

	//WDT_0_init();

	CPUINT_init();
     6fc:	af df       	rcall	.-162    	; 0x65c <CPUINT_init>

	SLPCTRL_init();
     6fe:	15 d0       	rcall	.+42     	; 0x72a <SLPCTRL_init>

	BOD_init();
     700:	96 cf       	rjmp	.-212    	; 0x62e <BOD_init>

00000702 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     702:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     704:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     706:	40 83       	st	Z, r20
	ret                             // Return to caller
     708:	08 95       	ret

0000070a <RTC_init>:
int8_t RTC_init(uint8_t mode)
{
	//while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
	//}
	
	while (RTC.PITSTATUS > 0) { /* Wait for all register to be synchronized */
     70a:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <__TEXT_REGION_LENGTH__+0x700151>
     70e:	81 11       	cpse	r24, r1
     710:	fc cf       	rjmp	.-8      	; 0x70a <RTC_init>
	//| 1 << RTC_RTCEN_bp     /* Enable: enabled */
	//| 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	// RTC.PER = 0xffff; /* Period: 0xffff */

	RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz divided by 32 */
     712:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__TEXT_REGION_LENGTH__+0x700147>
	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	//RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
	//| 0 << RTC_OVF_bp; /* Overflow Interrupt enable: disabled */

	 RTC.PITCTRLA = RTC_PERIOD_CYC1024_gc /* Off */
     716:	89 e4       	ldi	r24, 0x49	; 73
     718:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x700150>
			 | 1 << RTC_PITEN_bp; /* Enable: disabled */

	 RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */
     71c:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__TEXT_REGION_LENGTH__+0x700155>

	 RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: disabled */
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__TEXT_REGION_LENGTH__+0x700152>

	return 0;
}
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	08 95       	ret

0000072a <SLPCTRL_init>:
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{

	SLPCTRL.CTRLA = 1 << SLPCTRL_SEN_bp       /* Sleep enable: enabled */
     72a:	83 e0       	ldi	r24, 0x03	; 3
     72c:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	                | SLPCTRL_SMODE_STDBY_gc; /* Power-down Mode */

	return 0;
}
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	08 95       	ret

00000734 <USART_init>:
 * \retval 1 the USART init was not successful
 */
int8_t USART_init()
{

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(115200); /* set baud rate register */
     734:	e0 e0       	ldi	r30, 0x00	; 0
     736:	f8 e0       	ldi	r31, 0x08	; 8
     738:	8b e5       	ldi	r24, 0x5B	; 91
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	80 87       	std	Z+8, r24	; 0x08
     73e:	91 87       	std	Z+9, r25	; 0x09
	//		 | USART_RS485_OFF_gc /* RS485 Mode disabled */
	//		 | 0 << USART_RXCIE_bp /* Receive Complete Interrupt Enable: disabled */
	//		 | 0 << USART_RXSIE_bp /* Receiver Start Frame Interrupt Enable: disabled */
	//		 | 0 << USART_TXCIE_bp; /* Transmit Complete Interrupt Enable: disabled */

	USART0.CTRLB = 0 << USART_MPCM_bp       /* Multi-processor Communication Mode: disabled */
     740:	80 e4       	ldi	r24, 0x40	; 64
     742:	86 83       	std	Z+6, r24	; 0x06
	// USART0.RXPLCTRL = 0x0 << USART_RXPL_gp; /* Receiver Pulse Length: 0x0 */

	// USART0.TXPLCTRL = 0x0 << USART_TXPL_gp; /* Transmit pulse length: 0x0 */

	return 0;
}
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	08 95       	ret

00000748 <VREF_0_init>:
 * \return Initialization status.
 */
int8_t VREF_0_init()
{

	VREF_CTRLA = VREF_ADC0REFSEL_0V55_gc   /* Voltage reference at 0.55V */
     748:	84 e0       	ldi	r24, 0x04	; 4
     74a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
	             | VREF_DAC0REFSEL_1V5_gc; /* Voltage reference at 1.5V */

	VREF_CTRLB = 0 << VREF_ADC0REFEN_bp    /* ADC0 reference enable: disabled */
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
	             | 1 << VREF_DAC0REFEN_bp; /* DAC0/AC0 reference enable: enabled */

	return 0;
}
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	08 95       	ret

00000758 <check_for_aks_block>:
     758:	cf 92       	push	r12
     75a:	df 92       	push	r13
     75c:	ff 92       	push	r15
     75e:	0f 93       	push	r16
     760:	1f 93       	push	r17
     762:	cf 93       	push	r28
     764:	df 93       	push	r29
     766:	ec 01       	movw	r28, r24
     768:	ae 81       	ldd	r26, Y+6	; 0x06
     76a:	bf 81       	ldd	r27, Y+7	; 0x07
     76c:	eb 01       	movw	r28, r22
     76e:	cc 0f       	add	r28, r28
     770:	dd 1f       	adc	r29, r29
     772:	c6 0f       	add	r28, r22
     774:	d7 1f       	adc	r29, r23
     776:	ca 0f       	add	r28, r26
     778:	db 1f       	adc	r29, r27
     77a:	fa 80       	ldd	r15, Y+2	; 0x02
     77c:	fc 01       	movw	r30, r24
     77e:	44 81       	ldd	r20, Z+4	; 0x04
     780:	55 81       	ldd	r21, Z+5	; 0x05
     782:	e6 e0       	ldi	r30, 0x06	; 6
     784:	e6 9f       	mul	r30, r22
     786:	90 01       	movw	r18, r0
     788:	e7 9f       	mul	r30, r23
     78a:	30 0d       	add	r19, r0
     78c:	11 24       	eor	r1, r1
     78e:	8a 01       	movw	r16, r20
     790:	02 0f       	add	r16, r18
     792:	13 1f       	adc	r17, r19
     794:	f8 01       	movw	r30, r16
     796:	22 81       	ldd	r18, Z+2	; 0x02
     798:	33 81       	ldd	r19, Z+3	; 0x03
     79a:	f9 01       	movw	r30, r18
     79c:	21 81       	ldd	r18, Z+1	; 0x01
     79e:	32 81       	ldd	r19, Z+2	; 0x02
     7a0:	f8 01       	movw	r30, r16
     7a2:	04 81       	ldd	r16, Z+4	; 0x04
     7a4:	15 81       	ldd	r17, Z+5	; 0x05
     7a6:	20 1b       	sub	r18, r16
     7a8:	31 0b       	sbc	r19, r17
     7aa:	e8 81       	ld	r30, Y
     7ac:	2e 1b       	sub	r18, r30
     7ae:	31 09       	sbc	r19, r1
     7b0:	ec 01       	movw	r28, r24
     7b2:	ea 81       	ldd	r30, Y+2	; 0x02
     7b4:	fb 81       	ldd	r31, Y+3	; 0x03
     7b6:	00 81       	ld	r16, Z
     7b8:	11 81       	ldd	r17, Z+1	; 0x01
     7ba:	fa 01       	movw	r30, r20
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	50 e0       	ldi	r21, 0x00	; 0
     7c0:	40 17       	cp	r20, r16
     7c2:	51 07       	cpc	r21, r17
     7c4:	39 f1       	breq	.+78     	; 0x814 <check_for_aks_block+0xbc>
     7c6:	46 17       	cp	r20, r22
     7c8:	57 07       	cpc	r21, r23
     7ca:	f9 f0       	breq	.+62     	; 0x80a <check_for_aks_block+0xb2>
     7cc:	12 96       	adiw	r26, 0x02	; 2
     7ce:	8c 91       	ld	r24, X
     7d0:	12 97       	sbiw	r26, 0x02	; 2
     7d2:	f8 12       	cpse	r15, r24
     7d4:	1a c0       	rjmp	.+52     	; 0x80a <check_for_aks_block+0xb2>
     7d6:	80 81       	ld	r24, Z
     7d8:	85 58       	subi	r24, 0x85	; 133
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	e8 f0       	brcs	.+58     	; 0x818 <check_for_aks_block+0xc0>
     7de:	c4 80       	ldd	r12, Z+4	; 0x04
     7e0:	d5 80       	ldd	r13, Z+5	; 0x05
     7e2:	82 81       	ldd	r24, Z+2	; 0x02
     7e4:	93 81       	ldd	r25, Z+3	; 0x03
     7e6:	ec 01       	movw	r28, r24
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	9a 81       	ldd	r25, Y+2	; 0x02
     7ec:	c8 16       	cp	r12, r24
     7ee:	d9 06       	cpc	r13, r25
     7f0:	60 f4       	brcc	.+24     	; 0x80a <check_for_aks_block+0xb2>
     7f2:	8c 19       	sub	r24, r12
     7f4:	9d 09       	sbc	r25, r13
     7f6:	cc 91       	ld	r28, X
     7f8:	d0 e0       	ldi	r29, 0x00	; 0
     7fa:	c8 17       	cp	r28, r24
     7fc:	d9 07       	cpc	r29, r25
     7fe:	28 f4       	brcc	.+10     	; 0x80a <check_for_aks_block+0xb2>
     800:	8c 1b       	sub	r24, r28
     802:	9d 0b       	sbc	r25, r29
     804:	28 17       	cp	r18, r24
     806:	39 07       	cpc	r19, r25
     808:	38 f0       	brcs	.+14     	; 0x818 <check_for_aks_block+0xc0>
     80a:	4f 5f       	subi	r20, 0xFF	; 255
     80c:	5f 4f       	sbci	r21, 0xFF	; 255
     80e:	13 96       	adiw	r26, 0x03	; 3
     810:	36 96       	adiw	r30, 0x06	; 6
     812:	d6 cf       	rjmp	.-84     	; 0x7c0 <check_for_aks_block+0x68>
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	01 c0       	rjmp	.+2      	; 0x81a <check_for_aks_block+0xc2>
     818:	81 e0       	ldi	r24, 0x01	; 1
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	1f 91       	pop	r17
     820:	0f 91       	pop	r16
     822:	ff 90       	pop	r15
     824:	df 90       	pop	r13
     826:	cf 90       	pop	r12
     828:	08 95       	ret

0000082a <qtm_update_qtlib_timer>:
     82a:	20 91 51 3e 	lds	r18, 0x3E51	; 0x803e51 <qtm_local_ms_timecount>
     82e:	30 91 52 3e 	lds	r19, 0x3E52	; 0x803e52 <qtm_local_ms_timecount+0x1>
     832:	82 0f       	add	r24, r18
     834:	93 1f       	adc	r25, r19
     836:	80 93 51 3e 	sts	0x3E51, r24	; 0x803e51 <qtm_local_ms_timecount>
     83a:	90 93 52 3e 	sts	0x3E52, r25	; 0x803e52 <qtm_local_ms_timecount+0x1>
     83e:	08 95       	ret

00000840 <qtm_init_sensor_key>:
     840:	00 97       	sbiw	r24, 0x00	; 0
     842:	d9 f0       	breq	.+54     	; 0x87a <qtm_init_sensor_key+0x3a>
     844:	41 15       	cp	r20, r1
     846:	51 05       	cpc	r21, r1
     848:	c1 f0       	breq	.+48     	; 0x87a <qtm_init_sensor_key+0x3a>
     84a:	26 e0       	ldi	r18, 0x06	; 6
     84c:	62 9f       	mul	r22, r18
     84e:	b0 01       	movw	r22, r0
     850:	11 24       	eor	r1, r1
     852:	dc 01       	movw	r26, r24
     854:	14 96       	adiw	r26, 0x04	; 4
     856:	ed 91       	ld	r30, X+
     858:	fc 91       	ld	r31, X
     85a:	15 97       	sbiw	r26, 0x05	; 5
     85c:	e6 0f       	add	r30, r22
     85e:	f7 1f       	adc	r31, r23
     860:	21 e0       	ldi	r18, 0x01	; 1
     862:	20 83       	st	Z, r18
     864:	14 96       	adiw	r26, 0x04	; 4
     866:	8d 91       	ld	r24, X+
     868:	9c 91       	ld	r25, X
     86a:	15 97       	sbiw	r26, 0x05	; 5
     86c:	fc 01       	movw	r30, r24
     86e:	e6 0f       	add	r30, r22
     870:	f7 1f       	adc	r31, r23
     872:	42 83       	std	Z+2, r20	; 0x02
     874:	53 83       	std	Z+3, r21	; 0x03
     876:	80 e0       	ldi	r24, 0x00	; 0
     878:	08 95       	ret
     87a:	8b e0       	ldi	r24, 0x0B	; 11
     87c:	08 95       	ret

0000087e <qtm_key_sensors_process>:
     87e:	2f 92       	push	r2
     880:	3f 92       	push	r3
     882:	4f 92       	push	r4
     884:	5f 92       	push	r5
     886:	6f 92       	push	r6
     888:	7f 92       	push	r7
     88a:	8f 92       	push	r8
     88c:	9f 92       	push	r9
     88e:	af 92       	push	r10
     890:	bf 92       	push	r11
     892:	cf 92       	push	r12
     894:	df 92       	push	r13
     896:	ef 92       	push	r14
     898:	ff 92       	push	r15
     89a:	0f 93       	push	r16
     89c:	1f 93       	push	r17
     89e:	cf 93       	push	r28
     8a0:	df 93       	push	r29
     8a2:	00 97       	sbiw	r24, 0x00	; 0
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <qtm_key_sensors_process+0x2a>
     8a6:	7b c3       	rjmp	.+1782   	; 0xf9e <qtm_key_sensors_process+0x720>
     8a8:	ec 01       	movw	r28, r24
     8aa:	a1 2c       	mov	r10, r1
     8ac:	b1 2c       	mov	r11, r1
     8ae:	81 2c       	mov	r8, r1
     8b0:	91 2c       	mov	r9, r1
     8b2:	21 2c       	mov	r2, r1
     8b4:	d1 2c       	mov	r13, r1
     8b6:	33 e0       	ldi	r19, 0x03	; 3
     8b8:	c3 2e       	mov	r12, r19
     8ba:	45 e8       	ldi	r20, 0x85	; 133
     8bc:	64 2e       	mov	r6, r20
     8be:	56 e8       	ldi	r21, 0x86	; 134
     8c0:	75 2e       	mov	r7, r21
     8c2:	67 e0       	ldi	r22, 0x07	; 7
     8c4:	36 2e       	mov	r3, r22
     8c6:	72 e0       	ldi	r23, 0x02	; 2
     8c8:	47 2e       	mov	r4, r23
     8ca:	e8 e0       	ldi	r30, 0x08	; 8
     8cc:	5e 2e       	mov	r5, r30
     8ce:	ea 81       	ldd	r30, Y+2	; 0x02
     8d0:	fb 81       	ldd	r31, Y+3	; 0x03
     8d2:	80 81       	ld	r24, Z
     8d4:	91 81       	ldd	r25, Z+1	; 0x01
     8d6:	88 16       	cp	r8, r24
     8d8:	99 06       	cpc	r9, r25
     8da:	08 f0       	brcs	.+2      	; 0x8de <qtm_key_sensors_process+0x60>
     8dc:	a3 c1       	rjmp	.+838    	; 0xc24 <qtm_key_sensors_process+0x3a6>
     8de:	75 01       	movw	r14, r10
     8e0:	ee 0c       	add	r14, r14
     8e2:	ff 1c       	adc	r15, r15
     8e4:	0c 81       	ldd	r16, Y+4	; 0x04
     8e6:	1d 81       	ldd	r17, Y+5	; 0x05
     8e8:	0e 0d       	add	r16, r14
     8ea:	1f 1d       	adc	r17, r15
     8ec:	d8 01       	movw	r26, r16
     8ee:	8c 91       	ld	r24, X
     8f0:	84 30       	cpi	r24, 0x04	; 4
     8f2:	09 f4       	brne	.+2      	; 0x8f6 <qtm_key_sensors_process+0x78>
     8f4:	a1 c0       	rjmp	.+322    	; 0xa38 <qtm_key_sensors_process+0x1ba>
     8f6:	38 f4       	brcc	.+14     	; 0x906 <qtm_key_sensors_process+0x88>
     8f8:	82 30       	cpi	r24, 0x02	; 2
     8fa:	01 f1       	breq	.+64     	; 0x93c <qtm_key_sensors_process+0xbe>
     8fc:	08 f0       	brcs	.+2      	; 0x900 <qtm_key_sensors_process+0x82>
     8fe:	49 c0       	rjmp	.+146    	; 0x992 <qtm_key_sensors_process+0x114>
     900:	81 30       	cpi	r24, 0x01	; 1
     902:	59 f0       	breq	.+22     	; 0x91a <qtm_key_sensors_process+0x9c>
     904:	88 c1       	rjmp	.+784    	; 0xc16 <qtm_key_sensors_process+0x398>
     906:	85 38       	cpi	r24, 0x85	; 133
     908:	09 f4       	brne	.+2      	; 0x90c <qtm_key_sensors_process+0x8e>
     90a:	c0 c0       	rjmp	.+384    	; 0xa8c <qtm_key_sensors_process+0x20e>
     90c:	86 38       	cpi	r24, 0x86	; 134
     90e:	09 f4       	brne	.+2      	; 0x912 <qtm_key_sensors_process+0x94>
     910:	f4 c0       	rjmp	.+488    	; 0xafa <qtm_key_sensors_process+0x27c>
     912:	87 30       	cpi	r24, 0x07	; 7
     914:	09 f0       	breq	.+2      	; 0x918 <qtm_key_sensors_process+0x9a>
     916:	7f c1       	rjmp	.+766    	; 0xc16 <qtm_key_sensors_process+0x398>
     918:	35 c1       	rjmp	.+618    	; 0xb84 <qtm_key_sensors_process+0x306>
     91a:	d8 01       	movw	r26, r16
     91c:	12 96       	adiw	r26, 0x02	; 2
     91e:	ed 91       	ld	r30, X+
     920:	fc 91       	ld	r31, X
     922:	13 97       	sbiw	r26, 0x03	; 3
     924:	80 81       	ld	r24, Z
     926:	8e 71       	andi	r24, 0x1E	; 30
     928:	09 f0       	breq	.+2      	; 0x92c <qtm_key_sensors_process+0xae>
     92a:	67 c1       	rjmp	.+718    	; 0xbfa <qtm_key_sensors_process+0x37c>
     92c:	4c 92       	st	X, r4
     92e:	8c 81       	ldd	r24, Y+4	; 0x04
     930:	9d 81       	ldd	r25, Y+5	; 0x05
     932:	fc 01       	movw	r30, r24
     934:	ee 0d       	add	r30, r14
     936:	ff 1d       	adc	r31, r15
     938:	51 82       	std	Z+1, r5	; 0x01
     93a:	5f c1       	rjmp	.+702    	; 0xbfa <qtm_key_sensors_process+0x37c>
     93c:	f8 01       	movw	r30, r16
     93e:	21 81       	ldd	r18, Z+1	; 0x01
     940:	22 23       	and	r18, r18
     942:	29 f1       	breq	.+74     	; 0x98e <qtm_key_sensors_process+0x110>
     944:	02 80       	ldd	r0, Z+2	; 0x02
     946:	f3 81       	ldd	r31, Z+3	; 0x03
     948:	e0 2d       	mov	r30, r0
     94a:	25 30       	cpi	r18, 0x05	; 5
     94c:	20 f0       	brcs	.+8      	; 0x956 <qtm_key_sensors_process+0xd8>
     94e:	81 81       	ldd	r24, Z+1	; 0x01
     950:	92 81       	ldd	r25, Z+2	; 0x02
     952:	d8 01       	movw	r26, r16
     954:	0e c0       	rjmp	.+28     	; 0x972 <qtm_key_sensors_process+0xf4>
     956:	d8 01       	movw	r26, r16
     958:	14 96       	adiw	r26, 0x04	; 4
     95a:	8d 91       	ld	r24, X+
     95c:	9c 91       	ld	r25, X
     95e:	15 97       	sbiw	r26, 0x05	; 5
     960:	41 81       	ldd	r20, Z+1	; 0x01
     962:	52 81       	ldd	r21, Z+2	; 0x02
     964:	84 17       	cp	r24, r20
     966:	95 07       	cpc	r25, r21
     968:	69 f0       	breq	.+26     	; 0x984 <qtm_key_sensors_process+0x106>
     96a:	48 17       	cp	r20, r24
     96c:	59 07       	cpc	r21, r25
     96e:	30 f4       	brcc	.+12     	; 0x97c <qtm_key_sensors_process+0xfe>
     970:	01 97       	sbiw	r24, 0x01	; 1
     972:	14 96       	adiw	r26, 0x04	; 4
     974:	8d 93       	st	X+, r24
     976:	9c 93       	st	X, r25
     978:	15 97       	sbiw	r26, 0x05	; 5
     97a:	04 c0       	rjmp	.+8      	; 0x984 <qtm_key_sensors_process+0x106>
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	f8 01       	movw	r30, r16
     980:	84 83       	std	Z+4, r24	; 0x04
     982:	95 83       	std	Z+5, r25	; 0x05
     984:	21 50       	subi	r18, 0x01	; 1
     986:	d8 01       	movw	r26, r16
     988:	11 96       	adiw	r26, 0x01	; 1
     98a:	2c 93       	st	X, r18
     98c:	36 c1       	rjmp	.+620    	; 0xbfa <qtm_key_sensors_process+0x37c>
     98e:	f8 01       	movw	r30, r16
     990:	2f c1       	rjmp	.+606    	; 0xbf0 <qtm_key_sensors_process+0x372>
     992:	d8 01       	movw	r26, r16
     994:	14 96       	adiw	r26, 0x04	; 4
     996:	2d 91       	ld	r18, X+
     998:	3c 91       	ld	r19, X
     99a:	15 97       	sbiw	r26, 0x05	; 5
     99c:	12 96       	adiw	r26, 0x02	; 2
     99e:	8d 91       	ld	r24, X+
     9a0:	9c 91       	ld	r25, X
     9a2:	13 97       	sbiw	r26, 0x03	; 3
     9a4:	dc 01       	movw	r26, r24
     9a6:	11 96       	adiw	r26, 0x01	; 1
     9a8:	4d 91       	ld	r20, X+
     9aa:	5c 91       	ld	r21, X
     9ac:	12 97       	sbiw	r26, 0x02	; 2
     9ae:	24 17       	cp	r18, r20
     9b0:	35 07       	cpc	r19, r21
     9b2:	09 f4       	brne	.+2      	; 0x9b6 <qtm_key_sensors_process+0x138>
     9b4:	30 c1       	rjmp	.+608    	; 0xc16 <qtm_key_sensors_process+0x398>
     9b6:	8e 81       	ldd	r24, Y+6	; 0x06
     9b8:	9f 81       	ldd	r25, Y+7	; 0x07
     9ba:	42 17       	cp	r20, r18
     9bc:	53 07       	cpc	r21, r19
     9be:	e0 f4       	brcc	.+56     	; 0x9f8 <qtm_key_sensors_process+0x17a>
     9c0:	24 1b       	sub	r18, r20
     9c2:	35 0b       	sbc	r19, r21
     9c4:	dc 01       	movw	r26, r24
     9c6:	aa 0d       	add	r26, r10
     9c8:	bb 1d       	adc	r27, r11
     9ca:	8c 91       	ld	r24, X
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	05 80       	ldd	r0, Z+5	; 0x05
     9d0:	02 c0       	rjmp	.+4      	; 0x9d6 <qtm_key_sensors_process+0x158>
     9d2:	95 95       	asr	r25
     9d4:	87 95       	ror	r24
     9d6:	0a 94       	dec	r0
     9d8:	e2 f7       	brpl	.-8      	; 0x9d2 <qtm_key_sensors_process+0x154>
     9da:	99 27       	eor	r25, r25
     9dc:	28 17       	cp	r18, r24
     9de:	39 07       	cpc	r19, r25
     9e0:	08 f4       	brcc	.+2      	; 0x9e4 <qtm_key_sensors_process+0x166>
     9e2:	19 c1       	rjmp	.+562    	; 0xc16 <qtm_key_sensors_process+0x398>
     9e4:	84 81       	ldd	r24, Z+4	; 0x04
     9e6:	88 23       	and	r24, r24
     9e8:	09 f4       	brne	.+2      	; 0x9ec <qtm_key_sensors_process+0x16e>
     9ea:	15 c1       	rjmp	.+554    	; 0xc16 <qtm_key_sensors_process+0x398>
     9ec:	f8 01       	movw	r30, r16
     9ee:	30 82       	st	Z, r3
     9f0:	ea 81       	ldd	r30, Y+2	; 0x02
     9f2:	fb 81       	ldd	r31, Y+3	; 0x03
     9f4:	24 81       	ldd	r18, Z+4	; 0x04
     9f6:	19 c0       	rjmp	.+50     	; 0xa2a <qtm_key_sensors_process+0x1ac>
     9f8:	fc 01       	movw	r30, r24
     9fa:	ea 0d       	add	r30, r10
     9fc:	fb 1d       	adc	r31, r11
     9fe:	42 1b       	sub	r20, r18
     a00:	53 0b       	sbc	r21, r19
     a02:	80 81       	ld	r24, Z
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	48 17       	cp	r20, r24
     a08:	59 07       	cpc	r21, r25
     a0a:	08 f4       	brcc	.+2      	; 0xa0e <qtm_key_sensors_process+0x190>
     a0c:	04 c1       	rjmp	.+520    	; 0xc16 <qtm_key_sensors_process+0x398>
     a0e:	82 81       	ldd	r24, Z+2	; 0x02
     a10:	88 23       	and	r24, r24
     a12:	29 f0       	breq	.+10     	; 0xa1e <qtm_key_sensors_process+0x1a0>
     a14:	b4 01       	movw	r22, r8
     a16:	ce 01       	movw	r24, r28
     a18:	9f de       	rcall	.-706    	; 0x758 <check_for_aks_block>
     a1a:	81 11       	cpse	r24, r1
     a1c:	fc c0       	rjmp	.+504    	; 0xc16 <qtm_key_sensors_process+0x398>
     a1e:	e4 e0       	ldi	r30, 0x04	; 4
     a20:	d8 01       	movw	r26, r16
     a22:	ec 93       	st	X, r30
     a24:	ea 81       	ldd	r30, Y+2	; 0x02
     a26:	fb 81       	ldd	r31, Y+3	; 0x03
     a28:	22 81       	ldd	r18, Z+2	; 0x02
     a2a:	8c 81       	ldd	r24, Y+4	; 0x04
     a2c:	9d 81       	ldd	r25, Y+5	; 0x05
     a2e:	fc 01       	movw	r30, r24
     a30:	ee 0d       	add	r30, r14
     a32:	ff 1d       	adc	r31, r15
     a34:	21 83       	std	Z+1, r18	; 0x01
     a36:	e1 c0       	rjmp	.+450    	; 0xbfa <qtm_key_sensors_process+0x37c>
     a38:	d8 01       	movw	r26, r16
     a3a:	14 96       	adiw	r26, 0x04	; 4
     a3c:	2d 91       	ld	r18, X+
     a3e:	3c 91       	ld	r19, X
     a40:	15 97       	sbiw	r26, 0x05	; 5
     a42:	12 96       	adiw	r26, 0x02	; 2
     a44:	ed 91       	ld	r30, X+
     a46:	fc 91       	ld	r31, X
     a48:	13 97       	sbiw	r26, 0x03	; 3
     a4a:	81 81       	ldd	r24, Z+1	; 0x01
     a4c:	92 81       	ldd	r25, Z+2	; 0x02
     a4e:	82 17       	cp	r24, r18
     a50:	93 07       	cpc	r25, r19
     a52:	08 f4       	brcc	.+2      	; 0xa56 <qtm_key_sensors_process+0x1d8>
     a54:	d6 c0       	rjmp	.+428    	; 0xc02 <qtm_key_sensors_process+0x384>
     a56:	ee 81       	ldd	r30, Y+6	; 0x06
     a58:	ff 81       	ldd	r31, Y+7	; 0x07
     a5a:	ea 0d       	add	r30, r10
     a5c:	fb 1d       	adc	r31, r11
     a5e:	82 1b       	sub	r24, r18
     a60:	93 0b       	sbc	r25, r19
     a62:	20 81       	ld	r18, Z
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	28 17       	cp	r18, r24
     a68:	39 07       	cpc	r19, r25
     a6a:	08 f0       	brcs	.+2      	; 0xa6e <qtm_key_sensors_process+0x1f0>
     a6c:	ae c0       	rjmp	.+348    	; 0xbca <qtm_key_sensors_process+0x34c>
     a6e:	82 81       	ldd	r24, Z+2	; 0x02
     a70:	88 23       	and	r24, r24
     a72:	29 f0       	breq	.+10     	; 0xa7e <qtm_key_sensors_process+0x200>
     a74:	b4 01       	movw	r22, r8
     a76:	ce 01       	movw	r24, r28
     a78:	6f de       	rcall	.-802    	; 0x758 <check_for_aks_block>
     a7a:	81 11       	cpse	r24, r1
     a7c:	cc c0       	rjmp	.+408    	; 0xc16 <qtm_key_sensors_process+0x398>
     a7e:	f8 01       	movw	r30, r16
     a80:	81 81       	ldd	r24, Z+1	; 0x01
     a82:	88 23       	and	r24, r24
     a84:	09 f4       	brne	.+2      	; 0xa88 <qtm_key_sensors_process+0x20a>
     a86:	67 c0       	rjmp	.+206    	; 0xb56 <qtm_key_sensors_process+0x2d8>
     a88:	81 50       	subi	r24, 0x01	; 1
     a8a:	b6 c0       	rjmp	.+364    	; 0xbf8 <qtm_key_sensors_process+0x37a>
     a8c:	a8 81       	ld	r26, Y
     a8e:	b9 81       	ldd	r27, Y+1	; 0x01
     a90:	80 85       	ldd	r24, Z+8	; 0x08
     a92:	13 96       	adiw	r26, 0x03	; 3
     a94:	8c 93       	st	X, r24
     a96:	ec 81       	ldd	r30, Y+4	; 0x04
     a98:	fd 81       	ldd	r31, Y+5	; 0x05
     a9a:	ee 0d       	add	r30, r14
     a9c:	ff 1d       	adc	r31, r15
     a9e:	44 81       	ldd	r20, Z+4	; 0x04
     aa0:	55 81       	ldd	r21, Z+5	; 0x05
     aa2:	a2 81       	ldd	r26, Z+2	; 0x02
     aa4:	b3 81       	ldd	r27, Z+3	; 0x03
     aa6:	11 96       	adiw	r26, 0x01	; 1
     aa8:	8d 91       	ld	r24, X+
     aaa:	9c 91       	ld	r25, X
     aac:	12 97       	sbiw	r26, 0x02	; 2
     aae:	84 17       	cp	r24, r20
     ab0:	95 07       	cpc	r25, r21
     ab2:	c0 f0       	brcs	.+48     	; 0xae4 <qtm_key_sensors_process+0x266>
     ab4:	ae 81       	ldd	r26, Y+6	; 0x06
     ab6:	bf 81       	ldd	r27, Y+7	; 0x07
     ab8:	aa 0d       	add	r26, r10
     aba:	bb 1d       	adc	r27, r11
     abc:	6c 91       	ld	r22, X
     abe:	26 2f       	mov	r18, r22
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	11 96       	adiw	r26, 0x01	; 1
     ac4:	7c 91       	ld	r23, X
     ac6:	7f 5f       	subi	r23, 0xFF	; 255
     ac8:	02 c0       	rjmp	.+4      	; 0xace <qtm_key_sensors_process+0x250>
     aca:	35 95       	asr	r19
     acc:	27 95       	ror	r18
     ace:	7a 95       	dec	r23
     ad0:	e2 f7       	brpl	.-8      	; 0xaca <qtm_key_sensors_process+0x24c>
     ad2:	84 1b       	sub	r24, r20
     ad4:	95 0b       	sbc	r25, r21
     ad6:	62 1b       	sub	r22, r18
     ad8:	26 2f       	mov	r18, r22
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	28 17       	cp	r18, r24
     ade:	39 07       	cpc	r19, r25
     ae0:	08 f4       	brcc	.+2      	; 0xae4 <qtm_key_sensors_process+0x266>
     ae2:	97 c0       	rjmp	.+302    	; 0xc12 <qtm_key_sensors_process+0x394>
     ae4:	70 82       	st	Z, r7
     ae6:	ea 81       	ldd	r30, Y+2	; 0x02
     ae8:	fb 81       	ldd	r31, Y+3	; 0x03
     aea:	22 81       	ldd	r18, Z+2	; 0x02
     aec:	8c 81       	ldd	r24, Y+4	; 0x04
     aee:	9d 81       	ldd	r25, Y+5	; 0x05
     af0:	fc 01       	movw	r30, r24
     af2:	ee 0d       	add	r30, r14
     af4:	ff 1d       	adc	r31, r15
     af6:	21 83       	std	Z+1, r18	; 0x01
     af8:	42 c0       	rjmp	.+132    	; 0xb7e <qtm_key_sensors_process+0x300>
     afa:	d8 01       	movw	r26, r16
     afc:	14 96       	adiw	r26, 0x04	; 4
     afe:	6d 91       	ld	r22, X+
     b00:	7c 91       	ld	r23, X
     b02:	15 97       	sbiw	r26, 0x05	; 5
     b04:	12 96       	adiw	r26, 0x02	; 2
     b06:	ed 91       	ld	r30, X+
     b08:	fc 91       	ld	r31, X
     b0a:	13 97       	sbiw	r26, 0x03	; 3
     b0c:	21 81       	ldd	r18, Z+1	; 0x01
     b0e:	32 81       	ldd	r19, Z+2	; 0x02
     b10:	26 17       	cp	r18, r22
     b12:	37 07       	cpc	r19, r23
     b14:	58 f4       	brcc	.+22     	; 0xb2c <qtm_key_sensors_process+0x2ae>
     b16:	11 96       	adiw	r26, 0x01	; 1
     b18:	8c 91       	ld	r24, X
     b1a:	11 97       	sbiw	r26, 0x01	; 1
     b1c:	81 11       	cpse	r24, r1
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <qtm_key_sensors_process+0x2a6>
     b20:	cc 92       	st	X, r12
     b22:	77 c0       	rjmp	.+238    	; 0xc12 <qtm_key_sensors_process+0x394>
     b24:	81 50       	subi	r24, 0x01	; 1
     b26:	f8 01       	movw	r30, r16
     b28:	81 83       	std	Z+1, r24	; 0x01
     b2a:	73 c0       	rjmp	.+230    	; 0xc12 <qtm_key_sensors_process+0x394>
     b2c:	ee 81       	ldd	r30, Y+6	; 0x06
     b2e:	ff 81       	ldd	r31, Y+7	; 0x07
     b30:	ea 0d       	add	r30, r10
     b32:	fb 1d       	adc	r31, r11
     b34:	80 81       	ld	r24, Z
     b36:	48 2f       	mov	r20, r24
     b38:	50 e0       	ldi	r21, 0x00	; 0
     b3a:	91 81       	ldd	r25, Z+1	; 0x01
     b3c:	9f 5f       	subi	r25, 0xFF	; 255
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <qtm_key_sensors_process+0x2c6>
     b40:	55 95       	asr	r21
     b42:	47 95       	ror	r20
     b44:	9a 95       	dec	r25
     b46:	e2 f7       	brpl	.-8      	; 0xb40 <qtm_key_sensors_process+0x2c2>
     b48:	26 1b       	sub	r18, r22
     b4a:	37 0b       	sbc	r19, r23
     b4c:	84 1b       	sub	r24, r20
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	82 17       	cp	r24, r18
     b52:	93 07       	cpc	r25, r19
     b54:	60 f4       	brcc	.+24     	; 0xb6e <qtm_key_sensors_process+0x2f0>
     b56:	d8 01       	movw	r26, r16
     b58:	6c 92       	st	X, r6
     b5a:	ea 81       	ldd	r30, Y+2	; 0x02
     b5c:	fb 81       	ldd	r31, Y+3	; 0x03
     b5e:	23 81       	ldd	r18, Z+3	; 0x03
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	fc 01       	movw	r30, r24
     b66:	ee 0d       	add	r30, r14
     b68:	ff 1d       	adc	r31, r15
     b6a:	21 83       	std	Z+1, r18	; 0x01
     b6c:	52 c0       	rjmp	.+164    	; 0xc12 <qtm_key_sensors_process+0x394>
     b6e:	f8 01       	movw	r30, r16
     b70:	81 81       	ldd	r24, Z+1	; 0x01
     b72:	81 11       	cpse	r24, r1
     b74:	02 c0       	rjmp	.+4      	; 0xb7a <qtm_key_sensors_process+0x2fc>
     b76:	c0 82       	st	Z, r12
     b78:	4c c0       	rjmp	.+152    	; 0xc12 <qtm_key_sensors_process+0x394>
     b7a:	81 50       	subi	r24, 0x01	; 1
     b7c:	81 83       	std	Z+1, r24	; 0x01
     b7e:	22 24       	eor	r2, r2
     b80:	23 94       	inc	r2
     b82:	3b c0       	rjmp	.+118    	; 0xbfa <qtm_key_sensors_process+0x37c>
     b84:	d8 01       	movw	r26, r16
     b86:	14 96       	adiw	r26, 0x04	; 4
     b88:	2d 91       	ld	r18, X+
     b8a:	3c 91       	ld	r19, X
     b8c:	15 97       	sbiw	r26, 0x05	; 5
     b8e:	12 96       	adiw	r26, 0x02	; 2
     b90:	8d 91       	ld	r24, X+
     b92:	9c 91       	ld	r25, X
     b94:	13 97       	sbiw	r26, 0x03	; 3
     b96:	dc 01       	movw	r26, r24
     b98:	11 96       	adiw	r26, 0x01	; 1
     b9a:	8d 91       	ld	r24, X+
     b9c:	9c 91       	ld	r25, X
     b9e:	12 97       	sbiw	r26, 0x02	; 2
     ba0:	82 17       	cp	r24, r18
     ba2:	93 07       	cpc	r25, r19
     ba4:	68 f5       	brcc	.+90     	; 0xc00 <qtm_key_sensors_process+0x382>
     ba6:	28 1b       	sub	r18, r24
     ba8:	39 0b       	sbc	r19, r25
     baa:	ae 81       	ldd	r26, Y+6	; 0x06
     bac:	bf 81       	ldd	r27, Y+7	; 0x07
     bae:	aa 0d       	add	r26, r10
     bb0:	bb 1d       	adc	r27, r11
     bb2:	8c 91       	ld	r24, X
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	05 80       	ldd	r0, Z+5	; 0x05
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <qtm_key_sensors_process+0x340>
     bba:	95 95       	asr	r25
     bbc:	87 95       	ror	r24
     bbe:	0a 94       	dec	r0
     bc0:	e2 f7       	brpl	.-8      	; 0xbba <qtm_key_sensors_process+0x33c>
     bc2:	99 27       	eor	r25, r25
     bc4:	28 17       	cp	r18, r24
     bc6:	39 07       	cpc	r19, r25
     bc8:	18 f4       	brcc	.+6      	; 0xbd0 <qtm_key_sensors_process+0x352>
     bca:	f8 01       	movw	r30, r16
     bcc:	c0 82       	st	Z, r12
     bce:	1a c0       	rjmp	.+52     	; 0xc04 <qtm_key_sensors_process+0x386>
     bd0:	d8 01       	movw	r26, r16
     bd2:	11 96       	adiw	r26, 0x01	; 1
     bd4:	8c 91       	ld	r24, X
     bd6:	11 97       	sbiw	r26, 0x01	; 1
     bd8:	81 11       	cpse	r24, r1
     bda:	0c c0       	rjmp	.+24     	; 0xbf4 <qtm_key_sensors_process+0x376>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	8c 81       	ldd	r24, Y+4	; 0x04
     be2:	9d 81       	ldd	r25, Y+5	; 0x05
     be4:	fc 01       	movw	r30, r24
     be6:	ee 0d       	add	r30, r14
     be8:	ff 1d       	adc	r31, r15
     bea:	02 80       	ldd	r0, Z+2	; 0x02
     bec:	f3 81       	ldd	r31, Z+3	; 0x03
     bee:	e0 2d       	mov	r30, r0
     bf0:	c0 82       	st	Z, r12
     bf2:	11 c0       	rjmp	.+34     	; 0xc16 <qtm_key_sensors_process+0x398>
     bf4:	81 50       	subi	r24, 0x01	; 1
     bf6:	f8 01       	movw	r30, r16
     bf8:	81 83       	std	Z+1, r24	; 0x01
     bfa:	dd 24       	eor	r13, r13
     bfc:	d3 94       	inc	r13
     bfe:	0b c0       	rjmp	.+22     	; 0xc16 <qtm_key_sensors_process+0x398>
     c00:	d8 01       	movw	r26, r16
     c02:	cc 92       	st	X, r12
     c04:	8c 81       	ldd	r24, Y+4	; 0x04
     c06:	9d 81       	ldd	r25, Y+5	; 0x05
     c08:	fc 01       	movw	r30, r24
     c0a:	ee 0d       	add	r30, r14
     c0c:	ff 1d       	adc	r31, r15
     c0e:	11 82       	std	Z+1, r1	; 0x01
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <qtm_key_sensors_process+0x398>
     c12:	22 24       	eor	r2, r2
     c14:	23 94       	inc	r2
     c16:	bf ef       	ldi	r27, 0xFF	; 255
     c18:	8b 1a       	sub	r8, r27
     c1a:	9b 0a       	sbc	r9, r27
     c1c:	e3 e0       	ldi	r30, 0x03	; 3
     c1e:	ae 0e       	add	r10, r30
     c20:	b1 1c       	adc	r11, r1
     c22:	55 ce       	rjmp	.-854    	; 0x8ce <qtm_key_sensors_process+0x50>
     c24:	e8 81       	ld	r30, Y
     c26:	f9 81       	ldd	r31, Y+1	; 0x01
     c28:	80 81       	ld	r24, Z
     c2a:	87 ff       	sbrs	r24, 7
     c2c:	23 c0       	rjmp	.+70     	; 0xc74 <qtm_key_sensors_process+0x3f6>
     c2e:	40 e0       	ldi	r20, 0x00	; 0
     c30:	50 e0       	ldi	r21, 0x00	; 0
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	ea 81       	ldd	r30, Y+2	; 0x02
     c38:	fb 81       	ldd	r31, Y+3	; 0x03
     c3a:	80 81       	ld	r24, Z
     c3c:	91 81       	ldd	r25, Z+1	; 0x01
     c3e:	28 17       	cp	r18, r24
     c40:	39 07       	cpc	r19, r25
     c42:	98 f4       	brcc	.+38     	; 0xc6a <qtm_key_sensors_process+0x3ec>
     c44:	ec 81       	ldd	r30, Y+4	; 0x04
     c46:	fd 81       	ldd	r31, Y+5	; 0x05
     c48:	e4 0f       	add	r30, r20
     c4a:	f5 1f       	adc	r31, r21
     c4c:	a2 81       	ldd	r26, Z+2	; 0x02
     c4e:	b3 81       	ldd	r27, Z+3	; 0x03
     c50:	8c 91       	ld	r24, X
     c52:	80 fd       	sbrc	r24, 0
     c54:	05 c0       	rjmp	.+10     	; 0xc60 <qtm_key_sensors_process+0x3e2>
     c56:	90 81       	ld	r25, Z
     c58:	97 7f       	andi	r25, 0xF7	; 247
     c5a:	11 f0       	breq	.+4      	; 0xc60 <qtm_key_sensors_process+0x3e2>
     c5c:	81 60       	ori	r24, 0x01	; 1
     c5e:	8c 93       	st	X, r24
     c60:	2f 5f       	subi	r18, 0xFF	; 255
     c62:	3f 4f       	sbci	r19, 0xFF	; 255
     c64:	4a 5f       	subi	r20, 0xFA	; 250
     c66:	5f 4f       	sbci	r21, 0xFF	; 255
     c68:	e6 cf       	rjmp	.-52     	; 0xc36 <qtm_key_sensors_process+0x3b8>
     c6a:	e8 81       	ld	r30, Y
     c6c:	f9 81       	ldd	r31, Y+1	; 0x01
     c6e:	80 81       	ld	r24, Z
     c70:	8f 77       	andi	r24, 0x7F	; 127
     c72:	80 83       	st	Z, r24
     c74:	d1 10       	cpse	r13, r1
     c76:	07 c0       	rjmp	.+14     	; 0xc86 <qtm_key_sensors_process+0x408>
     c78:	e8 81       	ld	r30, Y
     c7a:	f9 81       	ldd	r31, Y+1	; 0x01
     c7c:	21 10       	cpse	r2, r1
     c7e:	6f c0       	rjmp	.+222    	; 0xd5e <qtm_key_sensors_process+0x4e0>
     c80:	80 81       	ld	r24, Z
     c82:	8e 7f       	andi	r24, 0xFE	; 254
     c84:	6e c0       	rjmp	.+220    	; 0xd62 <qtm_key_sensors_process+0x4e4>
     c86:	ea 81       	ldd	r30, Y+2	; 0x02
     c88:	fb 81       	ldd	r31, Y+3	; 0x03
     c8a:	81 85       	ldd	r24, Z+9	; 0x09
     c8c:	88 23       	and	r24, r24
     c8e:	a1 f3       	breq	.-24     	; 0xc78 <qtm_key_sensors_process+0x3fa>
     c90:	e8 81       	ld	r30, Y
     c92:	f9 81       	ldd	r31, Y+1	; 0x01
     c94:	80 81       	ld	r24, Z
     c96:	80 68       	ori	r24, 0x80	; 128
     c98:	80 83       	st	Z, r24
     c9a:	ea 81       	ldd	r30, Y+2	; 0x02
     c9c:	fb 81       	ldd	r31, Y+3	; 0x03
     c9e:	81 85       	ldd	r24, Z+9	; 0x09
     ca0:	81 30       	cpi	r24, 0x01	; 1
     ca2:	51 f7       	brne	.-44     	; 0xc78 <qtm_key_sensors_process+0x3fa>
     ca4:	40 e0       	ldi	r20, 0x00	; 0
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	20 e0       	ldi	r18, 0x00	; 0
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	96 e0       	ldi	r25, 0x06	; 6
     cae:	d9 2e       	mov	r13, r25
     cb0:	ea 81       	ldd	r30, Y+2	; 0x02
     cb2:	fb 81       	ldd	r31, Y+3	; 0x03
     cb4:	60 81       	ld	r22, Z
     cb6:	71 81       	ldd	r23, Z+1	; 0x01
     cb8:	26 17       	cp	r18, r22
     cba:	37 07       	cpc	r19, r23
     cbc:	e8 f6       	brcc	.-70     	; 0xc78 <qtm_key_sensors_process+0x3fa>
     cbe:	0c 81       	ldd	r16, Y+4	; 0x04
     cc0:	1d 81       	ldd	r17, Y+5	; 0x05
     cc2:	fa 01       	movw	r30, r20
     cc4:	ee 0f       	add	r30, r30
     cc6:	ff 1f       	adc	r31, r31
     cc8:	e0 0f       	add	r30, r16
     cca:	f1 1f       	adc	r31, r17
     ccc:	80 81       	ld	r24, Z
     cce:	98 2f       	mov	r25, r24
     cd0:	97 7f       	andi	r25, 0xF7	; 247
     cd2:	a1 f1       	breq	.+104    	; 0xd3c <qtm_key_sensors_process+0x4be>
     cd4:	85 38       	cpi	r24, 0x85	; 133
     cd6:	11 f0       	breq	.+4      	; 0xcdc <qtm_key_sensors_process+0x45e>
     cd8:	83 30       	cpi	r24, 0x03	; 3
     cda:	b1 f5       	brne	.+108    	; 0xd48 <qtm_key_sensors_process+0x4ca>
     cdc:	ee 80       	ldd	r14, Y+6	; 0x06
     cde:	ff 80       	ldd	r15, Y+7	; 0x07
     ce0:	d7 01       	movw	r26, r14
     ce2:	a4 0f       	add	r26, r20
     ce4:	b5 1f       	adc	r27, r21
     ce6:	12 96       	adiw	r26, 0x02	; 2
     ce8:	bc 90       	ld	r11, X
     cea:	bb 20       	and	r11, r11
     cec:	39 f1       	breq	.+78     	; 0xd3c <qtm_key_sensors_process+0x4be>
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	c1 2c       	mov	r12, r1
     cf4:	86 17       	cp	r24, r22
     cf6:	97 07       	cpc	r25, r23
     cf8:	f8 f4       	brcc	.+62     	; 0xd38 <qtm_key_sensors_process+0x4ba>
     cfa:	28 17       	cp	r18, r24
     cfc:	39 07       	cpc	r19, r25
     cfe:	d1 f0       	breq	.+52     	; 0xd34 <qtm_key_sensors_process+0x4b6>
     d00:	d8 9e       	mul	r13, r24
     d02:	d0 01       	movw	r26, r0
     d04:	d9 9e       	mul	r13, r25
     d06:	b0 0d       	add	r27, r0
     d08:	11 24       	eor	r1, r1
     d0a:	a0 0f       	add	r26, r16
     d0c:	b1 1f       	adc	r27, r17
     d0e:	ac 91       	ld	r26, X
     d10:	a4 30       	cpi	r26, 0x04	; 4
     d12:	11 f0       	breq	.+4      	; 0xd18 <qtm_key_sensors_process+0x49a>
     d14:	a6 38       	cpi	r26, 0x86	; 134
     d16:	71 f4       	brne	.+28     	; 0xd34 <qtm_key_sensors_process+0x4b6>
     d18:	dc 01       	movw	r26, r24
     d1a:	aa 0f       	add	r26, r26
     d1c:	bb 1f       	adc	r27, r27
     d1e:	a8 0f       	add	r26, r24
     d20:	b9 1f       	adc	r27, r25
     d22:	ae 0d       	add	r26, r14
     d24:	bf 1d       	adc	r27, r15
     d26:	12 96       	adiw	r26, 0x02	; 2
     d28:	ac 91       	ld	r26, X
     d2a:	ba 12       	cpse	r11, r26
     d2c:	03 c0       	rjmp	.+6      	; 0xd34 <qtm_key_sensors_process+0x4b6>
     d2e:	cb 01       	movw	r24, r22
     d30:	cc 24       	eor	r12, r12
     d32:	c3 94       	inc	r12
     d34:	01 96       	adiw	r24, 0x01	; 1
     d36:	de cf       	rjmp	.-68     	; 0xcf4 <qtm_key_sensors_process+0x476>
     d38:	c1 10       	cpse	r12, r1
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <qtm_key_sensors_process+0x4ca>
     d3c:	02 80       	ldd	r0, Z+2	; 0x02
     d3e:	f3 81       	ldd	r31, Z+3	; 0x03
     d40:	e0 2d       	mov	r30, r0
     d42:	80 81       	ld	r24, Z
     d44:	8e 7f       	andi	r24, 0xFE	; 254
     d46:	05 c0       	rjmp	.+10     	; 0xd52 <qtm_key_sensors_process+0x4d4>
     d48:	02 80       	ldd	r0, Z+2	; 0x02
     d4a:	f3 81       	ldd	r31, Z+3	; 0x03
     d4c:	e0 2d       	mov	r30, r0
     d4e:	80 81       	ld	r24, Z
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	80 83       	st	Z, r24
     d54:	2f 5f       	subi	r18, 0xFF	; 255
     d56:	3f 4f       	sbci	r19, 0xFF	; 255
     d58:	4d 5f       	subi	r20, 0xFD	; 253
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	a9 cf       	rjmp	.-174    	; 0xcb0 <qtm_key_sensors_process+0x432>
     d5e:	80 81       	ld	r24, Z
     d60:	81 60       	ori	r24, 0x01	; 1
     d62:	80 83       	st	Z, r24
     d64:	80 91 51 3e 	lds	r24, 0x3E51	; 0x803e51 <qtm_local_ms_timecount>
     d68:	90 91 52 3e 	lds	r25, 0x3E52	; 0x803e52 <qtm_local_ms_timecount+0x1>
     d6c:	e8 81       	ld	r30, Y
     d6e:	f9 81       	ldd	r31, Y+1	; 0x01
     d70:	21 81       	ldd	r18, Z+1	; 0x01
     d72:	32 81       	ldd	r19, Z+2	; 0x02
     d74:	a9 01       	movw	r20, r18
     d76:	48 53       	subi	r20, 0x38	; 56
     d78:	5f 4f       	sbci	r21, 0xFF	; 255
     d7a:	48 17       	cp	r20, r24
     d7c:	59 07       	cpc	r21, r25
     d7e:	38 f4       	brcc	.+14     	; 0xd8e <qtm_key_sensors_process+0x510>
     d80:	82 1b       	sub	r24, r18
     d82:	93 0b       	sbc	r25, r19
     d84:	aa 24       	eor	r10, r10
     d86:	a3 94       	inc	r10
     d88:	a3 e0       	ldi	r26, 0x03	; 3
     d8a:	ba 2e       	mov	r11, r26
     d8c:	44 c0       	rjmp	.+136    	; 0xe16 <qtm_key_sensors_process+0x598>
     d8e:	82 17       	cp	r24, r18
     d90:	93 07       	cpc	r25, r19
     d92:	10 f0       	brcs	.+4      	; 0xd98 <qtm_key_sensors_process+0x51a>
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	04 c1       	rjmp	.+520    	; 0xfa0 <qtm_key_sensors_process+0x722>
     d98:	82 1b       	sub	r24, r18
     d9a:	93 0b       	sbc	r25, r19
     d9c:	01 97       	sbiw	r24, 0x01	; 1
     d9e:	89 3c       	cpi	r24, 0xC9	; 201
     da0:	91 05       	cpc	r25, r1
     da2:	c0 f3       	brcs	.-16     	; 0xd94 <qtm_key_sensors_process+0x516>
     da4:	ef cf       	rjmp	.-34     	; 0xd84 <qtm_key_sensors_process+0x506>
     da6:	88 5c       	subi	r24, 0xC8	; 200
     da8:	91 09       	sbc	r25, r1
     daa:	e8 81       	ld	r30, Y
     dac:	f9 81       	ldd	r31, Y+1	; 0x01
     dae:	21 81       	ldd	r18, Z+1	; 0x01
     db0:	32 81       	ldd	r19, Z+2	; 0x02
     db2:	28 53       	subi	r18, 0x38	; 56
     db4:	3f 4f       	sbci	r19, 0xFF	; 255
     db6:	21 83       	std	Z+1, r18	; 0x01
     db8:	32 83       	std	Z+2, r19	; 0x02
     dba:	23 81       	ldd	r18, Z+3	; 0x03
     dbc:	21 11       	cpse	r18, r1
     dbe:	96 c0       	rjmp	.+300    	; 0xeec <qtm_key_sensors_process+0x66e>
     dc0:	24 81       	ldd	r18, Z+4	; 0x04
     dc2:	22 23       	and	r18, r18
     dc4:	11 f0       	breq	.+4      	; 0xdca <qtm_key_sensors_process+0x54c>
     dc6:	21 50       	subi	r18, 0x01	; 1
     dc8:	24 83       	std	Z+4, r18	; 0x04
     dca:	e8 81       	ld	r30, Y
     dcc:	f9 81       	ldd	r31, Y+1	; 0x01
     dce:	25 81       	ldd	r18, Z+5	; 0x05
     dd0:	22 23       	and	r18, r18
     dd2:	11 f0       	breq	.+4      	; 0xdd8 <qtm_key_sensors_process+0x55a>
     dd4:	21 50       	subi	r18, 0x01	; 1
     dd6:	25 83       	std	Z+5, r18	; 0x05
     dd8:	8a 80       	ldd	r8, Y+2	; 0x02
     dda:	9b 80       	ldd	r9, Y+3	; 0x03
     ddc:	d4 01       	movw	r26, r8
     dde:	16 96       	adiw	r26, 0x06	; 6
     de0:	2c 91       	ld	r18, X
     de2:	16 97       	sbiw	r26, 0x06	; 6
     de4:	21 11       	cpse	r18, r1
     de6:	1b c0       	rjmp	.+54     	; 0xe1e <qtm_key_sensors_process+0x5a0>
     de8:	8a 80       	ldd	r8, Y+2	; 0x02
     dea:	9b 80       	ldd	r9, Y+3	; 0x03
     dec:	f4 01       	movw	r30, r8
     dee:	27 81       	ldd	r18, Z+7	; 0x07
     df0:	21 11       	cpse	r18, r1
     df2:	48 c0       	rjmp	.+144    	; 0xe84 <qtm_key_sensors_process+0x606>
     df4:	ea 81       	ldd	r30, Y+2	; 0x02
     df6:	fb 81       	ldd	r31, Y+3	; 0x03
     df8:	23 81       	ldd	r18, Z+3	; 0x03
     dfa:	22 23       	and	r18, r18
     dfc:	61 f0       	breq	.+24     	; 0xe16 <qtm_key_sensors_process+0x598>
     dfe:	20 e0       	ldi	r18, 0x00	; 0
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	a0 e0       	ldi	r26, 0x00	; 0
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	ea 81       	ldd	r30, Y+2	; 0x02
     e08:	fb 81       	ldd	r31, Y+3	; 0x03
     e0a:	40 81       	ld	r20, Z
     e0c:	51 81       	ldd	r21, Z+1	; 0x01
     e0e:	a4 17       	cp	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	08 f4       	brcc	.+2      	; 0xe16 <qtm_key_sensors_process+0x598>
     e14:	6e c0       	rjmp	.+220    	; 0xef2 <qtm_key_sensors_process+0x674>
     e16:	89 3c       	cpi	r24, 0xC9	; 201
     e18:	91 05       	cpc	r25, r1
     e1a:	28 f6       	brcc	.-118    	; 0xda6 <qtm_key_sensors_process+0x528>
     e1c:	bb cf       	rjmp	.-138    	; 0xd94 <qtm_key_sensors_process+0x516>
     e1e:	08 81       	ld	r16, Y
     e20:	19 81       	ldd	r17, Y+1	; 0x01
     e22:	f8 01       	movw	r30, r16
     e24:	24 81       	ldd	r18, Z+4	; 0x04
     e26:	21 11       	cpse	r18, r1
     e28:	df cf       	rjmp	.-66     	; 0xde8 <qtm_key_sensors_process+0x56a>
     e2a:	ed 90       	ld	r14, X+
     e2c:	fc 90       	ld	r15, X
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	40 e0       	ldi	r20, 0x00	; 0
     e34:	50 e0       	ldi	r21, 0x00	; 0
     e36:	4e 15       	cp	r20, r14
     e38:	5f 05       	cpc	r21, r15
     e3a:	f1 f0       	breq	.+60     	; 0xe78 <qtm_key_sensors_process+0x5fa>
     e3c:	ec 81       	ldd	r30, Y+4	; 0x04
     e3e:	fd 81       	ldd	r31, Y+5	; 0x05
     e40:	e6 0f       	add	r30, r22
     e42:	f7 1f       	adc	r31, r23
     e44:	20 81       	ld	r18, Z
     e46:	23 30       	cpi	r18, 0x03	; 3
     e48:	11 f0       	breq	.+4      	; 0xe4e <qtm_key_sensors_process+0x5d0>
     e4a:	28 30       	cpi	r18, 0x08	; 8
     e4c:	81 f4       	brne	.+32     	; 0xe6e <qtm_key_sensors_process+0x5f0>
     e4e:	24 81       	ldd	r18, Z+4	; 0x04
     e50:	35 81       	ldd	r19, Z+5	; 0x05
     e52:	c2 80       	ldd	r12, Z+2	; 0x02
     e54:	d3 80       	ldd	r13, Z+3	; 0x03
     e56:	d6 01       	movw	r26, r12
     e58:	11 96       	adiw	r26, 0x01	; 1
     e5a:	cd 90       	ld	r12, X+
     e5c:	dc 90       	ld	r13, X
     e5e:	12 97       	sbiw	r26, 0x02	; 2
     e60:	2c 15       	cp	r18, r12
     e62:	3d 05       	cpc	r19, r13
     e64:	20 f4       	brcc	.+8      	; 0xe6e <qtm_key_sensors_process+0x5f0>
     e66:	2f 5f       	subi	r18, 0xFF	; 255
     e68:	3f 4f       	sbci	r19, 0xFF	; 255
     e6a:	24 83       	std	Z+4, r18	; 0x04
     e6c:	35 83       	std	Z+5, r19	; 0x05
     e6e:	4f 5f       	subi	r20, 0xFF	; 255
     e70:	5f 4f       	sbci	r21, 0xFF	; 255
     e72:	6a 5f       	subi	r22, 0xFA	; 250
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	df cf       	rjmp	.-66     	; 0xe36 <qtm_key_sensors_process+0x5b8>
     e78:	f4 01       	movw	r30, r8
     e7a:	26 81       	ldd	r18, Z+6	; 0x06
     e7c:	d8 01       	movw	r26, r16
     e7e:	14 96       	adiw	r26, 0x04	; 4
     e80:	2c 93       	st	X, r18
     e82:	b2 cf       	rjmp	.-156    	; 0xde8 <qtm_key_sensors_process+0x56a>
     e84:	08 81       	ld	r16, Y
     e86:	19 81       	ldd	r17, Y+1	; 0x01
     e88:	d8 01       	movw	r26, r16
     e8a:	15 96       	adiw	r26, 0x05	; 5
     e8c:	2c 91       	ld	r18, X
     e8e:	21 11       	cpse	r18, r1
     e90:	b1 cf       	rjmp	.-158    	; 0xdf4 <qtm_key_sensors_process+0x576>
     e92:	e0 80       	ld	r14, Z
     e94:	f1 80       	ldd	r15, Z+1	; 0x01
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	40 e0       	ldi	r20, 0x00	; 0
     e9c:	50 e0       	ldi	r21, 0x00	; 0
     e9e:	4e 15       	cp	r20, r14
     ea0:	5f 05       	cpc	r21, r15
     ea2:	f1 f0       	breq	.+60     	; 0xee0 <qtm_key_sensors_process+0x662>
     ea4:	ec 81       	ldd	r30, Y+4	; 0x04
     ea6:	fd 81       	ldd	r31, Y+5	; 0x05
     ea8:	e6 0f       	add	r30, r22
     eaa:	f7 1f       	adc	r31, r23
     eac:	20 81       	ld	r18, Z
     eae:	23 30       	cpi	r18, 0x03	; 3
     eb0:	11 f0       	breq	.+4      	; 0xeb6 <qtm_key_sensors_process+0x638>
     eb2:	28 30       	cpi	r18, 0x08	; 8
     eb4:	81 f4       	brne	.+32     	; 0xed6 <qtm_key_sensors_process+0x658>
     eb6:	24 81       	ldd	r18, Z+4	; 0x04
     eb8:	35 81       	ldd	r19, Z+5	; 0x05
     eba:	c2 80       	ldd	r12, Z+2	; 0x02
     ebc:	d3 80       	ldd	r13, Z+3	; 0x03
     ebe:	d6 01       	movw	r26, r12
     ec0:	11 96       	adiw	r26, 0x01	; 1
     ec2:	cd 90       	ld	r12, X+
     ec4:	dc 90       	ld	r13, X
     ec6:	12 97       	sbiw	r26, 0x02	; 2
     ec8:	c2 16       	cp	r12, r18
     eca:	d3 06       	cpc	r13, r19
     ecc:	20 f4       	brcc	.+8      	; 0xed6 <qtm_key_sensors_process+0x658>
     ece:	21 50       	subi	r18, 0x01	; 1
     ed0:	31 09       	sbc	r19, r1
     ed2:	24 83       	std	Z+4, r18	; 0x04
     ed4:	35 83       	std	Z+5, r19	; 0x05
     ed6:	4f 5f       	subi	r20, 0xFF	; 255
     ed8:	5f 4f       	sbci	r21, 0xFF	; 255
     eda:	6a 5f       	subi	r22, 0xFA	; 250
     edc:	7f 4f       	sbci	r23, 0xFF	; 255
     ede:	df cf       	rjmp	.-66     	; 0xe9e <qtm_key_sensors_process+0x620>
     ee0:	f4 01       	movw	r30, r8
     ee2:	27 81       	ldd	r18, Z+7	; 0x07
     ee4:	d8 01       	movw	r26, r16
     ee6:	15 96       	adiw	r26, 0x05	; 5
     ee8:	2c 93       	st	X, r18
     eea:	84 cf       	rjmp	.-248    	; 0xdf4 <qtm_key_sensors_process+0x576>
     eec:	21 50       	subi	r18, 0x01	; 1
     eee:	23 83       	std	Z+3, r18	; 0x03
     ef0:	81 cf       	rjmp	.-254    	; 0xdf4 <qtm_key_sensors_process+0x576>
     ef2:	a9 01       	movw	r20, r18
     ef4:	44 0f       	add	r20, r20
     ef6:	55 1f       	adc	r21, r21
     ef8:	ec 81       	ldd	r30, Y+4	; 0x04
     efa:	fd 81       	ldd	r31, Y+5	; 0x05
     efc:	e4 0f       	add	r30, r20
     efe:	f5 1f       	adc	r31, r21
     f00:	60 81       	ld	r22, Z
     f02:	65 38       	cpi	r22, 0x85	; 133
     f04:	09 f0       	breq	.+2      	; 0xf08 <qtm_key_sensors_process+0x68a>
     f06:	47 c0       	rjmp	.+142    	; 0xf96 <qtm_key_sensors_process+0x718>
     f08:	61 81       	ldd	r22, Z+1	; 0x01
     f0a:	66 23       	and	r22, r22
     f0c:	19 f0       	breq	.+6      	; 0xf14 <qtm_key_sensors_process+0x696>
     f0e:	61 50       	subi	r22, 0x01	; 1
     f10:	61 83       	std	Z+1, r22	; 0x01
     f12:	41 c0       	rjmp	.+130    	; 0xf96 <qtm_key_sensors_process+0x718>
     f14:	a0 82       	st	Z, r10
     f16:	6c 81       	ldd	r22, Y+4	; 0x04
     f18:	7d 81       	ldd	r23, Y+5	; 0x05
     f1a:	fb 01       	movw	r30, r22
     f1c:	e4 0f       	add	r30, r20
     f1e:	f5 1f       	adc	r31, r21
     f20:	02 80       	ldd	r0, Z+2	; 0x02
     f22:	f3 81       	ldd	r31, Z+3	; 0x03
     f24:	e0 2d       	mov	r30, r0
     f26:	b0 82       	st	Z, r11
     f28:	ee 81       	ldd	r30, Y+6	; 0x06
     f2a:	ff 81       	ldd	r31, Y+7	; 0x07
     f2c:	e2 0f       	add	r30, r18
     f2e:	f3 1f       	adc	r31, r19
     f30:	d2 80       	ldd	r13, Z+2	; 0x02
     f32:	dd 20       	and	r13, r13
     f34:	81 f1       	breq	.+96     	; 0xf96 <qtm_key_sensors_process+0x718>
     f36:	40 e0       	ldi	r20, 0x00	; 0
     f38:	50 e0       	ldi	r21, 0x00	; 0
     f3a:	00 e0       	ldi	r16, 0x00	; 0
     f3c:	10 e0       	ldi	r17, 0x00	; 0
     f3e:	ea 81       	ldd	r30, Y+2	; 0x02
     f40:	fb 81       	ldd	r31, Y+3	; 0x03
     f42:	60 81       	ld	r22, Z
     f44:	71 81       	ldd	r23, Z+1	; 0x01
     f46:	06 17       	cp	r16, r22
     f48:	17 07       	cpc	r17, r23
     f4a:	28 f5       	brcc	.+74     	; 0xf96 <qtm_key_sensors_process+0x718>
     f4c:	ee 81       	ldd	r30, Y+6	; 0x06
     f4e:	ff 81       	ldd	r31, Y+7	; 0x07
     f50:	e4 0f       	add	r30, r20
     f52:	f5 1f       	adc	r31, r21
     f54:	62 81       	ldd	r22, Z+2	; 0x02
     f56:	d6 12       	cpse	r13, r22
     f58:	19 c0       	rjmp	.+50     	; 0xf8c <qtm_key_sensors_process+0x70e>
     f5a:	ba 01       	movw	r22, r20
     f5c:	66 0f       	add	r22, r22
     f5e:	77 1f       	adc	r23, r23
     f60:	ec 81       	ldd	r30, Y+4	; 0x04
     f62:	fd 81       	ldd	r31, Y+5	; 0x05
     f64:	4f 01       	movw	r8, r30
     f66:	86 0e       	add	r8, r22
     f68:	97 1e       	adc	r9, r23
     f6a:	f4 01       	movw	r30, r8
     f6c:	e2 80       	ldd	r14, Z+2	; 0x02
     f6e:	f3 80       	ldd	r15, Z+3	; 0x03
     f70:	f7 01       	movw	r30, r14
     f72:	f0 80       	ld	r15, Z
     f74:	f0 fe       	sbrs	r15, 0
     f76:	0a c0       	rjmp	.+20     	; 0xf8c <qtm_key_sensors_process+0x70e>
     f78:	f4 01       	movw	r30, r8
     f7a:	a0 82       	st	Z, r10
     f7c:	ec 81       	ldd	r30, Y+4	; 0x04
     f7e:	fd 81       	ldd	r31, Y+5	; 0x05
     f80:	e6 0f       	add	r30, r22
     f82:	f7 1f       	adc	r31, r23
     f84:	02 80       	ldd	r0, Z+2	; 0x02
     f86:	f3 81       	ldd	r31, Z+3	; 0x03
     f88:	e0 2d       	mov	r30, r0
     f8a:	b0 82       	st	Z, r11
     f8c:	0f 5f       	subi	r16, 0xFF	; 255
     f8e:	1f 4f       	sbci	r17, 0xFF	; 255
     f90:	4d 5f       	subi	r20, 0xFD	; 253
     f92:	5f 4f       	sbci	r21, 0xFF	; 255
     f94:	d4 cf       	rjmp	.-88     	; 0xf3e <qtm_key_sensors_process+0x6c0>
     f96:	11 96       	adiw	r26, 0x01	; 1
     f98:	2d 5f       	subi	r18, 0xFD	; 253
     f9a:	3f 4f       	sbci	r19, 0xFF	; 255
     f9c:	34 cf       	rjmp	.-408    	; 0xe06 <qtm_key_sensors_process+0x588>
     f9e:	8b e0       	ldi	r24, 0x0B	; 11
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	ff 90       	pop	r15
     faa:	ef 90       	pop	r14
     fac:	df 90       	pop	r13
     fae:	cf 90       	pop	r12
     fb0:	bf 90       	pop	r11
     fb2:	af 90       	pop	r10
     fb4:	9f 90       	pop	r9
     fb6:	8f 90       	pop	r8
     fb8:	7f 90       	pop	r7
     fba:	6f 90       	pop	r6
     fbc:	5f 90       	pop	r5
     fbe:	4f 90       	pop	r4
     fc0:	3f 90       	pop	r3
     fc2:	2f 90       	pop	r2
     fc4:	08 95       	ret

00000fc6 <qtm_error_handler>:
     fc6:	95 e0       	ldi	r25, 0x05	; 5
     fc8:	90 93 55 3e 	sts	0x3E55, r25	; 0x803e55 <qtm_state>
     fcc:	e0 91 95 3e 	lds	r30, 0x3E95	; 0x803e95 <qtm>
     fd0:	f0 91 96 3e 	lds	r31, 0x3E96	; 0x803e96 <qtm+0x1>
     fd4:	01 88       	ldd	r0, Z+17	; 0x11
     fd6:	f2 89       	ldd	r31, Z+18	; 0x12
     fd8:	e0 2d       	mov	r30, r0
     fda:	30 97       	sbiw	r30, 0x00	; 0
     fdc:	09 f0       	breq	.+2      	; 0xfe0 <qtm_error_handler+0x1a>
     fde:	09 94       	ijmp
     fe0:	ff cf       	rjmp	.-2      	; 0xfe0 <qtm_error_handler+0x1a>

00000fe2 <generic_callback_function>:
     fe2:	e0 91 95 3e 	lds	r30, 0x3E95	; 0x803e95 <qtm>
     fe6:	f0 91 96 3e 	lds	r31, 0x3E96	; 0x803e96 <qtm+0x1>
     fea:	03 88       	ldd	r0, Z+19	; 0x13
     fec:	f4 89       	ldd	r31, Z+20	; 0x14
     fee:	e0 2d       	mov	r30, r0
     ff0:	30 97       	sbiw	r30, 0x00	; 0
     ff2:	09 f0       	breq	.+2      	; 0xff6 <generic_callback_function+0x14>
     ff4:	09 94       	ijmp
     ff6:	80 e4       	ldi	r24, 0x40	; 64
     ff8:	e6 cf       	rjmp	.-52     	; 0xfc6 <qtm_error_handler>

00000ffa <qmt_get_binding_layer_ptr>:
     ffa:	80 91 95 3e 	lds	r24, 0x3E95	; 0x803e95 <qtm>
     ffe:	90 91 96 3e 	lds	r25, 0x3E96	; 0x803e96 <qtm+0x1>
    1002:	08 95       	ret

00001004 <qtm_binding_layer_init>:
    1004:	cf 93       	push	r28
    1006:	80 93 95 3e 	sts	0x3E95, r24	; 0x803e95 <qtm>
    100a:	90 93 96 3e 	sts	0x3E96, r25	; 0x803e96 <qtm+0x1>
    100e:	80 91 55 3e 	lds	r24, 0x3E55	; 0x803e55 <qtm_state>
    1012:	85 30       	cpi	r24, 0x05	; 5
    1014:	39 f0       	breq	.+14     	; 0x1024 <qtm_binding_layer_init+0x20>
    1016:	82 30       	cpi	r24, 0x02	; 2
    1018:	28 f0       	brcs	.+10     	; 0x1024 <qtm_binding_layer_init+0x20>
    101a:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    101e:	88 23       	and	r24, r24
    1020:	71 f1       	breq	.+92     	; 0x107e <qtm_binding_layer_init+0x7a>
    1022:	40 c0       	rjmp	.+128    	; 0x10a4 <qtm_binding_layer_init+0xa0>
    1024:	10 92 53 3e 	sts	0x3E53, r1	; 0x803e53 <errors>
    1028:	c0 e0       	ldi	r28, 0x00	; 0
    102a:	a0 91 95 3e 	lds	r26, 0x3E95	; 0x803e95 <qtm>
    102e:	b0 91 96 3e 	lds	r27, 0x3E96	; 0x803e96 <qtm+0x1>
    1032:	8c 2f       	mov	r24, r28
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	11 96       	adiw	r26, 0x01	; 1
    103c:	ed 91       	ld	r30, X+
    103e:	fc 91       	ld	r31, X
    1040:	12 97       	sbiw	r26, 0x02	; 2
    1042:	e8 0f       	add	r30, r24
    1044:	f9 1f       	adc	r31, r25
    1046:	01 90       	ld	r0, Z+
    1048:	f0 81       	ld	r31, Z
    104a:	e0 2d       	mov	r30, r0
    104c:	30 97       	sbiw	r30, 0x00	; 0
    104e:	29 f3       	breq	.-54     	; 0x101a <qtm_binding_layer_init+0x16>
    1050:	17 96       	adiw	r26, 0x07	; 7
    1052:	2d 91       	ld	r18, X+
    1054:	3c 91       	ld	r19, X
    1056:	18 97       	sbiw	r26, 0x08	; 8
    1058:	d9 01       	movw	r26, r18
    105a:	a8 0f       	add	r26, r24
    105c:	b9 1f       	adc	r27, r25
    105e:	8d 91       	ld	r24, X+
    1060:	9c 91       	ld	r25, X
    1062:	09 95       	icall
    1064:	88 23       	and	r24, r24
    1066:	29 f0       	breq	.+10     	; 0x1072 <qtm_binding_layer_init+0x6e>
    1068:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    106c:	8f 5f       	subi	r24, 0xFF	; 255
    106e:	80 93 53 3e 	sts	0x3E53, r24	; 0x803e53 <errors>
    1072:	cf 5f       	subi	r28, 0xFF	; 255
    1074:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    1078:	88 23       	and	r24, r24
    107a:	b9 f2       	breq	.-82     	; 0x102a <qtm_binding_layer_init+0x26>
    107c:	ce cf       	rjmp	.-100    	; 0x101a <qtm_binding_layer_init+0x16>
    107e:	82 e0       	ldi	r24, 0x02	; 2
    1080:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    1084:	e0 91 95 3e 	lds	r30, 0x3E95	; 0x803e95 <qtm>
    1088:	f0 91 96 3e 	lds	r31, 0x3E96	; 0x803e96 <qtm+0x1>
    108c:	07 84       	ldd	r0, Z+15	; 0x0f
    108e:	f0 89       	ldd	r31, Z+16	; 0x10
    1090:	e0 2d       	mov	r30, r0
    1092:	30 97       	sbiw	r30, 0x00	; 0
    1094:	11 f0       	breq	.+4      	; 0x109a <qtm_binding_layer_init+0x96>
    1096:	09 95       	icall
    1098:	08 c0       	rjmp	.+16     	; 0x10aa <qtm_binding_layer_init+0xa6>
    109a:	85 e0       	ldi	r24, 0x05	; 5
    109c:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <qtm_binding_layer_init+0xa2>
    10a4:	8f 5f       	subi	r24, 0xFF	; 255
    10a6:	80 93 53 3e 	sts	0x3E53, r24	; 0x803e53 <errors>
    10aa:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    10ae:	88 23       	and	r24, r24
    10b0:	29 f0       	breq	.+10     	; 0x10bc <qtm_binding_layer_init+0xb8>
    10b2:	10 92 53 3e 	sts	0x3E53, r1	; 0x803e53 <errors>
    10b6:	80 e8       	ldi	r24, 0x80	; 128
    10b8:	cf 91       	pop	r28
    10ba:	85 cf       	rjmp	.-246    	; 0xfc6 <qtm_error_handler>
    10bc:	cf 91       	pop	r28
    10be:	08 95       	ret

000010c0 <qtm_lib_start_acquisition>:
    10c0:	1f 93       	push	r17
    10c2:	cf 93       	push	r28
    10c4:	df 93       	push	r29
    10c6:	18 2f       	mov	r17, r24
    10c8:	a0 91 95 3e 	lds	r26, 0x3E95	; 0x803e95 <qtm>
    10cc:	b0 91 96 3e 	lds	r27, 0x3E96	; 0x803e96 <qtm+0x1>
    10d0:	15 96       	adiw	r26, 0x05	; 5
    10d2:	2d 91       	ld	r18, X+
    10d4:	3c 91       	ld	r19, X
    10d6:	16 97       	sbiw	r26, 0x06	; 6
    10d8:	d0 e0       	ldi	r29, 0x00	; 0
    10da:	f9 01       	movw	r30, r18
    10dc:	ed 0f       	add	r30, r29
    10de:	f1 1d       	adc	r31, r1
    10e0:	ed 0f       	add	r30, r29
    10e2:	f1 1d       	adc	r31, r1
    10e4:	80 81       	ld	r24, Z
    10e6:	91 81       	ldd	r25, Z+1	; 0x01
    10e8:	89 2b       	or	r24, r25
    10ea:	11 f0       	breq	.+4      	; 0x10f0 <qtm_lib_start_acquisition+0x30>
    10ec:	df 5f       	subi	r29, 0xFF	; 255
    10ee:	f5 cf       	rjmp	.-22     	; 0x10da <qtm_lib_start_acquisition+0x1a>
    10f0:	53 96       	adiw	r26, 0x13	; 19
    10f2:	8d 91       	ld	r24, X+
    10f4:	9c 91       	ld	r25, X
    10f6:	54 97       	sbiw	r26, 0x14	; 20
    10f8:	89 2b       	or	r24, r25
    10fa:	49 f1       	breq	.+82     	; 0x114e <qtm_lib_start_acquisition+0x8e>
    10fc:	81 2f       	mov	r24, r17
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	88 0f       	add	r24, r24
    1102:	99 1f       	adc	r25, r25
    1104:	f9 01       	movw	r30, r18
    1106:	e8 0f       	add	r30, r24
    1108:	f9 1f       	adc	r31, r25
    110a:	01 90       	ld	r0, Z+
    110c:	f0 81       	ld	r31, Z
    110e:	e0 2d       	mov	r30, r0
    1110:	30 97       	sbiw	r30, 0x00	; 0
    1112:	e9 f0       	breq	.+58     	; 0x114e <qtm_lib_start_acquisition+0x8e>
    1114:	1b 96       	adiw	r26, 0x0b	; 11
    1116:	2d 91       	ld	r18, X+
    1118:	3c 91       	ld	r19, X
    111a:	1c 97       	sbiw	r26, 0x0c	; 12
    111c:	d9 01       	movw	r26, r18
    111e:	a8 0f       	add	r26, r24
    1120:	b9 1f       	adc	r27, r25
    1122:	8d 91       	ld	r24, X+
    1124:	9c 91       	ld	r25, X
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	91 f0       	breq	.+36     	; 0x114e <qtm_lib_start_acquisition+0x8e>
    112a:	61 ef       	ldi	r22, 0xF1	; 241
    112c:	77 e0       	ldi	r23, 0x07	; 7
    112e:	09 95       	icall
    1130:	c8 2f       	mov	r28, r24
    1132:	81 11       	cpse	r24, r1
    1134:	06 c0       	rjmp	.+12     	; 0x1142 <qtm_lib_start_acquisition+0x82>
    1136:	83 e0       	ldi	r24, 0x03	; 3
    1138:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    113c:	10 92 54 3e 	sts	0x3E54, r1	; 0x803e54 <current_process_id>
    1140:	03 c0       	rjmp	.+6      	; 0x1148 <qtm_lib_start_acquisition+0x88>
    1142:	82 e0       	ldi	r24, 0x02	; 2
    1144:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    1148:	1d 17       	cp	r17, r29
    114a:	20 f0       	brcs	.+8      	; 0x1154 <qtm_lib_start_acquisition+0x94>
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <qtm_lib_start_acquisition+0x90>
    114e:	c2 e0       	ldi	r28, 0x02	; 2
    1150:	82 e8       	ldi	r24, 0x82	; 130
    1152:	39 df       	rcall	.-398    	; 0xfc6 <qtm_error_handler>
    1154:	8c 2f       	mov	r24, r28
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	1f 91       	pop	r17
    115c:	08 95       	ret

0000115e <qtm_lib_acq_process>:
    115e:	e0 91 95 3e 	lds	r30, 0x3E95	; 0x803e95 <qtm>
    1162:	f0 91 96 3e 	lds	r31, 0x3E96	; 0x803e96 <qtm+0x1>
    1166:	05 84       	ldd	r0, Z+13	; 0x0d
    1168:	f6 85       	ldd	r31, Z+14	; 0x0e
    116a:	e0 2d       	mov	r30, r0
    116c:	09 94       	ijmp

0000116e <qtm_lib_post_process>:
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	1f 92       	push	r1
    1176:	cd b7       	in	r28, 0x3d	; 61
    1178:	de b7       	in	r29, 0x3e	; 62
    117a:	19 82       	std	Y+1, r1	; 0x01
    117c:	e0 91 95 3e 	lds	r30, 0x3E95	; 0x803e95 <qtm>
    1180:	f0 91 96 3e 	lds	r31, 0x3E96	; 0x803e96 <qtm+0x1>
    1184:	05 88       	ldd	r0, Z+21	; 0x15
    1186:	f6 89       	ldd	r31, Z+22	; 0x16
    1188:	e0 2d       	mov	r30, r0
    118a:	30 97       	sbiw	r30, 0x00	; 0
    118c:	49 f0       	breq	.+18     	; 0x11a0 <qtm_lib_post_process+0x32>
    118e:	82 e0       	ldi	r24, 0x02	; 2
    1190:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    1194:	ce 01       	movw	r24, r28
    1196:	01 96       	adiw	r24, 0x01	; 1
    1198:	09 95       	icall
    119a:	83 e0       	ldi	r24, 0x03	; 3
    119c:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    11a0:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    11a4:	81 11       	cpse	r24, r1
    11a6:	2c c0       	rjmp	.+88     	; 0x1200 <qtm_lib_post_process+0x92>
    11a8:	19 81       	ldd	r17, Y+1	; 0x01
    11aa:	11 11       	cpse	r17, r1
    11ac:	29 c0       	rjmp	.+82     	; 0x1200 <qtm_lib_post_process+0x92>
    11ae:	84 e0       	ldi	r24, 0x04	; 4
    11b0:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    11b4:	a0 91 95 3e 	lds	r26, 0x3E95	; 0x803e95 <qtm>
    11b8:	b0 91 96 3e 	lds	r27, 0x3E96	; 0x803e96 <qtm+0x1>
    11bc:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <current_process_id>
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	88 0f       	add	r24, r24
    11c4:	99 1f       	adc	r25, r25
    11c6:	13 96       	adiw	r26, 0x03	; 3
    11c8:	ed 91       	ld	r30, X+
    11ca:	fc 91       	ld	r31, X
    11cc:	14 97       	sbiw	r26, 0x04	; 4
    11ce:	e8 0f       	add	r30, r24
    11d0:	f9 1f       	adc	r31, r25
    11d2:	01 90       	ld	r0, Z+
    11d4:	f0 81       	ld	r31, Z
    11d6:	e0 2d       	mov	r30, r0
    11d8:	19 96       	adiw	r26, 0x09	; 9
    11da:	2d 91       	ld	r18, X+
    11dc:	3c 91       	ld	r19, X
    11de:	1a 97       	sbiw	r26, 0x0a	; 10
    11e0:	30 97       	sbiw	r30, 0x00	; 0
    11e2:	81 f0       	breq	.+32     	; 0x1204 <qtm_lib_post_process+0x96>
    11e4:	d9 01       	movw	r26, r18
    11e6:	a8 0f       	add	r26, r24
    11e8:	b9 1f       	adc	r27, r25
    11ea:	8d 91       	ld	r24, X+
    11ec:	9c 91       	ld	r25, X
    11ee:	09 95       	icall
    11f0:	81 11       	cpse	r24, r1
    11f2:	3d c0       	rjmp	.+122    	; 0x126e <qtm_lib_post_process+0x100>
    11f4:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <current_process_id>
    11f8:	8f 5f       	subi	r24, 0xFF	; 255
    11fa:	80 93 54 3e 	sts	0x3E54, r24	; 0x803e54 <current_process_id>
    11fe:	da cf       	rjmp	.-76     	; 0x11b4 <qtm_lib_post_process+0x46>
    1200:	10 e0       	ldi	r17, 0x00	; 0
    1202:	3c c0       	rjmp	.+120    	; 0x127c <qtm_lib_post_process+0x10e>
    1204:	10 92 54 3e 	sts	0x3E54, r1	; 0x803e54 <current_process_id>
    1208:	f9 01       	movw	r30, r18
    120a:	e1 0f       	add	r30, r17
    120c:	f1 1d       	adc	r31, r1
    120e:	e1 0f       	add	r30, r17
    1210:	f1 1d       	adc	r31, r1
    1212:	01 90       	ld	r0, Z+
    1214:	f0 81       	ld	r31, Z
    1216:	e0 2d       	mov	r30, r0
    1218:	30 97       	sbiw	r30, 0x00	; 0
    121a:	59 f0       	breq	.+22     	; 0x1232 <qtm_lib_post_process+0xc4>
    121c:	01 90       	ld	r0, Z+
    121e:	f0 81       	ld	r31, Z
    1220:	e0 2d       	mov	r30, r0
    1222:	80 81       	ld	r24, Z
    1224:	87 ff       	sbrs	r24, 7
    1226:	03 c0       	rjmp	.+6      	; 0x122e <qtm_lib_post_process+0xc0>
    1228:	9c 91       	ld	r25, X
    122a:	94 60       	ori	r25, 0x04	; 4
    122c:	9c 93       	st	X, r25
    122e:	1f 5f       	subi	r17, 0xFF	; 255
    1230:	eb cf       	rjmp	.-42     	; 0x1208 <qtm_lib_post_process+0x9a>
    1232:	10 93 54 3e 	sts	0x3E54, r17	; 0x803e54 <current_process_id>
    1236:	82 e0       	ldi	r24, 0x02	; 2
    1238:	80 93 55 3e 	sts	0x3E55, r24	; 0x803e55 <qtm_state>
    123c:	57 96       	adiw	r26, 0x17	; 23
    123e:	ed 91       	ld	r30, X+
    1240:	fc 91       	ld	r31, X
    1242:	58 97       	sbiw	r26, 0x18	; 24
    1244:	30 97       	sbiw	r30, 0x00	; 0
    1246:	11 f0       	breq	.+4      	; 0x124c <qtm_lib_post_process+0xde>
    1248:	09 95       	icall
    124a:	05 c0       	rjmp	.+10     	; 0x1256 <qtm_lib_post_process+0xe8>
    124c:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    1250:	8f 5f       	subi	r24, 0xFF	; 255
    1252:	80 93 53 3e 	sts	0x3E53, r24	; 0x803e53 <errors>
    1256:	10 e0       	ldi	r17, 0x00	; 0
    1258:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    125c:	88 23       	and	r24, r24
    125e:	71 f0       	breq	.+28     	; 0x127c <qtm_lib_post_process+0x10e>
    1260:	10 92 53 3e 	sts	0x3E53, r1	; 0x803e53 <errors>
    1264:	80 91 54 3e 	lds	r24, 0x3E54	; 0x803e54 <current_process_id>
    1268:	80 64       	ori	r24, 0x40	; 64
    126a:	ad de       	rcall	.-678    	; 0xfc6 <qtm_error_handler>
    126c:	07 c0       	rjmp	.+14     	; 0x127c <qtm_lib_post_process+0x10e>
    126e:	80 91 53 3e 	lds	r24, 0x3E53	; 0x803e53 <errors>
    1272:	8f 5f       	subi	r24, 0xFF	; 255
    1274:	80 93 53 3e 	sts	0x3E53, r24	; 0x803e53 <errors>
    1278:	13 e0       	ldi	r17, 0x03	; 3
    127a:	ee cf       	rjmp	.-36     	; 0x1258 <qtm_lib_post_process+0xea>
    127c:	81 2f       	mov	r24, r17
    127e:	0f 90       	pop	r0
    1280:	df 91       	pop	r29
    1282:	cf 91       	pop	r28
    1284:	1f 91       	pop	r17
    1286:	08 95       	ret

00001288 <select_next_channel_to_measure>:
    1288:	80 91 59 3e 	lds	r24, 0x3E59	; 0x803e59 <current_measure_channel>
    128c:	90 91 5a 3e 	lds	r25, 0x3E5A	; 0x803e5a <current_measure_channel+0x1>
    1290:	a0 91 97 3e 	lds	r26, 0x3E97	; 0x803e97 <qtm_acquisition_control_working_set_ptr>
    1294:	b0 91 98 3e 	lds	r27, 0x3E98	; 0x803e98 <qtm_acquisition_control_working_set_ptr+0x1>
    1298:	ed 91       	ld	r30, X+
    129a:	fc 91       	ld	r31, X
    129c:	11 97       	sbiw	r26, 0x01	; 1
    129e:	40 81       	ld	r20, Z
    12a0:	51 81       	ldd	r21, Z+1	; 0x01
    12a2:	25 e0       	ldi	r18, 0x05	; 5
    12a4:	28 9f       	mul	r18, r24
    12a6:	b0 01       	movw	r22, r0
    12a8:	29 9f       	mul	r18, r25
    12aa:	70 0d       	add	r23, r0
    12ac:	11 24       	eor	r1, r1
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	84 17       	cp	r24, r20
    12b4:	95 07       	cpc	r25, r21
    12b6:	a8 f4       	brcc	.+42     	; 0x12e2 <select_next_channel_to_measure+0x5a>
    12b8:	14 96       	adiw	r26, 0x04	; 4
    12ba:	ed 91       	ld	r30, X+
    12bc:	fc 91       	ld	r31, X
    12be:	15 97       	sbiw	r26, 0x05	; 5
    12c0:	e2 0f       	add	r30, r18
    12c2:	f3 1f       	adc	r31, r19
    12c4:	e6 0f       	add	r30, r22
    12c6:	f7 1f       	adc	r31, r23
    12c8:	e0 81       	ld	r30, Z
    12ca:	2b 5f       	subi	r18, 0xFB	; 251
    12cc:	3f 4f       	sbci	r19, 0xFF	; 255
    12ce:	e0 fd       	sbrc	r30, 0
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <select_next_channel_to_measure+0x4e>
    12d2:	01 96       	adiw	r24, 0x01	; 1
    12d4:	ee cf       	rjmp	.-36     	; 0x12b2 <select_next_channel_to_measure+0x2a>
    12d6:	80 93 59 3e 	sts	0x3E59, r24	; 0x803e59 <current_measure_channel>
    12da:	90 93 5a 3e 	sts	0x3E5A, r25	; 0x803e5a <current_measure_channel+0x1>
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	08 95       	ret
    12e2:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <current_measure_channel>
    12e6:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <current_measure_channel+0x1>
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	08 95       	ret

000012ee <qtm_measure_node>:
    12ee:	bc 01       	movw	r22, r24
    12f0:	e0 91 97 3e 	lds	r30, 0x3E97	; 0x803e97 <qtm_acquisition_control_working_set_ptr>
    12f4:	f0 91 98 3e 	lds	r31, 0x3E98	; 0x803e98 <qtm_acquisition_control_working_set_ptr+0x1>
    12f8:	86 e0       	ldi	r24, 0x06	; 6
    12fa:	86 9f       	mul	r24, r22
    12fc:	90 01       	movw	r18, r0
    12fe:	87 9f       	mul	r24, r23
    1300:	30 0d       	add	r19, r0
    1302:	11 24       	eor	r1, r1
    1304:	a2 81       	ldd	r26, Z+2	; 0x02
    1306:	b3 81       	ldd	r27, Z+3	; 0x03
    1308:	a2 0f       	add	r26, r18
    130a:	b3 1f       	adc	r27, r19
    130c:	11 96       	adiw	r26, 0x01	; 1
    130e:	8c 91       	ld	r24, X
    1310:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    1314:	a2 81       	ldd	r26, Z+2	; 0x02
    1316:	b3 81       	ldd	r27, Z+3	; 0x03
    1318:	a2 0f       	add	r26, r18
    131a:	b3 1f       	adc	r27, r19
    131c:	8c 91       	ld	r24, X
    131e:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    1322:	95 e0       	ldi	r25, 0x05	; 5
    1324:	96 9f       	mul	r25, r22
    1326:	a0 01       	movw	r20, r0
    1328:	97 9f       	mul	r25, r23
    132a:	50 0d       	add	r21, r0
    132c:	11 24       	eor	r1, r1
    132e:	a4 81       	ldd	r26, Z+4	; 0x04
    1330:	b5 81       	ldd	r27, Z+5	; 0x05
    1332:	a4 0f       	add	r26, r20
    1334:	b5 1f       	adc	r27, r21
    1336:	13 96       	adiw	r26, 0x03	; 3
    1338:	8c 91       	ld	r24, X
    133a:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    133e:	a4 81       	ldd	r26, Z+4	; 0x04
    1340:	b5 81       	ldd	r27, Z+5	; 0x05
    1342:	a4 0f       	add	r26, r20
    1344:	b5 1f       	adc	r27, r21
    1346:	14 96       	adiw	r26, 0x04	; 4
    1348:	8c 91       	ld	r24, X
    134a:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    134e:	a4 81       	ldd	r26, Z+4	; 0x04
    1350:	b5 81       	ldd	r27, Z+5	; 0x05
    1352:	a4 0f       	add	r26, r20
    1354:	b5 1f       	adc	r27, r21
    1356:	8c 91       	ld	r24, X
    1358:	81 fd       	sbrc	r24, 1
    135a:	9c 93       	st	X, r25
    135c:	84 81       	ldd	r24, Z+4	; 0x04
    135e:	95 81       	ldd	r25, Z+5	; 0x05
    1360:	dc 01       	movw	r26, r24
    1362:	a4 0f       	add	r26, r20
    1364:	b5 1f       	adc	r27, r21
    1366:	8c 91       	ld	r24, X
    1368:	8c 71       	andi	r24, 0x1C	; 28
    136a:	69 f4       	brne	.+26     	; 0x1386 <qtm_measure_node+0x98>
    136c:	a2 81       	ldd	r26, Z+2	; 0x02
    136e:	b3 81       	ldd	r27, Z+3	; 0x03
    1370:	a2 0f       	add	r26, r18
    1372:	b3 1f       	adc	r27, r19
    1374:	14 96       	adiw	r26, 0x04	; 4
    1376:	ac 91       	ld	r26, X
    1378:	a2 95       	swap	r26
    137a:	af 70       	andi	r26, 0x0F	; 15
    137c:	b0 e0       	ldi	r27, 0x00	; 0
    137e:	a4 56       	subi	r26, 0x64	; 100
    1380:	b6 46       	sbci	r27, 0x66	; 102
    1382:	8c 91       	ld	r24, X
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <qtm_measure_node+0x9a>
    1386:	8f e3       	ldi	r24, 0x3F	; 63
    1388:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    138c:	a2 81       	ldd	r26, Z+2	; 0x02
    138e:	b3 81       	ldd	r27, Z+3	; 0x03
    1390:	a2 0f       	add	r26, r18
    1392:	b3 1f       	adc	r27, r19
    1394:	12 96       	adiw	r26, 0x02	; 2
    1396:	8c 91       	ld	r24, X
    1398:	8b 31       	cpi	r24, 0x1B	; 27
    139a:	10 f4       	brcc	.+4      	; 0x13a0 <qtm_measure_node+0xb2>
    139c:	8c 5f       	subi	r24, 0xFC	; 252
    139e:	01 c0       	rjmp	.+2      	; 0x13a2 <qtm_measure_node+0xb4>
    13a0:	8f e1       	ldi	r24, 0x1F	; 31
    13a2:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    13a6:	a2 81       	ldd	r26, Z+2	; 0x02
    13a8:	b3 81       	ldd	r27, Z+3	; 0x03
    13aa:	a2 0f       	add	r26, r18
    13ac:	b3 1f       	adc	r27, r19
    13ae:	15 96       	adiw	r26, 0x05	; 5
    13b0:	8c 91       	ld	r24, X
    13b2:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    13b6:	a2 81       	ldd	r26, Z+2	; 0x02
    13b8:	b3 81       	ldd	r27, Z+3	; 0x03
    13ba:	a2 0f       	add	r26, r18
    13bc:	b3 1f       	adc	r27, r19
    13be:	13 96       	adiw	r26, 0x03	; 3
    13c0:	8c 91       	ld	r24, X
    13c2:	82 95       	swap	r24
    13c4:	8f 70       	andi	r24, 0x0F	; 15
    13c6:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    13ca:	82 81       	ldd	r24, Z+2	; 0x02
    13cc:	93 81       	ldd	r25, Z+3	; 0x03
    13ce:	fc 01       	movw	r30, r24
    13d0:	e2 0f       	add	r30, r18
    13d2:	f3 1f       	adc	r31, r19
    13d4:	83 81       	ldd	r24, Z+3	; 0x03
    13d6:	8f 70       	andi	r24, 0x0F	; 15
    13d8:	80 61       	ori	r24, 0x10	; 16
    13da:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    13de:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    13e2:	83 60       	ori	r24, 0x03	; 3
    13e4:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    13e8:	81 e8       	ldi	r24, 0x81	; 129
    13ea:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    13f4:	08 95       	ret

000013f6 <qtm_acquisition_process>:
    13f6:	3f 92       	push	r3
    13f8:	4f 92       	push	r4
    13fa:	5f 92       	push	r5
    13fc:	6f 92       	push	r6
    13fe:	7f 92       	push	r7
    1400:	8f 92       	push	r8
    1402:	9f 92       	push	r9
    1404:	af 92       	push	r10
    1406:	bf 92       	push	r11
    1408:	cf 92       	push	r12
    140a:	df 92       	push	r13
    140c:	ef 92       	push	r14
    140e:	ff 92       	push	r15
    1410:	0f 93       	push	r16
    1412:	1f 93       	push	r17
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	80 91 58 3e 	lds	r24, 0x3E58	; 0x803e58 <touch_seq_lib_state>
    141c:	88 23       	and	r24, r24
    141e:	09 f4       	brne	.+2      	; 0x1422 <qtm_acquisition_process+0x2c>
    1420:	48 c1       	rjmp	.+656    	; 0x16b2 <qtm_acquisition_process+0x2bc>
    1422:	a0 91 97 3e 	lds	r26, 0x3E97	; 0x803e97 <qtm_acquisition_control_working_set_ptr>
    1426:	b0 91 98 3e 	lds	r27, 0x3E98	; 0x803e98 <qtm_acquisition_control_working_set_ptr+0x1>
    142a:	c0 90 99 3e 	lds	r12, 0x3E99	; 0x803e99 <qtm_raw_data_measurements_ptr>
    142e:	d0 90 9a 3e 	lds	r13, 0x3E9A	; 0x803e9a <qtm_raw_data_measurements_ptr+0x1>
    1432:	00 e0       	ldi	r16, 0x00	; 0
    1434:	10 e0       	ldi	r17, 0x00	; 0
    1436:	60 e0       	ldi	r22, 0x00	; 0
    1438:	70 e0       	ldi	r23, 0x00	; 0
    143a:	e1 2c       	mov	r14, r1
    143c:	f1 2c       	mov	r15, r1
    143e:	80 e0       	ldi	r24, 0x00	; 0
    1440:	33 24       	eor	r3, r3
    1442:	33 94       	inc	r3
    1444:	d1 e8       	ldi	r29, 0x81	; 129
    1446:	4d 2e       	mov	r4, r29
    1448:	88 24       	eor	r8, r8
    144a:	8a 94       	dec	r8
    144c:	99 24       	eor	r9, r9
    144e:	93 94       	inc	r9
    1450:	6d 90       	ld	r6, X+
    1452:	7c 90       	ld	r7, X
    1454:	11 97       	sbiw	r26, 0x01	; 1
    1456:	f3 01       	movw	r30, r6
    1458:	20 81       	ld	r18, Z
    145a:	31 81       	ldd	r19, Z+1	; 0x01
    145c:	e2 16       	cp	r14, r18
    145e:	f3 06       	cpc	r15, r19
    1460:	08 f0       	brcs	.+2      	; 0x1464 <qtm_acquisition_process+0x6e>
    1462:	23 c1       	rjmp	.+582    	; 0x16aa <qtm_acquisition_process+0x2b4>
    1464:	e6 01       	movw	r28, r12
    1466:	29 91       	ld	r18, Y+
    1468:	39 91       	ld	r19, Y+
    146a:	6e 01       	movw	r12, r28
    146c:	14 96       	adiw	r26, 0x04	; 4
    146e:	ed 91       	ld	r30, X+
    1470:	fc 91       	ld	r31, X
    1472:	15 97       	sbiw	r26, 0x05	; 5
    1474:	e6 0f       	add	r30, r22
    1476:	f7 1f       	adc	r31, r23
    1478:	40 81       	ld	r20, Z
    147a:	4c 71       	andi	r20, 0x1C	; 28
    147c:	50 e0       	ldi	r21, 0x00	; 0
    147e:	56 95       	lsr	r21
    1480:	47 95       	ror	r20
    1482:	56 95       	lsr	r21
    1484:	47 95       	ror	r20
    1486:	41 15       	cp	r20, r1
    1488:	51 05       	cpc	r21, r1
    148a:	21 f0       	breq	.+8      	; 0x1494 <qtm_acquisition_process+0x9e>
    148c:	41 30       	cpi	r20, 0x01	; 1
    148e:	51 05       	cpc	r21, r1
    1490:	b9 f0       	breq	.+46     	; 0x14c0 <qtm_acquisition_process+0xca>
    1492:	02 c1       	rjmp	.+516    	; 0x1698 <qtm_acquisition_process+0x2a2>
    1494:	12 96       	adiw	r26, 0x02	; 2
    1496:	cd 91       	ld	r28, X+
    1498:	dc 91       	ld	r29, X
    149a:	13 97       	sbiw	r26, 0x03	; 3
    149c:	c0 0f       	add	r28, r16
    149e:	d1 1f       	adc	r29, r17
    14a0:	4c 81       	ldd	r20, Y+4	; 0x04
    14a2:	4f 70       	andi	r20, 0x0F	; 15
    14a4:	9d 81       	ldd	r25, Y+5	; 0x05
    14a6:	49 17       	cp	r20, r25
    14a8:	10 f4       	brcc	.+4      	; 0x14ae <qtm_acquisition_process+0xb8>
    14aa:	94 1b       	sub	r25, r20
    14ac:	01 c0       	rjmp	.+2      	; 0x14b0 <qtm_acquisition_process+0xba>
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <qtm_acquisition_process+0xc0>
    14b2:	36 95       	lsr	r19
    14b4:	27 95       	ror	r18
    14b6:	9a 95       	dec	r25
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <qtm_acquisition_process+0xbc>
    14ba:	21 83       	std	Z+1, r18	; 0x01
    14bc:	32 83       	std	Z+2, r19	; 0x02
    14be:	ed c0       	rjmp	.+474    	; 0x169a <qtm_acquisition_process+0x2a4>
    14c0:	12 96       	adiw	r26, 0x02	; 2
    14c2:	4d 91       	ld	r20, X+
    14c4:	5c 91       	ld	r21, X
    14c6:	13 97       	sbiw	r26, 0x03	; 3
    14c8:	40 0f       	add	r20, r16
    14ca:	51 1f       	adc	r21, r17
    14cc:	ea 01       	movw	r28, r20
    14ce:	0d 80       	ldd	r0, Y+5	; 0x05
    14d0:	02 c0       	rjmp	.+4      	; 0x14d6 <qtm_acquisition_process+0xe0>
    14d2:	36 95       	lsr	r19
    14d4:	27 95       	ror	r18
    14d6:	0a 94       	dec	r0
    14d8:	e2 f7       	brpl	.-8      	; 0x14d2 <qtm_acquisition_process+0xdc>
    14da:	21 83       	std	Z+1, r18	; 0x01
    14dc:	32 83       	std	Z+2, r19	; 0x02
    14de:	a3 80       	ldd	r10, Z+3	; 0x03
    14e0:	b4 80       	ldd	r11, Z+4	; 0x04
    14e2:	21 15       	cp	r18, r1
    14e4:	d2 e0       	ldi	r29, 0x02	; 2
    14e6:	3d 07       	cpc	r19, r29
    14e8:	20 f0       	brcs	.+8      	; 0x14f2 <qtm_acquisition_process+0xfc>
    14ea:	2f 5f       	subi	r18, 0xFF	; 255
    14ec:	31 40       	sbci	r19, 0x01	; 1
    14ee:	91 e0       	ldi	r25, 0x01	; 1
    14f0:	05 c0       	rjmp	.+10     	; 0x14fc <qtm_acquisition_process+0x106>
    14f2:	a4 01       	movw	r20, r8
    14f4:	42 1b       	sub	r20, r18
    14f6:	53 0b       	sbc	r21, r19
    14f8:	9a 01       	movw	r18, r20
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	e3 01       	movw	r28, r6
    14fe:	5a 80       	ldd	r5, Y+2	; 0x02
    1500:	d0 e4       	ldi	r29, 0x40	; 64
    1502:	5d 12       	cpse	r5, r29
    1504:	05 c0       	rjmp	.+10     	; 0x1510 <qtm_acquisition_process+0x11a>
    1506:	36 95       	lsr	r19
    1508:	27 95       	ror	r18
    150a:	99 23       	and	r25, r25
    150c:	19 f0       	breq	.+6      	; 0x1514 <qtm_acquisition_process+0x11e>
    150e:	09 c0       	rjmp	.+18     	; 0x1522 <qtm_acquisition_process+0x12c>
    1510:	99 23       	and	r25, r25
    1512:	39 f0       	breq	.+14     	; 0x1522 <qtm_acquisition_process+0x12c>
    1514:	4f ef       	ldi	r20, 0xFF	; 255
    1516:	a4 16       	cp	r10, r20
    1518:	b4 06       	cpc	r11, r20
    151a:	31 f4       	brne	.+12     	; 0x1528 <qtm_acquisition_process+0x132>
    151c:	40 82       	st	Z, r4
    151e:	8e e0       	ldi	r24, 0x0E	; 14
    1520:	07 c0       	rjmp	.+14     	; 0x1530 <qtm_acquisition_process+0x13a>
    1522:	77 24       	eor	r7, r7
    1524:	73 94       	inc	r7
    1526:	01 c0       	rjmp	.+2      	; 0x152a <qtm_acquisition_process+0x134>
    1528:	71 2c       	mov	r7, r1
    152a:	2a 30       	cpi	r18, 0x0A	; 10
    152c:	31 05       	cpc	r19, r1
    152e:	90 f4       	brcc	.+36     	; 0x1554 <qtm_acquisition_process+0x15e>
    1530:	14 96       	adiw	r26, 0x04	; 4
    1532:	ed 91       	ld	r30, X+
    1534:	fc 91       	ld	r31, X
    1536:	15 97       	sbiw	r26, 0x05	; 5
    1538:	e6 0f       	add	r30, r22
    153a:	f7 1f       	adc	r31, r23
    153c:	90 81       	ld	r25, Z
    153e:	97 ff       	sbrs	r25, 7
    1540:	30 82       	st	Z, r3
    1542:	14 96       	adiw	r26, 0x04	; 4
    1544:	ed 91       	ld	r30, X+
    1546:	fc 91       	ld	r31, X
    1548:	15 97       	sbiw	r26, 0x05	; 5
    154a:	e6 0f       	add	r30, r22
    154c:	f7 1f       	adc	r31, r23
    154e:	a3 82       	std	Z+3, r10	; 0x03
    1550:	b4 82       	std	Z+4, r11	; 0x04
    1552:	a3 c0       	rjmp	.+326    	; 0x169a <qtm_acquisition_process+0x2a4>
    1554:	e5 01       	movw	r28, r10
    1556:	cd 2f       	mov	r28, r29
    1558:	dd 27       	eor	r29, r29
    155a:	c2 95       	swap	r28
    155c:	cf 70       	andi	r28, 0x0F	; 15
    155e:	9c 2f       	mov	r25, r28
    1560:	a5 01       	movw	r20, r10
    1562:	44 27       	eor	r20, r20
    1564:	5f 70       	andi	r21, 0x0F	; 15
    1566:	65 2e       	mov	r6, r21
    1568:	a5 01       	movw	r20, r10
    156a:	40 7f       	andi	r20, 0xF0	; 240
    156c:	55 27       	eor	r21, r21
    156e:	52 95       	swap	r21
    1570:	42 95       	swap	r20
    1572:	4f 70       	andi	r20, 0x0F	; 15
    1574:	45 27       	eor	r20, r21
    1576:	5f 70       	andi	r21, 0x0F	; 15
    1578:	45 27       	eor	r20, r21
    157a:	5a 2d       	mov	r21, r10
    157c:	5f 70       	andi	r21, 0x0F	; 15
    157e:	a5 2e       	mov	r10, r21
    1580:	c4 30       	cpi	r28, 0x04	; 4
    1582:	30 f0       	brcs	.+12     	; 0x1590 <qtm_acquisition_process+0x19a>
    1584:	93 70       	andi	r25, 0x03	; 3
    1586:	d6 95       	lsr	r29
    1588:	c7 95       	ror	r28
    158a:	d6 95       	lsr	r29
    158c:	c7 95       	ror	r28
    158e:	9c 0f       	add	r25, r28
    1590:	71 10       	cpse	r7, r1
    1592:	3c c0       	rjmp	.+120    	; 0x160c <qtm_acquisition_process+0x216>
    1594:	50 e8       	ldi	r21, 0x80	; 128
    1596:	55 0d       	add	r21, r5
    1598:	52 30       	cpi	r21, 0x02	; 2
    159a:	10 f4       	brcc	.+4      	; 0x15a0 <qtm_acquisition_process+0x1aa>
    159c:	56 e0       	ldi	r21, 0x06	; 6
    159e:	07 c0       	rjmp	.+14     	; 0x15ae <qtm_acquisition_process+0x1b8>
    15a0:	53 e0       	ldi	r21, 0x03	; 3
    15a2:	05 c0       	rjmp	.+10     	; 0x15ae <qtm_acquisition_process+0x1b8>
    15a4:	95 17       	cp	r25, r21
    15a6:	68 f4       	brcc	.+26     	; 0x15c2 <qtm_acquisition_process+0x1cc>
    15a8:	9f 5f       	subi	r25, 0xFF	; 255
    15aa:	2f 5c       	subi	r18, 0xCF	; 207
    15ac:	31 09       	sbc	r19, r1
    15ae:	20 3d       	cpi	r18, 0xD0	; 208
    15b0:	31 05       	cpc	r19, r1
    15b2:	c0 f7       	brcc	.-16     	; 0x15a4 <qtm_acquisition_process+0x1ae>
    15b4:	06 c0       	rjmp	.+12     	; 0x15c2 <qtm_acquisition_process+0x1cc>
    15b6:	cf e0       	ldi	r28, 0x0F	; 15
    15b8:	6c 16       	cp	r6, r28
    15ba:	49 f0       	breq	.+18     	; 0x15ce <qtm_acquisition_process+0x1d8>
    15bc:	63 94       	inc	r6
    15be:	25 51       	subi	r18, 0x15	; 21
    15c0:	31 09       	sbc	r19, r1
    15c2:	26 31       	cpi	r18, 0x16	; 22
    15c4:	31 05       	cpc	r19, r1
    15c6:	b8 f7       	brcc	.-18     	; 0x15b6 <qtm_acquisition_process+0x1c0>
    15c8:	df e0       	ldi	r29, 0x0F	; 15
    15ca:	6d 12       	cpse	r6, r29
    15cc:	0e c0       	rjmp	.+28     	; 0x15ea <qtm_acquisition_process+0x1f4>
    15ce:	95 17       	cp	r25, r21
    15d0:	20 f4       	brcc	.+8      	; 0x15da <qtm_acquisition_process+0x1e4>
    15d2:	9f 5f       	subi	r25, 0xFF	; 255
    15d4:	d5 e0       	ldi	r29, 0x05	; 5
    15d6:	6d 2e       	mov	r6, r29
    15d8:	08 c0       	rjmp	.+16     	; 0x15ea <qtm_acquisition_process+0x1f4>
    15da:	cf e0       	ldi	r28, 0x0F	; 15
    15dc:	6c 2e       	mov	r6, r28
    15de:	05 c0       	rjmp	.+10     	; 0x15ea <qtm_acquisition_process+0x1f4>
    15e0:	4f 30       	cpi	r20, 0x0F	; 15
    15e2:	49 f0       	breq	.+18     	; 0x15f6 <qtm_acquisition_process+0x200>
    15e4:	4f 5f       	subi	r20, 0xFF	; 255
    15e6:	22 50       	subi	r18, 0x02	; 2
    15e8:	31 09       	sbc	r19, r1
    15ea:	23 30       	cpi	r18, 0x03	; 3
    15ec:	31 05       	cpc	r19, r1
    15ee:	c0 f7       	brcc	.-16     	; 0x15e0 <qtm_acquisition_process+0x1ea>
    15f0:	4f 30       	cpi	r20, 0x0F	; 15
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <qtm_acquisition_process+0x200>
    15f4:	65 c0       	rjmp	.+202    	; 0x16c0 <qtm_acquisition_process+0x2ca>
    15f6:	4f e0       	ldi	r20, 0x0F	; 15
    15f8:	64 16       	cp	r6, r20
    15fa:	81 f1       	breq	.+96     	; 0x165c <qtm_acquisition_process+0x266>
    15fc:	63 94       	inc	r6
    15fe:	45 e0       	ldi	r20, 0x05	; 5
    1600:	5f c0       	rjmp	.+190    	; 0x16c0 <qtm_acquisition_process+0x2ca>
    1602:	99 23       	and	r25, r25
    1604:	61 f0       	breq	.+24     	; 0x161e <qtm_acquisition_process+0x228>
    1606:	91 50       	subi	r25, 0x01	; 1
    1608:	2f 5c       	subi	r18, 0xCF	; 207
    160a:	31 09       	sbc	r19, r1
    160c:	20 3d       	cpi	r18, 0xD0	; 208
    160e:	31 05       	cpc	r19, r1
    1610:	c0 f7       	brcc	.-16     	; 0x1602 <qtm_acquisition_process+0x20c>
    1612:	05 c0       	rjmp	.+10     	; 0x161e <qtm_acquisition_process+0x228>
    1614:	66 20       	and	r6, r6
    1616:	41 f0       	breq	.+16     	; 0x1628 <qtm_acquisition_process+0x232>
    1618:	6a 94       	dec	r6
    161a:	25 51       	subi	r18, 0x15	; 21
    161c:	31 09       	sbc	r19, r1
    161e:	26 31       	cpi	r18, 0x16	; 22
    1620:	31 05       	cpc	r19, r1
    1622:	c0 f7       	brcc	.-16     	; 0x1614 <qtm_acquisition_process+0x21e>
    1624:	61 10       	cpse	r6, r1
    1626:	0d c0       	rjmp	.+26     	; 0x1642 <qtm_acquisition_process+0x24c>
    1628:	99 23       	and	r25, r25
    162a:	21 f0       	breq	.+8      	; 0x1634 <qtm_acquisition_process+0x23e>
    162c:	91 50       	subi	r25, 0x01	; 1
    162e:	5a e0       	ldi	r21, 0x0A	; 10
    1630:	65 2e       	mov	r6, r21
    1632:	07 c0       	rjmp	.+14     	; 0x1642 <qtm_acquisition_process+0x24c>
    1634:	61 2c       	mov	r6, r1
    1636:	05 c0       	rjmp	.+10     	; 0x1642 <qtm_acquisition_process+0x24c>
    1638:	44 23       	and	r20, r20
    163a:	41 f0       	breq	.+16     	; 0x164c <qtm_acquisition_process+0x256>
    163c:	41 50       	subi	r20, 0x01	; 1
    163e:	22 50       	subi	r18, 0x02	; 2
    1640:	31 09       	sbc	r19, r1
    1642:	23 30       	cpi	r18, 0x03	; 3
    1644:	31 05       	cpc	r19, r1
    1646:	c0 f7       	brcc	.-16     	; 0x1638 <qtm_acquisition_process+0x242>
    1648:	41 11       	cpse	r20, r1
    164a:	10 c0       	rjmp	.+32     	; 0x166c <qtm_acquisition_process+0x276>
    164c:	66 20       	and	r6, r6
    164e:	e9 f1       	breq	.+122    	; 0x16ca <qtm_acquisition_process+0x2d4>
    1650:	6a 94       	dec	r6
    1652:	4a e0       	ldi	r20, 0x0A	; 10
    1654:	23 30       	cpi	r18, 0x03	; 3
    1656:	31 05       	cpc	r19, r1
    1658:	c8 f6       	brcc	.-78     	; 0x160c <qtm_acquisition_process+0x216>
    165a:	08 c0       	rjmp	.+16     	; 0x166c <qtm_acquisition_process+0x276>
    165c:	59 13       	cpse	r21, r25
    165e:	2f c0       	rjmp	.+94     	; 0x16be <qtm_acquisition_process+0x2c8>
    1660:	23 30       	cpi	r18, 0x03	; 3
    1662:	31 05       	cpc	r19, r1
    1664:	40 f1       	brcs	.+80     	; 0x16b6 <qtm_acquisition_process+0x2c0>
    1666:	4f e0       	ldi	r20, 0x0F	; 15
    1668:	a4 2e       	mov	r10, r20
    166a:	4f e0       	ldi	r20, 0x0F	; 15
    166c:	94 30       	cpi	r25, 0x04	; 4
    166e:	18 f0       	brcs	.+6      	; 0x1676 <qtm_acquisition_process+0x280>
    1670:	99 0f       	add	r25, r25
    1672:	99 0f       	add	r25, r25
    1674:	99 50       	subi	r25, 0x09	; 9
    1676:	c0 e1       	ldi	r28, 0x10	; 16
    1678:	4c 9f       	mul	r20, r28
    167a:	a0 01       	movw	r20, r0
    167c:	11 24       	eor	r1, r1
    167e:	56 29       	or	r21, r6
    1680:	4a 29       	or	r20, r10
    1682:	c9 2f       	mov	r28, r25
    1684:	d0 e0       	ldi	r29, 0x00	; 0
    1686:	dc 2f       	mov	r29, r28
    1688:	cc 27       	eor	r28, r28
    168a:	d2 95       	swap	r29
    168c:	d0 7f       	andi	r29, 0xF0	; 240
    168e:	4c 2b       	or	r20, r28
    1690:	5d 2b       	or	r21, r29
    1692:	43 83       	std	Z+3, r20	; 0x03
    1694:	54 83       	std	Z+4, r21	; 0x04
    1696:	01 c0       	rjmp	.+2      	; 0x169a <qtm_acquisition_process+0x2a4>
    1698:	ff cf       	rjmp	.-2      	; 0x1698 <qtm_acquisition_process+0x2a2>
    169a:	df ef       	ldi	r29, 0xFF	; 255
    169c:	ed 1a       	sub	r14, r29
    169e:	fd 0a       	sbc	r15, r29
    16a0:	6b 5f       	subi	r22, 0xFB	; 251
    16a2:	7f 4f       	sbci	r23, 0xFF	; 255
    16a4:	0a 5f       	subi	r16, 0xFA	; 250
    16a6:	1f 4f       	sbci	r17, 0xFF	; 255
    16a8:	d3 ce       	rjmp	.-602    	; 0x1450 <qtm_acquisition_process+0x5a>
    16aa:	92 e0       	ldi	r25, 0x02	; 2
    16ac:	90 93 58 3e 	sts	0x3E58, r25	; 0x803e58 <touch_seq_lib_state>
    16b0:	0e c0       	rjmp	.+28     	; 0x16ce <qtm_acquisition_process+0x2d8>
    16b2:	83 e0       	ldi	r24, 0x03	; 3
    16b4:	0c c0       	rjmp	.+24     	; 0x16ce <qtm_acquisition_process+0x2d8>
    16b6:	4f e0       	ldi	r20, 0x0F	; 15
    16b8:	2f e0       	ldi	r18, 0x0F	; 15
    16ba:	a2 2e       	mov	r10, r18
    16bc:	d7 cf       	rjmp	.-82     	; 0x166c <qtm_acquisition_process+0x276>
    16be:	4f e0       	ldi	r20, 0x0F	; 15
    16c0:	23 30       	cpi	r18, 0x03	; 3
    16c2:	31 05       	cpc	r19, r1
    16c4:	08 f0       	brcs	.+2      	; 0x16c8 <qtm_acquisition_process+0x2d2>
    16c6:	73 cf       	rjmp	.-282    	; 0x15ae <qtm_acquisition_process+0x1b8>
    16c8:	d1 cf       	rjmp	.-94     	; 0x166c <qtm_acquisition_process+0x276>
    16ca:	40 e0       	ldi	r20, 0x00	; 0
    16cc:	cf cf       	rjmp	.-98     	; 0x166c <qtm_acquisition_process+0x276>
    16ce:	df 91       	pop	r29
    16d0:	cf 91       	pop	r28
    16d2:	1f 91       	pop	r17
    16d4:	0f 91       	pop	r16
    16d6:	ff 90       	pop	r15
    16d8:	ef 90       	pop	r14
    16da:	df 90       	pop	r13
    16dc:	cf 90       	pop	r12
    16de:	bf 90       	pop	r11
    16e0:	af 90       	pop	r10
    16e2:	9f 90       	pop	r9
    16e4:	8f 90       	pop	r8
    16e6:	7f 90       	pop	r7
    16e8:	6f 90       	pop	r6
    16ea:	5f 90       	pop	r5
    16ec:	4f 90       	pop	r4
    16ee:	3f 90       	pop	r3
    16f0:	08 95       	ret

000016f2 <qtm_ptc_init_acquisition_module>:
    16f2:	cf 93       	push	r28
    16f4:	dc 01       	movw	r26, r24
    16f6:	89 2b       	or	r24, r25
    16f8:	79 f1       	breq	.+94     	; 0x1758 <qtm_ptc_init_acquisition_module+0x66>
    16fa:	ed 91       	ld	r30, X+
    16fc:	fc 91       	ld	r31, X
    16fe:	11 97       	sbiw	r26, 0x01	; 1
    1700:	60 81       	ld	r22, Z
    1702:	71 81       	ldd	r23, Z+1	; 0x01
    1704:	40 e0       	ldi	r20, 0x00	; 0
    1706:	50 e0       	ldi	r21, 0x00	; 0
    1708:	20 e0       	ldi	r18, 0x00	; 0
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	26 17       	cp	r18, r22
    1710:	37 07       	cpc	r19, r23
    1712:	79 f0       	breq	.+30     	; 0x1732 <qtm_ptc_init_acquisition_module+0x40>
    1714:	12 96       	adiw	r26, 0x02	; 2
    1716:	ed 91       	ld	r30, X+
    1718:	fc 91       	ld	r31, X
    171a:	13 97       	sbiw	r26, 0x03	; 3
    171c:	e4 0f       	add	r30, r20
    171e:	f5 1f       	adc	r31, r21
    1720:	c0 81       	ld	r28, Z
    1722:	81 81       	ldd	r24, Z+1	; 0x01
    1724:	8c 2b       	or	r24, r28
    1726:	98 2b       	or	r25, r24
    1728:	2f 5f       	subi	r18, 0xFF	; 255
    172a:	3f 4f       	sbci	r19, 0xFF	; 255
    172c:	4a 5f       	subi	r20, 0xFA	; 250
    172e:	5f 4f       	sbci	r21, 0xFF	; 255
    1730:	ee cf       	rjmp	.-36     	; 0x170e <qtm_ptc_init_acquisition_module+0x1c>
    1732:	99 23       	and	r25, r25
    1734:	99 f0       	breq	.+38     	; 0x175c <qtm_ptc_init_acquisition_module+0x6a>
    1736:	80 91 58 3e 	lds	r24, 0x3E58	; 0x803e58 <touch_seq_lib_state>
    173a:	81 11       	cpse	r24, r1
    173c:	06 c0       	rjmp	.+12     	; 0x174a <qtm_ptc_init_acquisition_module+0x58>
    173e:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	80 93 58 3e 	sts	0x3E58, r24	; 0x803e58 <touch_seq_lib_state>
    1748:	05 c0       	rjmp	.+10     	; 0x1754 <qtm_ptc_init_acquisition_module+0x62>
    174a:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    174e:	98 2b       	or	r25, r24
    1750:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	03 c0       	rjmp	.+6      	; 0x175e <qtm_ptc_init_acquisition_module+0x6c>
    1758:	8b e0       	ldi	r24, 0x0B	; 11
    175a:	01 c0       	rjmp	.+2      	; 0x175e <qtm_ptc_init_acquisition_module+0x6c>
    175c:	82 e0       	ldi	r24, 0x02	; 2
    175e:	cf 91       	pop	r28
    1760:	08 95       	ret

00001762 <qtm_ptc_qtlib_assign_signal_memory>:
    1762:	00 97       	sbiw	r24, 0x00	; 0
    1764:	31 f0       	breq	.+12     	; 0x1772 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1766:	80 93 99 3e 	sts	0x3E99, r24	; 0x803e99 <qtm_raw_data_measurements_ptr>
    176a:	90 93 9a 3e 	sts	0x3E9A, r25	; 0x803e9a <qtm_raw_data_measurements_ptr+0x1>
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	08 95       	ret
    1772:	8b e0       	ldi	r24, 0x0B	; 11
    1774:	08 95       	ret

00001776 <qtm_ptc_start_measurement_seq>:
    1776:	61 15       	cp	r22, r1
    1778:	71 05       	cpc	r23, r1
    177a:	91 f1       	breq	.+100    	; 0x17e0 <qtm_ptc_start_measurement_seq+0x6a>
    177c:	00 97       	sbiw	r24, 0x00	; 0
    177e:	81 f1       	breq	.+96     	; 0x17e0 <qtm_ptc_start_measurement_seq+0x6a>
    1780:	20 91 58 3e 	lds	r18, 0x3E58	; 0x803e58 <touch_seq_lib_state>
    1784:	22 23       	and	r18, r18
    1786:	71 f1       	breq	.+92     	; 0x17e4 <qtm_ptc_start_measurement_seq+0x6e>
    1788:	24 30       	cpi	r18, 0x04	; 4
    178a:	71 f1       	breq	.+92     	; 0x17e8 <qtm_ptc_start_measurement_seq+0x72>
    178c:	80 93 97 3e 	sts	0x3E97, r24	; 0x803e97 <qtm_acquisition_control_working_set_ptr>
    1790:	90 93 98 3e 	sts	0x3E98, r25	; 0x803e98 <qtm_acquisition_control_working_set_ptr+0x1>
    1794:	60 93 56 3e 	sts	0x3E56, r22	; 0x803e56 <ptc_seq_measure_complete_pointer>
    1798:	70 93 57 3e 	sts	0x3E57, r23	; 0x803e57 <ptc_seq_measure_complete_pointer+0x1>
    179c:	20 ec       	ldi	r18, 0xC0	; 192
    179e:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17a2:	dc 01       	movw	r26, r24
    17a4:	ed 91       	ld	r30, X+
    17a6:	fc 91       	ld	r31, X
    17a8:	22 81       	ldd	r18, Z+2	; 0x02
    17aa:	20 34       	cpi	r18, 0x40	; 64
    17ac:	21 f4       	brne	.+8      	; 0x17b6 <qtm_ptc_start_measurement_seq+0x40>
    17ae:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17b2:	20 62       	ori	r18, 0x20	; 32
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <qtm_ptc_start_measurement_seq+0x4a>
    17b6:	20 38       	cpi	r18, 0x80	; 128
    17b8:	41 f4       	brne	.+16     	; 0x17ca <qtm_ptc_start_measurement_seq+0x54>
    17ba:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17be:	28 62       	ori	r18, 0x28	; 40
    17c0:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17c4:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    17c8:	13 c0       	rjmp	.+38     	; 0x17f0 <qtm_ptc_start_measurement_seq+0x7a>
    17ca:	21 38       	cpi	r18, 0x81	; 129
    17cc:	79 f4       	brne	.+30     	; 0x17ec <qtm_ptc_start_measurement_seq+0x76>
    17ce:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17d2:	28 62       	ori	r18, 0x28	; 40
    17d4:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    17d8:	26 e8       	ldi	r18, 0x86	; 134
    17da:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    17de:	08 c0       	rjmp	.+16     	; 0x17f0 <qtm_ptc_start_measurement_seq+0x7a>
    17e0:	8b e0       	ldi	r24, 0x0B	; 11
    17e2:	08 95       	ret
    17e4:	83 e0       	ldi	r24, 0x03	; 3
    17e6:	08 95       	ret
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	08 95       	ret
    17ec:	82 e0       	ldi	r24, 0x02	; 2
    17ee:	08 95       	ret
    17f0:	dc 01       	movw	r26, r24
    17f2:	ed 91       	ld	r30, X+
    17f4:	fc 91       	ld	r31, X
    17f6:	84 81       	ldd	r24, Z+4	; 0x04
    17f8:	80 31       	cpi	r24, 0x10	; 16
    17fa:	08 f0       	brcs	.+2      	; 0x17fe <qtm_ptc_start_measurement_seq+0x88>
    17fc:	80 e1       	ldi	r24, 0x10	; 16
    17fe:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    1808:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    180c:	10 92 59 3e 	sts	0x3E59, r1	; 0x803e59 <current_measure_channel>
    1810:	10 92 5a 3e 	sts	0x3E5A, r1	; 0x803e5a <current_measure_channel+0x1>
    1814:	39 dd       	rcall	.-1422   	; 0x1288 <select_next_channel_to_measure>
    1816:	81 11       	cpse	r24, r1
    1818:	0a c0       	rjmp	.+20     	; 0x182e <qtm_ptc_start_measurement_seq+0xb8>
    181a:	84 e0       	ldi	r24, 0x04	; 4
    181c:	80 93 58 3e 	sts	0x3E58, r24	; 0x803e58 <touch_seq_lib_state>
    1820:	80 91 59 3e 	lds	r24, 0x3E59	; 0x803e59 <current_measure_channel>
    1824:	90 91 5a 3e 	lds	r25, 0x3E5A	; 0x803e5a <current_measure_channel+0x1>
    1828:	62 dd       	rcall	.-1340   	; 0x12ee <qtm_measure_node>
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	08 95       	ret
    182e:	82 e0       	ldi	r24, 0x02	; 2
    1830:	80 93 58 3e 	sts	0x3E58, r24	; 0x803e58 <touch_seq_lib_state>
    1834:	08 95       	ret

00001836 <qtm_enable_sensor_node>:
    1836:	00 97       	sbiw	r24, 0x00	; 0
    1838:	c9 f0       	breq	.+50     	; 0x186c <qtm_enable_sensor_node+0x36>
    183a:	dc 01       	movw	r26, r24
    183c:	ed 91       	ld	r30, X+
    183e:	fc 91       	ld	r31, X
    1840:	11 97       	sbiw	r26, 0x01	; 1
    1842:	20 81       	ld	r18, Z
    1844:	31 81       	ldd	r19, Z+1	; 0x01
    1846:	26 17       	cp	r18, r22
    1848:	37 07       	cpc	r19, r23
    184a:	90 f0       	brcs	.+36     	; 0x1870 <qtm_enable_sensor_node+0x3a>
    184c:	45 e0       	ldi	r20, 0x05	; 5
    184e:	46 9f       	mul	r20, r22
    1850:	90 01       	movw	r18, r0
    1852:	47 9f       	mul	r20, r23
    1854:	30 0d       	add	r19, r0
    1856:	11 24       	eor	r1, r1
    1858:	14 96       	adiw	r26, 0x04	; 4
    185a:	ed 91       	ld	r30, X+
    185c:	fc 91       	ld	r31, X
    185e:	15 97       	sbiw	r26, 0x05	; 5
    1860:	e2 0f       	add	r30, r18
    1862:	f3 1f       	adc	r31, r19
    1864:	81 e0       	ldi	r24, 0x01	; 1
    1866:	80 83       	st	Z, r24
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	08 95       	ret
    186c:	8b e0       	ldi	r24, 0x0B	; 11
    186e:	08 95       	ret
    1870:	82 e0       	ldi	r24, 0x02	; 2
    1872:	08 95       	ret

00001874 <qtm_calibrate_sensor_node>:
    1874:	fc 01       	movw	r30, r24
    1876:	89 2b       	or	r24, r25
    1878:	d1 f1       	breq	.+116    	; 0x18ee <qtm_calibrate_sensor_node+0x7a>
    187a:	a0 81       	ld	r26, Z
    187c:	b1 81       	ldd	r27, Z+1	; 0x01
    187e:	8d 91       	ld	r24, X+
    1880:	9c 91       	ld	r25, X
    1882:	11 97       	sbiw	r26, 0x01	; 1
    1884:	86 17       	cp	r24, r22
    1886:	97 07       	cpc	r25, r23
    1888:	a0 f1       	brcs	.+104    	; 0x18f2 <qtm_calibrate_sensor_node+0x7e>
    188a:	12 96       	adiw	r26, 0x02	; 2
    188c:	9c 91       	ld	r25, X
    188e:	04 80       	ldd	r0, Z+4	; 0x04
    1890:	f5 81       	ldd	r31, Z+5	; 0x05
    1892:	e0 2d       	mov	r30, r0
    1894:	90 34       	cpi	r25, 0x40	; 64
    1896:	59 f4       	brne	.+22     	; 0x18ae <qtm_calibrate_sensor_node+0x3a>
    1898:	85 e0       	ldi	r24, 0x05	; 5
    189a:	86 9f       	mul	r24, r22
    189c:	d0 01       	movw	r26, r0
    189e:	87 9f       	mul	r24, r23
    18a0:	b0 0d       	add	r27, r0
    18a2:	11 24       	eor	r1, r1
    18a4:	ae 0f       	add	r26, r30
    18a6:	bf 1f       	adc	r27, r31
    18a8:	84 e3       	ldi	r24, 0x34	; 52
    18aa:	92 e0       	ldi	r25, 0x02	; 2
    18ac:	0d c0       	rjmp	.+26     	; 0x18c8 <qtm_calibrate_sensor_node+0x54>
    18ae:	90 58       	subi	r25, 0x80	; 128
    18b0:	92 30       	cpi	r25, 0x02	; 2
    18b2:	80 f4       	brcc	.+32     	; 0x18d4 <qtm_calibrate_sensor_node+0x60>
    18b4:	85 e0       	ldi	r24, 0x05	; 5
    18b6:	86 9f       	mul	r24, r22
    18b8:	d0 01       	movw	r26, r0
    18ba:	87 9f       	mul	r24, r23
    18bc:	b0 0d       	add	r27, r0
    18be:	11 24       	eor	r1, r1
    18c0:	ae 0f       	add	r26, r30
    18c2:	bf 1f       	adc	r27, r31
    18c4:	87 e6       	ldi	r24, 0x67	; 103
    18c6:	95 e0       	ldi	r25, 0x05	; 5
    18c8:	13 96       	adiw	r26, 0x03	; 3
    18ca:	8d 93       	st	X+, r24
    18cc:	9c 93       	st	X, r25
    18ce:	14 97       	sbiw	r26, 0x04	; 4
    18d0:	80 e0       	ldi	r24, 0x00	; 0
    18d2:	01 c0       	rjmp	.+2      	; 0x18d6 <qtm_calibrate_sensor_node+0x62>
    18d4:	82 e0       	ldi	r24, 0x02	; 2
    18d6:	95 e0       	ldi	r25, 0x05	; 5
    18d8:	96 9f       	mul	r25, r22
    18da:	90 01       	movw	r18, r0
    18dc:	97 9f       	mul	r25, r23
    18de:	30 0d       	add	r19, r0
    18e0:	11 24       	eor	r1, r1
    18e2:	e2 0f       	add	r30, r18
    18e4:	f3 1f       	adc	r31, r19
    18e6:	90 81       	ld	r25, Z
    18e8:	92 60       	ori	r25, 0x02	; 2
    18ea:	90 83       	st	Z, r25
    18ec:	08 95       	ret
    18ee:	8b e0       	ldi	r24, 0x0B	; 11
    18f0:	08 95       	ret
    18f2:	82 e0       	ldi	r24, 0x02	; 2
    18f4:	08 95       	ret

000018f6 <qtm_t81x_ptc_handler_eoc>:
    18f6:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    18fa:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    18fe:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    1902:	80 91 59 3e 	lds	r24, 0x3E59	; 0x803e59 <current_measure_channel>
    1906:	90 91 5a 3e 	lds	r25, 0x3E5A	; 0x803e5a <current_measure_channel+0x1>
    190a:	9c 01       	movw	r18, r24
    190c:	22 0f       	add	r18, r18
    190e:	33 1f       	adc	r19, r19
    1910:	e0 91 99 3e 	lds	r30, 0x3E99	; 0x803e99 <qtm_raw_data_measurements_ptr>
    1914:	f0 91 9a 3e 	lds	r31, 0x3E9A	; 0x803e9a <qtm_raw_data_measurements_ptr+0x1>
    1918:	e2 0f       	add	r30, r18
    191a:	f3 1f       	adc	r31, r19
    191c:	40 83       	st	Z, r20
    191e:	51 83       	std	Z+1, r21	; 0x01
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	80 93 59 3e 	sts	0x3E59, r24	; 0x803e59 <current_measure_channel>
    1926:	90 93 5a 3e 	sts	0x3E5A, r25	; 0x803e5a <current_measure_channel+0x1>
    192a:	ae dc       	rcall	.-1700   	; 0x1288 <select_next_channel_to_measure>
    192c:	81 11       	cpse	r24, r1
    192e:	08 c0       	rjmp	.+16     	; 0x1940 <qtm_t81x_ptc_handler_eoc+0x4a>
    1930:	84 e0       	ldi	r24, 0x04	; 4
    1932:	80 93 58 3e 	sts	0x3E58, r24	; 0x803e58 <touch_seq_lib_state>
    1936:	80 91 59 3e 	lds	r24, 0x3E59	; 0x803e59 <current_measure_channel>
    193a:	90 91 5a 3e 	lds	r25, 0x3E5A	; 0x803e5a <current_measure_channel+0x1>
    193e:	d7 cc       	rjmp	.-1618   	; 0x12ee <qtm_measure_node>
    1940:	e0 91 56 3e 	lds	r30, 0x3E56	; 0x803e56 <ptc_seq_measure_complete_pointer>
    1944:	f0 91 57 3e 	lds	r31, 0x3E57	; 0x803e57 <ptc_seq_measure_complete_pointer+0x1>
    1948:	09 94       	ijmp

0000194a <__divmodhi4>:
    194a:	97 fb       	bst	r25, 7
    194c:	07 2e       	mov	r0, r23
    194e:	16 f4       	brtc	.+4      	; 0x1954 <__divmodhi4+0xa>
    1950:	00 94       	com	r0
    1952:	06 d0       	rcall	.+12     	; 0x1960 <__divmodhi4_neg1>
    1954:	77 fd       	sbrc	r23, 7
    1956:	08 d0       	rcall	.+16     	; 0x1968 <__divmodhi4_neg2>
    1958:	0b d0       	rcall	.+22     	; 0x1970 <__udivmodhi4>
    195a:	07 fc       	sbrc	r0, 7
    195c:	05 d0       	rcall	.+10     	; 0x1968 <__divmodhi4_neg2>
    195e:	3e f4       	brtc	.+14     	; 0x196e <__divmodhi4_exit>

00001960 <__divmodhi4_neg1>:
    1960:	90 95       	com	r25
    1962:	81 95       	neg	r24
    1964:	9f 4f       	sbci	r25, 0xFF	; 255
    1966:	08 95       	ret

00001968 <__divmodhi4_neg2>:
    1968:	70 95       	com	r23
    196a:	61 95       	neg	r22
    196c:	7f 4f       	sbci	r23, 0xFF	; 255

0000196e <__divmodhi4_exit>:
    196e:	08 95       	ret

00001970 <__udivmodhi4>:
    1970:	aa 1b       	sub	r26, r26
    1972:	bb 1b       	sub	r27, r27
    1974:	51 e1       	ldi	r21, 0x11	; 17
    1976:	07 c0       	rjmp	.+14     	; 0x1986 <__udivmodhi4_ep>

00001978 <__udivmodhi4_loop>:
    1978:	aa 1f       	adc	r26, r26
    197a:	bb 1f       	adc	r27, r27
    197c:	a6 17       	cp	r26, r22
    197e:	b7 07       	cpc	r27, r23
    1980:	10 f0       	brcs	.+4      	; 0x1986 <__udivmodhi4_ep>
    1982:	a6 1b       	sub	r26, r22
    1984:	b7 0b       	sbc	r27, r23

00001986 <__udivmodhi4_ep>:
    1986:	88 1f       	adc	r24, r24
    1988:	99 1f       	adc	r25, r25
    198a:	5a 95       	dec	r21
    198c:	a9 f7       	brne	.-22     	; 0x1978 <__udivmodhi4_loop>
    198e:	80 95       	com	r24
    1990:	90 95       	com	r25
    1992:	bc 01       	movw	r22, r24
    1994:	cd 01       	movw	r24, r26
    1996:	08 95       	ret

00001998 <_exit>:
    1998:	f8 94       	cli

0000199a <__stop_program>:
    199a:	ff cf       	rjmp	.-2      	; 0x199a <__stop_program>
